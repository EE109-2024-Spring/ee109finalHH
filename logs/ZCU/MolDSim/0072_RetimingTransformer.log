  Transforming Block Block(Const(())) [List() => false, List() => false]
    Transforming Block Block((x463,b5) => x465) [List() => false, List() => false]
    Transforming Block Block((x465) => x466) [List() => false, List() => false]
    Transforming Block Block(Const(())) [List() => false, List() => false]
      Transforming Block Block(Const(())) [List() => false, List() => false]
        Transforming Block Block(Const(())) [List() => true, List() => false]
        Retiming block Block(Const(())):
          x738 = FixSLA(b479,Const(1)) (0.0)
          x739 = FixAdd(x738,b479) (0.2)
          x482 = FixDivSRA(x739,Const(4)) (1.2)
          x483 = FixSLA(x482,Const(4)) (1.4)
          x740 = FixSLA(x482,Const(6)) (1.4)
          x485 = FixSub(x739,x483) (1.6)
          x486 = FixAdd(x485,Const(3)) (2.6)
          x487 = FixAdd(x485,Const(18)) (2.6)
          x488 = FixDivSRA(x487,Const(4)) (3.6)
          x489 = FixSLA(x488,Const(4)) (3.8)
          x741 = FixSLA(x488,Const(6)) (3.8)
          x491 = FixToFix(x740,TRUE,_64,_0) (1.6)
          x492 = DRAMAddress(x468) (0.0)
          x493 = FixAdd(x491,x492) (1.6)
          x494 = SimpleStruct(ArrayBuffer((offset,x493), (size,x741), (isLoad,Const(true)))) (4.0)
          x495 = DRAMIsAlloc(x468) (0.0)
          x496 = StreamOutBankedWrite(x474,ArrayBuffer(x494),ArrayBuffer(Set(x495, b480))) (4.0)
          x497 = SimpleStruct(ArrayBuffer((size,x489), (start,x485), (end,x486))) (4.0)
          x498 = FIFOBankedEnq(x475,ArrayBuffer(x497),ArrayBuffer(Set(Const(true), b480))) (4.0)
        Working on pipeLatencies of result Vector(Const(()), x492, x498, x495, x496), schedule Vector(x738, x739, x482, x483, x740, x485, x486, x487, x488, x489, x741, x491, x492, x493, x494, x495, x496, x497, x498)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x492
        cur: x492, inReduce: false, latency: 0.0
        Computing fullDFS: x498
        Computing fullDFS: x497
        Computing fullDFS: x485
        Computing fullDFS: x739
        Computing fullDFS: x738
        cur: x738, inReduce: false, latency: 0.2
        Computing fullDFS: x483
        Computing fullDFS: x482
        Computing fullDFS: x486
        Computing fullDFS: x489
        Computing fullDFS: x488
        Computing fullDFS: x487
        Computing fullDFS: x495
        cur: x495, inReduce: false, latency: 0.0
        Computing fullDFS: x496
        Computing fullDFS: x494
        Computing fullDFS: x741
        Computing fullDFS: x493
        Computing fullDFS: x491
        Computing fullDFS: x740
        Cycles: Map()
        computing delay lines for Vector(x738, x739, x482, x483, x740, x485, x486, x487, x488, x489, x741, x491, x492, x493, x494, x495, x496, x497, x498) Map(x741 -> 4.0, x492 -> 0.0, x485 -> 2.6, x493 -> 3.6, x488 -> 3.8000000000000003, x489 -> 4.0, x738 -> 0.2, x498 -> 5.0, x494 -> 4.0, x483 -> 1.5999999999999999, x487 -> 3.6, x739 -> 1.2, x497 -> 4.0, x482 -> 1.4, x495 -> 0.0, x740 -> 1.5999999999999999, x486 -> 3.6, x491 -> 1.6, x496 -> 4.0) Map() List()
        [Arrive = Dly - Lat: 0.0 = 0.2 - 0.2] x738 = FixSLA(b479,Const(1))
        ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b479
        ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 1
        [Arrive = Dly - Lat: 0.2 = 1.2 - 1.0] x739 = FixAdd(x738,b479)
        ..[0.0 (-> 0) = 0.2 - (0.2 - 0.0) (-> 0 - 0)] x738 = FixSLA(b479,Const(1))
        ..[0.2 (-> 0) = 0.2 - (0.0 - 0.0) (-> 0 - 0)] b479
        [Arrive = Dly - Lat: 1.2 = 1.4 - 0.2] x482 = FixDivSRA(x739,Const(4))
        ..[0.0 (-> 0) = 1.2 - (1.2 - 0.0) (-> 1 - 1)] x739 = FixAdd(x738,b479)
        ..[1.2 (-> 1) = 1.2 - (0.0 - 0.0) (-> 1 - 0)] 4
        [Arrive = Dly - Lat: 1.4 = 1.5999999999999999 - 0.2] x483 = FixSLA(x482,Const(4))
        ..[0.0 (-> 0) = 1.4 - (1.4 - 0.0) (-> 1 - 1)] x482 = FixDivSRA(x739,Const(4))
        ..[1.4 (-> 1) = 1.4 - (0.0 - 0.0) (-> 1 - 0)] 4
        [Arrive = Dly - Lat: 1.4 = 1.5999999999999999 - 0.2] x740 = FixSLA(x482,Const(6))
        ..[0.0 (-> 0) = 1.4 - (1.4 - 0.0) (-> 1 - 1)] x482 = FixDivSRA(x739,Const(4))
        ..[1.4 (-> 1) = 1.4 - (0.0 - 0.0) (-> 1 - 0)] 6
        [Arrive = Dly - Lat: 1.6 = 2.6 - 1.0] x485 = FixSub(x739,x483)
        ..[0.40000000000000013 (-> 0) = 1.6 - (1.2 - 0.0) (-> 1 - 1)] x739 = FixAdd(x738,b479)
        ..[0.0 (-> 0) = 1.6 - (1.6 - 0.0) (-> 1 - 1)] x483 = FixSLA(x482,Const(4))
        [Arrive = Dly - Lat: 2.6 = 3.6 - 1.0] x486 = FixAdd(x485,Const(3))
        ..[0.0 (-> 0) = 2.6 - (2.6 - 0.0) (-> 2 - 2)] x485 = FixSub(x739,x483)
        ..[2.6 (-> 2) = 2.6 - (0.0 - 0.0) (-> 2 - 0)] 3
        [Arrive = Dly - Lat: 2.6 = 3.6 - 1.0] x487 = FixAdd(x485,Const(18))
        ..[0.0 (-> 0) = 2.6 - (2.6 - 0.0) (-> 2 - 2)] x485 = FixSub(x739,x483)
        ..[2.6 (-> 2) = 2.6 - (0.0 - 0.0) (-> 2 - 0)] 18
        [Arrive = Dly - Lat: 3.6 = 3.8000000000000003 - 0.2] x488 = FixDivSRA(x487,Const(4))
        ..[0.0 (-> 0) = 3.6 - (3.6 - 0.0) (-> 3 - 3)] x487 = FixAdd(x485,Const(18))
        ..[3.6 (-> 3) = 3.6 - (0.0 - 0.0) (-> 3 - 0)] 4
        [Arrive = Dly - Lat: 3.8 = 4.0 - 0.2] x489 = FixSLA(x488,Const(4))
        ..[0.0 (-> 0) = 3.8 - (3.8 - 0.0) (-> 3 - 3)] x488 = FixDivSRA(x487,Const(4))
        ..[3.8 (-> 3) = 3.8 - (0.0 - 0.0) (-> 3 - 0)] 4
        [Arrive = Dly - Lat: 3.8 = 4.0 - 0.2] x741 = FixSLA(x488,Const(6))
        ..[0.0 (-> 0) = 3.8 - (3.8 - 0.0) (-> 3 - 3)] x488 = FixDivSRA(x487,Const(4))
        ..[3.8 (-> 3) = 3.8 - (0.0 - 0.0) (-> 3 - 0)] 6
        [Arrive = Dly - Lat: 1.6 = 1.6 - 0.0] x491 = FixToFix(x740,TRUE,_64,_0)
        ..[0.0 (-> 0) = 1.6 - (1.6 - 0.0) (-> 1 - 1)] x740 = FixSLA(x482,Const(6))
        [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x492 = DRAMAddress(x468)
        [Arrive = Dly - Lat: 1.6 = 3.6 - 2.0] x493 = FixAdd(x491,x492)
        ..[0.0 (-> 0) = 1.6 - (1.6 - 0.0) (-> 1 - 1)] x491 = FixToFix(x740,TRUE,_64,_0)
        ..[1.6 (-> 1) = 1.6 - (0.0 - 0.0) (-> 1 - 0)] x492 = DRAMAddress(x468)
        [Arrive = Dly - Lat: 4.0 = 4.0 - 0.0] x494 = SimpleStruct(ArrayBuffer((offset,x493), (size,x741), (isLoad,Const(true))))
        ..[0.3999999999999999 (-> 1) = 4.0 - (3.6 - 0.0) (-> 4 - 3)] x493 = FixAdd(x491,x492)
        ..[0.0 (-> 0) = 4.0 - (4.0 - 0.0) (-> 4 - 4)] x741 = FixSLA(x488,Const(6))
        ..[4.0 (-> 4) = 4.0 - (0.0 - 0.0) (-> 4 - 0)] true
        [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x495 = DRAMIsAlloc(x468)
        [Arrive = Dly - Lat: 4.0 = 4.0 - 0.0] x496 = StreamOutBankedWrite(x474,ArrayBuffer(x494),ArrayBuffer(Set(x495, b480)))
        ..[0.0 (-> 0) = 4.0 - (4.0 - 0.0) (-> 4 - 4)] x494 = SimpleStruct(ArrayBuffer((offset,x493), (size,x741), (isLoad,Const(true))))
        ..[4.0 (-> 4) = 4.0 - (0.0 - 0.0) (-> 4 - 0)] x495 = DRAMIsAlloc(x468)
        ..[4.0 (-> 4) = 4.0 - (0.0 - 0.0) (-> 4 - 0)] b480
        [Arrive = Dly - Lat: 4.0 = 4.0 - 0.0] x497 = SimpleStruct(ArrayBuffer((size,x489), (start,x485), (end,x486)))
        ..[0.0 (-> 0) = 4.0 - (4.0 - 0.0) (-> 4 - 4)] x489 = FixSLA(x488,Const(4))
        ..[1.4 (-> 2) = 4.0 - (2.6 - 0.0) (-> 4 - 2)] x485 = FixSub(x739,x483)
        ..[0.3999999999999999 (-> 1) = 4.0 - (3.6 - 0.0) (-> 4 - 3)] x486 = FixAdd(x485,Const(3))
        [Arrive = Dly - Lat: 4.0 = 5.0 - 1.0] x498 = FIFOBankedEnq(x475,ArrayBuffer(x497),ArrayBuffer(Set(Const(true), b480)))
        ..[0.0 (-> 0) = 4.0 - (4.0 - 0.0) (-> 4 - 4)] x497 = SimpleStruct(ArrayBuffer((size,x489), (start,x485), (end,x486)))
        ..[4.0 (-> 4) = 4.0 - (0.0 - 0.0) (-> 4 - 0)] true
        ..[4.0 (-> 4) = 4.0 - (0.0 - 0.0) (-> 4 - 0)] b480
          Creating value delay on Const(18) for reader x487 with delay 2: 
          Creating value delay on Const(6) for reader x740 with delay 1: 
          Creating value delay on Const(6) for reader x741 with delay 3: 
          Creating value delay on x492 for reader x493 with delay 1: 
          Creating value delay on x485 for reader x497 with delay 2: 
          Creating value delay on b480 for reader x496 with delay 4: 
          Creating value delay on b480 for reader x498 with delay 4: 
          Creating value delay on x493 for reader x494 with delay 1: 
          Creating value delay on Const(3) for reader x486 with delay 2: 
          Creating value delay on Const(4) for reader x482 with delay 1: 
          Creating value delay on Const(4) for reader x483 with delay 1: 
          Creating value delay on Const(4) for reader x488 with delay 3: 
          Creating value delay on Const(4) for reader x489 with delay 3: 
          Creating value delay on x495 for reader x496 with delay 4: 
          Creating value delay on Const(true) for reader x494 with delay 4: 
          Creating value delay on Const(true) for reader x498 with delay 4: 
          Creating value delay on x486 for reader x497 with delay 1: 
        Transforming Block Block(Const(())) [List() => false, List() => false]
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x508 = FIFOBankedDeq(x475,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) (0.0)
            x509 = VecApply(x508,0) (0.0)
            x510 = FieldApply(x509,start) (0.0)
            x511 = RegWrite(x505,x510,Set()) (0.0)
            x512 = FieldApply(x509,end) (0.0)
            x513 = RegWrite(x506,x512,Set()) (0.0)
            x514 = FieldApply(x509,size) (0.0)
            x515 = RegWrite(x507,x514,Set()) (0.0)
          Working on pipeLatencies of result Vector(Const(()), x511, x515, x508, x513), schedule Vector(x508, x509, x510, x511, x512, x513, x514, x515)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x511
          Computing fullDFS: x510
          Computing fullDFS: x509
          Computing fullDFS: x508
          cur: x508, inReduce: false, latency: 0.0
          Computing fullDFS: x515
          Computing fullDFS: x514
          Computing fullDFS: x513
          Computing fullDFS: x512
          Cycles: Map()
          computing delay lines for Vector(x508, x509, x510, x511, x512, x513, x514, x515) Map(x741 -> 4.0, x511 -> 1.0, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x512 -> 0.0, x493 -> 3.6, x488 -> 3.8000000000000003, x489 -> 4.0, x515 -> 1.0, x738 -> 0.2, x508 -> 0.0, x513 -> 1.0, x498 -> 5.0, x509 -> 0.0, x494 -> 4.0, x483 -> 1.5999999999999999, x487 -> 3.6, x739 -> 1.2, x497 -> 4.0, x482 -> 1.4, x495 -> 0.0, x510 -> 0.0, x740 -> 1.5999999999999999, x486 -> 3.6, x491 -> 1.6, x496 -> 4.0) Map() List()
          [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x508 = FIFOBankedDeq(x475,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] true
          [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x509 = VecApply(x508,0)
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x508 = FIFOBankedDeq(x475,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
          [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x510 = FieldApply(x509,start)
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x509 = VecApply(x508,0)
          [Arrive = Dly - Lat: 0.0 = 1.0 - 1.0] x511 = RegWrite(x505,x510,Set())
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x510 = FieldApply(x509,start)
          [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x512 = FieldApply(x509,end)
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x509 = VecApply(x508,0)
          [Arrive = Dly - Lat: 0.0 = 1.0 - 1.0] x513 = RegWrite(x506,x512,Set())
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x512 = FieldApply(x509,end)
          [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x514 = FieldApply(x509,size)
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x509 = VecApply(x508,0)
          [Arrive = Dly - Lat: 0.0 = 1.0 - 1.0] x515 = RegWrite(x507,x514,Set())
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x514 = FieldApply(x509,size)
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x522 = RegRead(x505) (0.0)
            x523 = FixLeq(x522,b520) (0.0)
            x524 = RegRead(x506) (0.0)
            x525 = FixLst(b520,x524) (0.0)
            x526 = And(x523,x525) (0.4)
            x527 = FixSub(b520,x522) (0.0)
            x528 = StreamInBankedRead(x476,ArrayBuffer(Set(b521, b504))) (0.0)
            x529 = VecApply(x528,0) (1.0)
            x742 = FixSLA(b503,Const(1)) (0.0)
            x743 = FixAdd(x742,b503) (0.2)
            x532 = FixAdd(x743,x527) (1.2)
            x533 = SRAMBankedWrite(x472,Vector(x529),Vector(List(Const(0))),Vector(x532),Vector(Set(x526, b521, b504))) (2.2)
            x534 = SRAMBankedWrite(x471,Vector(x529),Vector(List(Const(0))),Vector(x532),Vector(Set(x526, b521, b504))) (2.2)
            x535 = SRAMBankedWrite(x473,Vector(x529),Vector(List(Const(0))),Vector(x532),Vector(Set(x526, b521, b504))) (2.2)
          Working on pipeLatencies of result Vector(Const(()), x533, x534, x522, x535, x524, x528), schedule Vector(x522, x523, x524, x525, x526, x527, x528, x529, x742, x743, x532, x533, x534, x535)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x533
          Computing fullDFS: x526
          Computing fullDFS: x523
          Computing fullDFS: x522
          cur: x522, inReduce: false, latency: 0.0
          Computing fullDFS: x525
          Computing fullDFS: x524
          cur: x524, inReduce: false, latency: 0.0
          Computing fullDFS: x529
          Computing fullDFS: x528
          cur: x528, inReduce: false, latency: 1.0
          Computing fullDFS: x532
          Computing fullDFS: x527
          Computing fullDFS: x743
          Computing fullDFS: x742
          cur: x742, inReduce: false, latency: 0.2
          Computing fullDFS: x534
          Computing fullDFS: x535
          Cycles: Map()
          computing delay lines for Vector(x522, x523, x524, x525, x526, x527, x528, x529, x742, x743, x532, x533, x534, x535) Map(x523 -> 0.4, x741 -> 4.0, x511 -> 1.0, x533 -> 3.2, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x488 -> 3.8000000000000003, x526 -> 0.6000000000000001, x489 -> 4.0, x515 -> 1.0, x738 -> 0.2, x508 -> 0.0, x513 -> 1.0, x743 -> 1.2, x498 -> 5.0, x509 -> 0.0, x494 -> 4.0, x535 -> 3.2, x483 -> 1.5999999999999999, x487 -> 3.6, x525 -> 0.4, x739 -> 1.2, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x495 -> 0.0, x510 -> 0.0, x532 -> 2.2, x740 -> 1.5999999999999999, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x496 -> 4.0) Map() List()
          [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x522 = RegRead(x505)
          [Arrive = Dly - Lat: 0.0 = 0.4 - 0.4] x523 = FixLeq(x522,b520)
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x522 = RegRead(x505)
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b520
          [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x524 = RegRead(x506)
          [Arrive = Dly - Lat: 0.0 = 0.4 - 0.4] x525 = FixLst(b520,x524)
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b520
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x524 = RegRead(x506)
          [Arrive = Dly - Lat: 0.4 = 0.6000000000000001 - 0.2] x526 = And(x523,x525)
          ..[0.0 (-> 0) = 0.4 - (0.4 - 0.0) (-> 0 - 0)] x523 = FixLeq(x522,b520)
          ..[0.0 (-> 0) = 0.4 - (0.4 - 0.0) (-> 0 - 0)] x525 = FixLst(b520,x524)
          [Arrive = Dly - Lat: 0.0 = 1.0 - 1.0] x527 = FixSub(b520,x522)
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b520
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x522 = RegRead(x505)
          [Arrive = Dly - Lat: 0.0 = 1.0 - 1.0] x528 = StreamInBankedRead(x476,ArrayBuffer(Set(b521, b504)))
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b521
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b504
          [Arrive = Dly - Lat: 1.0 = 1.0 - 0.0] x529 = VecApply(x528,0)
          ..[1.0 (-> 1) = 1.0 - (1.0 - 1.0) (-> 1 - 0)] x528 = StreamInBankedRead(x476,ArrayBuffer(Set(b521, b504)))
          [Arrive = Dly - Lat: 0.0 = 0.2 - 0.2] x742 = FixSLA(b503,Const(1))
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b503
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 1
          [Arrive = Dly - Lat: 0.2 = 1.2 - 1.0] x743 = FixAdd(x742,b503)
          ..[0.0 (-> 0) = 0.2 - (0.2 - 0.0) (-> 0 - 0)] x742 = FixSLA(b503,Const(1))
          ..[0.2 (-> 0) = 0.2 - (0.0 - 0.0) (-> 0 - 0)] b503
          [Arrive = Dly - Lat: 1.2 = 2.2 - 1.0] x532 = FixAdd(x743,x527)
          ..[0.0 (-> 0) = 1.2 - (1.2 - 0.0) (-> 1 - 1)] x743 = FixAdd(x742,b503)
          ..[0.19999999999999996 (-> 0) = 1.2 - (1.0 - 0.0) (-> 1 - 1)] x527 = FixSub(b520,x522)
          [Arrive = Dly - Lat: 2.2 = 3.2 - 1.0] x533 = SRAMBankedWrite(x472,Vector(x529),Vector(List(Const(0))),Vector(x532),Vector(Set(x526, b521, b504)))
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b504
          ..[1.2000000000000002 (-> 1) = 2.2 - (1.0 - 0.0) (-> 2 - 1)] x529 = VecApply(x528,0)
          ..[1.8000000000000003 (-> 2) = 2.2 - (0.6 - 0.2) (-> 2 - 0)] x526 = And(x523,x525)
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] 0
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b521
          ..[0.0 (-> 0) = 2.2 - (2.2 - 0.0) (-> 2 - 2)] x532 = FixAdd(x743,x527)
          [Arrive = Dly - Lat: 2.2 = 3.2 - 1.0] x534 = SRAMBankedWrite(x471,Vector(x529),Vector(List(Const(0))),Vector(x532),Vector(Set(x526, b521, b504)))
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b504
          ..[1.2000000000000002 (-> 1) = 2.2 - (1.0 - 0.0) (-> 2 - 1)] x529 = VecApply(x528,0)
          ..[1.8000000000000003 (-> 2) = 2.2 - (0.6 - 0.2) (-> 2 - 0)] x526 = And(x523,x525)
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] 0
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b521
          ..[0.0 (-> 0) = 2.2 - (2.2 - 0.0) (-> 2 - 2)] x532 = FixAdd(x743,x527)
          [Arrive = Dly - Lat: 2.2 = 3.2 - 1.0] x535 = SRAMBankedWrite(x473,Vector(x529),Vector(List(Const(0))),Vector(x532),Vector(Set(x526, b521, b504)))
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b504
          ..[1.2000000000000002 (-> 1) = 2.2 - (1.0 - 0.0) (-> 2 - 1)] x529 = VecApply(x528,0)
          ..[1.8000000000000003 (-> 2) = 2.2 - (0.6 - 0.2) (-> 2 - 0)] x526 = And(x523,x525)
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] 0
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b521
          ..[0.0 (-> 0) = 2.2 - (2.2 - 0.0) (-> 2 - 2)] x532 = FixAdd(x743,x527)
            Creating value delay on b504 for reader x533 with delay 2: 
            Creating value delay on b504 for reader x534 with delay 2: 
            Creating value delay on b504 for reader x535 with delay 2: 
            Creating value delay on x529 for reader x533 with delay 1: 
            Creating value delay on x529 for reader x534 with delay 1: 
            Creating value delay on x529 for reader x535 with delay 1: 
            Creating value delay on x526 for reader x533 with delay 2: 
            Creating value delay on x526 for reader x534 with delay 2: 
            Creating value delay on x526 for reader x535 with delay 2: 
            Creating value delay on Const(0) for reader x533 with delay 2: 
            Creating value delay on Const(0) for reader x534 with delay 2: 
            Creating value delay on Const(0) for reader x535 with delay 2: 
            Creating value delay on b521 for reader x533 with delay 2: 
            Creating value delay on b521 for reader x534 with delay 2: 
            Creating value delay on b521 for reader x535 with delay 2: 
            Creating value delay on x528 for reader x529 with delay 1: 
      Transforming Block Block(Const(())) [List() => false, List() => false]
        Transforming Block Block((x544) => Const(())) [List() => false, List() => false]
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x744 = FixSLA(b542,Const(1)) (0.0)
            x745 = FixAdd(x744,b542) (0.2)
            x565 = FixAdd(x745,b561) (1.2)
            x566 = SRAMBankedRead(x471,Vector(List(Const(0))),Vector(x565),Vector(Set(b562, b552, b543)),Vec[Fix[TRUE,_10,_22]]) (2.2)
            x567 = VecApply(x566,0) (4.2)
            x746 = FixSLA(b550,Const(1)) (0.0)
            x747 = FixAdd(x746,b550) (0.2)
            x570 = FixAdd(x747,b561) (1.2)
            x571 = SRAMBankedRead(x472,Vector(List(Const(0))),Vector(x570),Vector(Set(b562, b552, b543)),Vec[Fix[TRUE,_10,_22]]) (2.2)
            x572 = VecApply(x571,0) (4.2)
            x573 = FixSub(x567,x572) (4.2)
            x574 = SRAMBankedWrite(x555,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543))) (5.2)
            x575 = SRAMBankedWrite(x554,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543))) (5.2)
            x576 = SRAMBankedWrite(x558,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543))) (5.2)
            x577 = SRAMBankedWrite(x557,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543))) (5.2)
            x578 = SRAMBankedWrite(x556,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543))) (5.2)
          Working on pipeLatencies of result Vector(Const(()), x574, x566, x578, x577, x576, x571, x575), schedule Vector(x744, x745, x565, x566, x567, x746, x747, x570, x571, x572, x573, x574, x575, x576, x577, x578)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x574
          Computing fullDFS: x573
          Computing fullDFS: x567
          Computing fullDFS: x566
          Computing fullDFS: x565
          Computing fullDFS: x745
          Computing fullDFS: x744
          cur: x744, inReduce: false, latency: 0.2
          Computing fullDFS: x572
          Computing fullDFS: x571
          Computing fullDFS: x570
          Computing fullDFS: x747
          Computing fullDFS: x746
          cur: x746, inReduce: false, latency: 0.2
          Computing fullDFS: x578
          Computing fullDFS: x577
          Computing fullDFS: x576
          Computing fullDFS: x575
          Cycles: Map()
          computing delay lines for Vector(x744, x745, x565, x566, x567, x746, x747, x570, x571, x572, x573, x574, x575, x576, x577, x578) Map(x523 -> 0.4, x741 -> 4.0, x511 -> 1.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x570 -> 2.2, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x566 -> 4.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x488 -> 3.8000000000000003, x526 -> 0.6000000000000001, x489 -> 4.0, x515 -> 1.0, x738 -> 0.2, x508 -> 0.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x743 -> 1.2, x577 -> 6.2, x572 -> 4.2, x498 -> 5.0, x567 -> 4.2, x509 -> 0.0, x494 -> 4.0, x535 -> 3.2, x483 -> 1.5999999999999999, x487 -> 3.6, x525 -> 0.4, x739 -> 1.2, x576 -> 6.2, x744 -> 0.2, x571 -> 4.2, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x495 -> 0.0, x510 -> 0.0, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x496 -> 4.0) Map() List()
          [Arrive = Dly - Lat: 0.0 = 0.2 - 0.2] x744 = FixSLA(b542,Const(1))
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b542
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 1
          [Arrive = Dly - Lat: 0.2 = 1.2 - 1.0] x745 = FixAdd(x744,b542)
          ..[0.0 (-> 0) = 0.2 - (0.2 - 0.0) (-> 0 - 0)] x744 = FixSLA(b542,Const(1))
          ..[0.2 (-> 0) = 0.2 - (0.0 - 0.0) (-> 0 - 0)] b542
          [Arrive = Dly - Lat: 1.2 = 2.2 - 1.0] x565 = FixAdd(x745,b561)
          ..[0.0 (-> 0) = 1.2 - (1.2 - 0.0) (-> 1 - 1)] x745 = FixAdd(x744,b542)
          ..[1.2 (-> 1) = 1.2 - (0.0 - 0.0) (-> 1 - 0)] b561
          [Arrive = Dly - Lat: 2.2 = 4.2 - 2.0] x566 = SRAMBankedRead(x471,Vector(List(Const(0))),Vector(x565),Vector(Set(b562, b552, b543)),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 2.2 - (2.2 - 0.0) (-> 2 - 2)] x565 = FixAdd(x745,b561)
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b562
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] 0
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b552
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b543
          [Arrive = Dly - Lat: 4.2 = 4.2 - 0.0] x567 = VecApply(x566,0)
          ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x566 = SRAMBankedRead(x471,Vector(List(Const(0))),Vector(x565),Vector(Set(b562, b552, b543)),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 0.0 = 0.2 - 0.2] x746 = FixSLA(b550,Const(1))
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b550
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 1
          [Arrive = Dly - Lat: 0.2 = 1.2 - 1.0] x747 = FixAdd(x746,b550)
          ..[0.0 (-> 0) = 0.2 - (0.2 - 0.0) (-> 0 - 0)] x746 = FixSLA(b550,Const(1))
          ..[0.2 (-> 0) = 0.2 - (0.0 - 0.0) (-> 0 - 0)] b550
          [Arrive = Dly - Lat: 1.2 = 2.2 - 1.0] x570 = FixAdd(x747,b561)
          ..[0.0 (-> 0) = 1.2 - (1.2 - 0.0) (-> 1 - 1)] x747 = FixAdd(x746,b550)
          ..[1.2 (-> 1) = 1.2 - (0.0 - 0.0) (-> 1 - 0)] b561
          [Arrive = Dly - Lat: 2.2 = 4.2 - 2.0] x571 = SRAMBankedRead(x472,Vector(List(Const(0))),Vector(x570),Vector(Set(b562, b552, b543)),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 2.2 - (2.2 - 0.0) (-> 2 - 2)] x570 = FixAdd(x747,b561)
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b562
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] 0
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b552
          ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b543
          [Arrive = Dly - Lat: 4.2 = 4.2 - 0.0] x572 = VecApply(x571,0)
          ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x571 = SRAMBankedRead(x472,Vector(List(Const(0))),Vector(x570),Vector(Set(b562, b552, b543)),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 4.2 = 5.2 - 1.0] x573 = FixSub(x567,x572)
          ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x567 = VecApply(x566,0)
          ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x572 = VecApply(x571,0)
          [Arrive = Dly - Lat: 5.2 = 6.2 - 1.0] x574 = SRAMBankedWrite(x555,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543)))
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b561
          ..[0.0 (-> 0) = 5.2 - (5.2 - 0.0) (-> 5 - 5)] x573 = FixSub(x567,x572)
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b562
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] 0
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b552
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b543
          [Arrive = Dly - Lat: 5.2 = 6.2 - 1.0] x575 = SRAMBankedWrite(x554,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543)))
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b561
          ..[0.0 (-> 0) = 5.2 - (5.2 - 0.0) (-> 5 - 5)] x573 = FixSub(x567,x572)
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b562
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] 0
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b552
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b543
          [Arrive = Dly - Lat: 5.2 = 6.2 - 1.0] x576 = SRAMBankedWrite(x558,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543)))
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b561
          ..[0.0 (-> 0) = 5.2 - (5.2 - 0.0) (-> 5 - 5)] x573 = FixSub(x567,x572)
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b562
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] 0
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b552
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b543
          [Arrive = Dly - Lat: 5.2 = 6.2 - 1.0] x577 = SRAMBankedWrite(x557,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543)))
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b561
          ..[0.0 (-> 0) = 5.2 - (5.2 - 0.0) (-> 5 - 5)] x573 = FixSub(x567,x572)
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b562
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] 0
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b552
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b543
          [Arrive = Dly - Lat: 5.2 = 6.2 - 1.0] x578 = SRAMBankedWrite(x556,Vector(x573),Vector(List(Const(0))),Vector(b561),Vector(Set(b562, b552, b543)))
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b561
          ..[0.0 (-> 0) = 5.2 - (5.2 - 0.0) (-> 5 - 5)] x573 = FixSub(x567,x572)
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b562
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] 0
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b552
          ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b543
            Creating value delay on b561 for reader x565 with delay 1: 
            Creating value delay on b561 for reader x570 with delay 1: 
            Creating value delay on b561 for reader x574 with delay 5: 
            Creating value delay on b561 for reader x575 with delay 5: 
            Creating value delay on b561 for reader x576 with delay 5: 
            Creating value delay on b561 for reader x577 with delay 5: 
            Creating value delay on b561 for reader x578 with delay 5: 
            Creating value delay on b562 for reader x566 with delay 2: 
            Creating value delay on b562 for reader x571 with delay 2: 
            Creating value delay on b562 for reader x574 with delay 5: 
            Creating value delay on b562 for reader x575 with delay 5: 
            Creating value delay on b562 for reader x576 with delay 5: 
            Creating value delay on b562 for reader x577 with delay 5: 
            Creating value delay on b562 for reader x578 with delay 5: 
            Creating value delay on Const(0) for reader x566 with delay 2: 
            Creating value delay on Const(0) for reader x571 with delay 2: 
            Creating value delay on Const(0) for reader x574 with delay 5: 
            Creating value delay on Const(0) for reader x575 with delay 5: 
            Creating value delay on Const(0) for reader x576 with delay 5: 
            Creating value delay on Const(0) for reader x577 with delay 5: 
            Creating value delay on Const(0) for reader x578 with delay 5: 
            Creating value delay on b552 for reader x566 with delay 2: 
            Creating value delay on b552 for reader x571 with delay 2: 
            Creating value delay on b552 for reader x574 with delay 5: 
            Creating value delay on b552 for reader x575 with delay 5: 
            Creating value delay on b552 for reader x576 with delay 5: 
            Creating value delay on b552 for reader x577 with delay 5: 
            Creating value delay on b552 for reader x578 with delay 5: 
            Creating value delay on b543 for reader x566 with delay 2: 
            Creating value delay on b543 for reader x571 with delay 2: 
            Creating value delay on b543 for reader x574 with delay 5: 
            Creating value delay on b543 for reader x575 with delay 5: 
            Creating value delay on b543 for reader x576 with delay 5: 
            Creating value delay on b543 for reader x577 with delay 5: 
            Creating value delay on b543 for reader x578 with delay 5: 
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x581 = SRAMBankedRead(x554,Vector(List(Const(0))),Vector(Const(0)),Vector(Set()),Vec[Fix[TRUE,_10,_22]]) (0.0)
            x582 = VecApply(x581,0) (2.0)
            x584 = SRAMBankedRead(x555,Vector(List(Const(0))),Vector(Const(1)),Vector(Set()),Vec[Fix[TRUE,_10,_22]]) (0.0)
            x585 = VecApply(x584,0) (2.0)
            x586 = FixMul(x585,x585) (2.0)
            x748 = FixFMA(x582,x582,x586) (8.0)
            x588 = SRAMBankedRead(x556,Vector(List(Const(0))),Vector(Const(2)),Vector(Set()),Vec[Fix[TRUE,_10,_22]]) (0.0)
            x589 = VecApply(x588,0) (2.0)
            x749 = FixFMA(x589,x589,x748) (14.0)
            x592 = SRAMBankedWrite(x580,Vector(x749),Vector(List(Const(0))),Vector(Const(0)),Vector(Set())) (20.0)
          Working on pipeLatencies of result Vector(Const(()), x584, x581, x588, x592), schedule Vector(x581, x582, x584, x585, x586, x748, x588, x589, x749, x592)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x584
          cur: x584, inReduce: false, latency: 2.0
          Computing fullDFS: x581
          cur: x581, inReduce: false, latency: 2.0
          Computing fullDFS: x588
          cur: x588, inReduce: false, latency: 2.0
          Computing fullDFS: x592
          Computing fullDFS: x749
          Computing fullDFS: x748
          Computing fullDFS: x582
          Computing fullDFS: x586
          Computing fullDFS: x585
          Computing fullDFS: x589
          Cycles: Map()
          computing delay lines for Vector(x581, x582, x584, x585, x586, x748, x588, x589, x749, x592) Map(x523 -> 0.4, x582 -> 2.0, x741 -> 4.0, x511 -> 1.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x570 -> 2.2, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x566 -> 4.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x488 -> 3.8000000000000003, x526 -> 0.6000000000000001, x489 -> 4.0, x515 -> 1.0, x738 -> 0.2, x508 -> 0.0, x586 -> 8.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x584 -> 2.0, x743 -> 1.2, x577 -> 6.2, x572 -> 4.2, x498 -> 5.0, x567 -> 4.2, x509 -> 0.0, x494 -> 4.0, x535 -> 3.2, x483 -> 1.5999999999999999, x589 -> 2.0, x487 -> 3.6, x749 -> 20.0, x525 -> 0.4, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x744 -> 0.2, x571 -> 4.2, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x510 -> 0.0, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List()
          [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x581 = SRAMBankedRead(x554,Vector(List(Const(0))),Vector(Const(0)),Vector(Set()),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x582 = VecApply(x581,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x581 = SRAMBankedRead(x554,Vector(List(Const(0))),Vector(Const(0)),Vector(Set()),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x584 = SRAMBankedRead(x555,Vector(List(Const(0))),Vector(Const(1)),Vector(Set()),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 1
          [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x585 = VecApply(x584,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x584 = SRAMBankedRead(x555,Vector(List(Const(0))),Vector(Const(1)),Vector(Set()),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 2.0 = 8.0 - 6.0] x586 = FixMul(x585,x585)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x585 = VecApply(x584,0)
          [Arrive = Dly - Lat: 8.0 = 14.0 - 6.0] x748 = FixFMA(x582,x582,x586)
          ..[6.0 (-> 6) = 8.0 - (2.0 - 0.0) (-> 8 - 2)] x582 = VecApply(x581,0)
          ..[0.0 (-> 0) = 8.0 - (8.0 - 0.0) (-> 8 - 8)] x586 = FixMul(x585,x585)
          [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x588 = SRAMBankedRead(x556,Vector(List(Const(0))),Vector(Const(2)),Vector(Set()),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 2
          [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x589 = VecApply(x588,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x588 = SRAMBankedRead(x556,Vector(List(Const(0))),Vector(Const(2)),Vector(Set()),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 14.0 = 20.0 - 6.0] x749 = FixFMA(x589,x589,x748)
          ..[12.0 (-> 12) = 14.0 - (2.0 - 0.0) (-> 14 - 2)] x589 = VecApply(x588,0)
          ..[0.0 (-> 0) = 14.0 - (14.0 - 0.0) (-> 14 - 14)] x748 = FixFMA(x582,x582,x586)
          [Arrive = Dly - Lat: 20.0 = 21.0 - 1.0] x592 = SRAMBankedWrite(x580,Vector(x749),Vector(List(Const(0))),Vector(Const(0)),Vector(Set()))
          ..[0.0 (-> 0) = 20.0 - (20.0 - 0.0) (-> 20 - 20)] x749 = FixFMA(x589,x589,x748)
          ..[20.0 (-> 20) = 20.0 - (0.0 - 0.0) (-> 20 - 0)] 0
            Creating value delay on x582 for reader x748 with delay 6: 
            Creating value delay on Const(0) for reader x592 with delay 20: 
            Creating value delay on x589 for reader x749 with delay 12: 
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x597 = SRAMBankedRead(x580,Vector(List(Const(0))),Vector(Const(0)),Vector(Set()),Vec[Fix[TRUE,_10,_22]]) (0.0)
            x598 = VecApply(x597,0) (2.0)
            x599 = FixLst(Const(0),x598) (2.0)
            x600 = FixLst(Const(1),x598) (2.0)
            x601 = And(x599,x600) (2.4)
            x602 = Not(x601) (2.6)
            x603 = RegWrite(x595,x601,Set()) (2.6)
            x604 = RegWrite(x596,x602,Set()) (2.8)
          Working on pipeLatencies of result Vector(Const(()), x597, x603, x604), schedule Vector(x597, x598, x599, x600, x601, x602, x603, x604)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x597
          cur: x597, inReduce: false, latency: 2.0
          Computing fullDFS: x603
          Computing fullDFS: x601
          Computing fullDFS: x599
          Computing fullDFS: x598
          Computing fullDFS: x600
          Computing fullDFS: x604
          Computing fullDFS: x602
          Cycles: Map()
          computing delay lines for Vector(x597, x598, x599, x600, x601, x602, x603, x604) Map(x523 -> 0.4, x582 -> 2.0, x741 -> 4.0, x511 -> 1.0, x597 -> 2.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x570 -> 2.2, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x598 -> 2.0, x566 -> 4.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x488 -> 3.8000000000000003, x526 -> 0.6000000000000001, x489 -> 4.0, x515 -> 1.0, x738 -> 0.2, x508 -> 0.0, x586 -> 8.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x601 -> 2.6, x584 -> 2.0, x743 -> 1.2, x577 -> 6.2, x572 -> 4.2, x498 -> 5.0, x604 -> 3.8, x567 -> 4.2, x509 -> 0.0, x599 -> 2.4, x494 -> 4.0, x535 -> 3.2, x483 -> 1.5999999999999999, x589 -> 2.0, x487 -> 3.6, x749 -> 20.0, x525 -> 0.4, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x744 -> 0.2, x600 -> 2.4, x571 -> 4.2, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x510 -> 0.0, x603 -> 3.6, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List()
          [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x597 = SRAMBankedRead(x580,Vector(List(Const(0))),Vector(Const(0)),Vector(Set()),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x598 = VecApply(x597,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x597 = SRAMBankedRead(x580,Vector(List(Const(0))),Vector(Const(0)),Vector(Set()),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 2.0 = 2.4 - 0.4] x599 = FixLst(Const(0),x598)
          ..[2.0 (-> 2) = 2.0 - (0.0 - 0.0) (-> 2 - 0)] 0
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x598 = VecApply(x597,0)
          [Arrive = Dly - Lat: 2.0 = 2.4 - 0.4] x600 = FixLst(Const(1),x598)
          ..[2.0 (-> 2) = 2.0 - (0.0 - 0.0) (-> 2 - 0)] 1
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x598 = VecApply(x597,0)
          [Arrive = Dly - Lat: 2.4 = 2.6 - 0.2] x601 = And(x599,x600)
          ..[0.0 (-> 0) = 2.4 - (2.4 - 0.0) (-> 2 - 2)] x599 = FixLst(Const(0),x598)
          ..[0.0 (-> 0) = 2.4 - (2.4 - 0.0) (-> 2 - 2)] x600 = FixLst(Const(1),x598)
          [Arrive = Dly - Lat: 2.6 = 2.8000000000000003 - 0.2] x602 = Not(x601)
          ..[0.20000000000000018 (-> 0) = 2.6 - (2.6 - 0.2) (-> 2 - 2)] x601 = And(x599,x600)
          [Arrive = Dly - Lat: 2.6 = 3.6 - 1.0] x603 = RegWrite(x595,x601,Set())
          ..[0.20000000000000018 (-> 0) = 2.6 - (2.6 - 0.2) (-> 2 - 2)] x601 = And(x599,x600)
          [Arrive = Dly - Lat: 2.8 = 3.8 - 1.0] x604 = RegWrite(x596,x602,Set())
          ..[0.19999999999999973 (-> 0) = 2.8 - (2.8 - 0.2) (-> 2 - 2)] x602 = Not(x601)
            Creating value delay on Const(1) for reader x600 with delay 2: 
            Creating value delay on Const(0) for reader x599 with delay 2: 
          Transforming Block Block(x620) [List() => false, List() => false]
            Transforming Block Block(x618) [List() => true, List() => false]
            Retiming block Block(x618):
              x608 = RegRead(x595) (0.0)
              x609 = SRAMBankedRead(x580,Vector(List(Const(0))),Vector(Const(0)),Vector(Set(x608)),Vec[Fix[TRUE,_10,_22]]) (0.0)
              x610 = VecApply(x609,0) (2.0)
              x611 = FixDiv(Const(100),x610) (2.0)
              x612 = FixDiv(x611,x610) (22.0)
              x613 = FixDiv(x612,x610) (42.0)
              x614 = FixDiv(x613,x610) (62.0)
              x615 = FixDiv(x614,x610) (82.0)
              x616 = FixDiv(Const(10),x610) (2.0)
              x617 = FixDiv(x616,x610) (22.0)
              x618 = FixSub(x615,x617) (102.0)
            Working on pipeLatencies of result Vector(x618, x608, x609), schedule Vector(x608, x609, x610, x611, x612, x613, x614, x615, x616, x617, x618)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: x618
            Computing fullDFS: x615
            Computing fullDFS: x610
            Computing fullDFS: x609
            Computing fullDFS: x608
            cur: x608, inReduce: false, latency: 0.0
            Computing fullDFS: x614
            Computing fullDFS: x613
            Computing fullDFS: x612
            Computing fullDFS: x611
            Computing fullDFS: x617
            Computing fullDFS: x616
            Cycles: Map()
            computing delay lines for Vector(x608, x609, x610, x611, x612, x613, x614, x615, x616, x617, x618) Map(x523 -> 0.4, x582 -> 2.0, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x570 -> 2.2, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x598 -> 2.0, x566 -> 4.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x526 -> 0.6000000000000001, x489 -> 4.0, x515 -> 1.0, x738 -> 0.2, x508 -> 0.0, x586 -> 8.0, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x601 -> 2.6, x584 -> 2.0, x743 -> 1.2, x577 -> 6.2, x572 -> 4.2, x611 -> 22.0, x498 -> 5.0, x604 -> 3.8, x567 -> 4.2, x509 -> 0.0, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x608 -> 0.0, x589 -> 2.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x525 -> 0.4, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x510 -> 0.0, x603 -> 3.6, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List()
            [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x608 = RegRead(x595)
            [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x609 = SRAMBankedRead(x580,Vector(List(Const(0))),Vector(Const(0)),Vector(Set(x608)),Vec[Fix[TRUE,_10,_22]])
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x608 = RegRead(x595)
            [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x610 = VecApply(x609,0)
            ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x609 = SRAMBankedRead(x580,Vector(List(Const(0))),Vector(Const(0)),Vector(Set(x608)),Vec[Fix[TRUE,_10,_22]])
            [Arrive = Dly - Lat: 2.0 = 22.0 - 20.0] x611 = FixDiv(Const(100),x610)
            ..[2.0 (-> 2) = 2.0 - (0.0 - 0.0) (-> 2 - 0)] 100
            ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x610 = VecApply(x609,0)
            [Arrive = Dly - Lat: 22.0 = 42.0 - 20.0] x612 = FixDiv(x611,x610)
            ..[0.0 (-> 0) = 22.0 - (22.0 - 0.0) (-> 22 - 22)] x611 = FixDiv(Const(100),x610)
            ..[20.0 (-> 20) = 22.0 - (2.0 - 0.0) (-> 22 - 2)] x610 = VecApply(x609,0)
            [Arrive = Dly - Lat: 42.0 = 62.0 - 20.0] x613 = FixDiv(x612,x610)
            ..[0.0 (-> 0) = 42.0 - (42.0 - 0.0) (-> 42 - 42)] x612 = FixDiv(x611,x610)
            ..[40.0 (-> 40) = 42.0 - (2.0 - 0.0) (-> 42 - 2)] x610 = VecApply(x609,0)
            [Arrive = Dly - Lat: 62.0 = 82.0 - 20.0] x614 = FixDiv(x613,x610)
            ..[0.0 (-> 0) = 62.0 - (62.0 - 0.0) (-> 62 - 62)] x613 = FixDiv(x612,x610)
            ..[60.0 (-> 60) = 62.0 - (2.0 - 0.0) (-> 62 - 2)] x610 = VecApply(x609,0)
            [Arrive = Dly - Lat: 82.0 = 102.0 - 20.0] x615 = FixDiv(x614,x610)
            ..[0.0 (-> 0) = 82.0 - (82.0 - 0.0) (-> 82 - 82)] x614 = FixDiv(x613,x610)
            ..[80.0 (-> 80) = 82.0 - (2.0 - 0.0) (-> 82 - 2)] x610 = VecApply(x609,0)
            [Arrive = Dly - Lat: 2.0 = 22.0 - 20.0] x616 = FixDiv(Const(10),x610)
            ..[2.0 (-> 2) = 2.0 - (0.0 - 0.0) (-> 2 - 0)] 10
            ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x610 = VecApply(x609,0)
            [Arrive = Dly - Lat: 22.0 = 42.0 - 20.0] x617 = FixDiv(x616,x610)
            ..[0.0 (-> 0) = 22.0 - (22.0 - 0.0) (-> 22 - 22)] x616 = FixDiv(Const(10),x610)
            ..[20.0 (-> 20) = 22.0 - (2.0 - 0.0) (-> 22 - 2)] x610 = VecApply(x609,0)
            [Arrive = Dly - Lat: 102.0 = 103.0 - 1.0] x618 = FixSub(x615,x617)
            ..[0.0 (-> 0) = 102.0 - (102.0 - 0.0) (-> 102 - 102)] x615 = FixDiv(x614,x610)
            ..[60.0 (-> 60) = 102.0 - (42.0 - 0.0) (-> 102 - 42)] x617 = FixDiv(x616,x610)
              Creating value delay on Const(100) for reader x611 with delay 2: 
              Creating value delay on x617 for reader x618 with delay 60: 
              Creating value delay on Const(10) for reader x616 with delay 2: 
              Creating value delay on x610 for reader x612 with delay 20: 
              Creating value delay on x610 for reader x617 with delay 20: 
              Creating value delay on x610 for reader x613 with delay 40: 
              Creating value delay on x610 for reader x614 with delay 60: 
              Creating value delay on x610 for reader x615 with delay 80: 
            Transforming Block Block(Const(90)) [List() => true, List() => false]
            Retiming block Block(Const(90)):
            Working on pipeLatencies of result Vector(Const(90)), schedule Vector()
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Cycles: Map()
            computing delay lines for Vector() Map(x523 -> 0.4, x582 -> 2.0, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x570 -> 2.2, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x598 -> 2.0, x566 -> 4.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x526 -> 0.6000000000000001, x489 -> 4.0, x515 -> 1.0, x738 -> 0.2, x508 -> 0.0, x586 -> 8.0, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x601 -> 2.6, x584 -> 2.0, x743 -> 1.2, x577 -> 6.2, x572 -> 4.2, x611 -> 22.0, x498 -> 5.0, x604 -> 3.8, x567 -> 4.2, x509 -> 0.0, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x608 -> 0.0, x589 -> 2.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x525 -> 0.4, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x510 -> 0.0, x603 -> 3.6, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List()
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x622 = SRAMBankedWrite(x594,Vector(x621),Vector(List(Const(0))),Vector(Const(0)),Vector(Set())) (0.0)
          Working on pipeLatencies of result Vector(Const(()), x622), schedule Vector(x622)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x622
          cur: x622, inReduce: false, latency: 1.0
          Cycles: Map()
          computing delay lines for Vector(x622) Map(x523 -> 0.4, x582 -> 2.0, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x570 -> 2.2, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x598 -> 2.0, x566 -> 4.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x526 -> 0.6000000000000001, x489 -> 4.0, x622 -> 1.0, x515 -> 1.0, x738 -> 0.2, x508 -> 0.0, x586 -> 8.0, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x601 -> 2.6, x584 -> 2.0, x743 -> 1.2, x577 -> 6.2, x572 -> 4.2, x611 -> 22.0, x498 -> 5.0, x604 -> 3.8, x567 -> 4.2, x509 -> 0.0, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x608 -> 0.0, x589 -> 2.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x525 -> 0.4, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x510 -> 0.0, x603 -> 3.6, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List()
          [Arrive = Dly - Lat: 0.0 = 1.0 - 1.0] x622 = SRAMBankedWrite(x594,Vector(x621),Vector(List(Const(0))),Vector(Const(0)),Vector(Set()))
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x621 = Switch(List(x735, x736),Block(x620))
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x628 = SRAMBankedRead(x557,Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)),Vec[Fix[TRUE,_10,_22]]) (0.0)
            x629 = VecApply(x628,0) (2.0)
            x630 = FixMul(x629,Const(0.099999904632568359375)) (2.0)
            x631 = SRAMBankedRead(x594,Vector(List(Const(0))),Vector(Const(0)),Vector(Set(b627, b552, b543)),Vec[Fix[TRUE,_10,_22]]) (0.0)
            x632 = VecApply(x631,0) (2.0)
            x633 = FixMul(x630,x632) (8.0)
            x634 = SRAMBankedWrite(x555,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543))) (14.0)
            x635 = SRAMBankedWrite(x554,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543))) (14.0)
            x636 = SRAMBankedWrite(x558,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543))) (14.0)
            x637 = SRAMBankedWrite(x557,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543))) (14.0)
            x638 = SRAMBankedWrite(x556,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543))) (14.0)
          Working on pipeLatencies of result Vector(x628, Const(()), x638, x634, x637, x631, x636, x635), schedule Vector(x628, x629, x630, x631, x632, x633, x634, x635, x636, x637, x638)
          Memories with both reads and writes in this scope: Set(x557)
          NonConflictSets(x628, x637): Set()
          NonConflictSets(x628, x637): Set()
          Found Cycle: x628, x637
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x557,x628,x637)), Map(x630 -> List(AccumTriple(x557,x628,x637)), x633 -> List(AccumTriple(x557,x628,x637)), x629 -> List(AccumTriple(x557,x628,x637)), x637 -> List(AccumTriple(x557,x628,x637)), x628 -> List(AccumTriple(x557,x628,x637)))
          Computing fullDFS: x628
          cur: x628, inReduce: true, latency: 2.0
          Known Cycles: List(AccumTriple(x557,x628,x637))
          Computing fullDFS: Const(())
          Computing fullDFS: x638
          Computing fullDFS: x633
          Computing fullDFS: x630
          Computing fullDFS: x629
          Computing fullDFS: x632
          Computing fullDFS: x631
          cur: x631, inReduce: false, latency: 2.0
          Computing fullDFS: x634
          Computing fullDFS: x637
          Computing fullDFS: x636
          Computing fullDFS: x635
          Cycle #0: write: x637, cycle: x628, x628, x629, x630, x633, x637
          Cycles: Map(x636 -> Vector(x628, x629, x630, x633, x636), x630 -> Vector(x628, x629, x630), x633 -> Vector(x628, x629, x630, x633), x635 -> Vector(x628, x629, x630, x633, x635), x638 -> Vector(x628, x629, x630, x633, x638), x629 -> Vector(x628, x629), x634 -> Vector(x628, x629, x630, x633, x634), x637 -> Vector(x628, x628, x629, x630, x633, x637), x628 -> List(x628))
          pseudo cycles for x557:
          Access: x628 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(5),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(5),0,0,Vector(0),Vector(0)))
          Pushing x628 = SRAMBankedRead(x557,Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
          Access: x637 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(5),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(5),0,0,Vector(0),Vector(0)))
          Pushing x637 = SRAMBankedWrite(x557,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543))) by 0.0 to 15.0 due to muxing.
          computing delay lines for Vector(x628, x629, x630, x631, x632, x633, x634, x635, x636, x637, x638) Map(x629 -> 2.0, x628 -> 2.0, x523 -> 0.4, x582 -> 2.0, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x570 -> 2.2, x638 -> 15.0, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x634 -> 15.0, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x598 -> 2.0, x630 -> 8.0, x566 -> 4.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x526 -> 0.6000000000000001, x637 -> 15.0, x489 -> 4.0, x622 -> 1.0, x515 -> 1.0, x738 -> 0.2, x633 -> 14.0, x508 -> 0.0, x586 -> 8.0, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x601 -> 2.6, x584 -> 2.0, x743 -> 1.2, x577 -> 6.2, x572 -> 4.2, x611 -> 22.0, x498 -> 5.0, x604 -> 3.8, x567 -> 4.2, x509 -> 0.0, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x631 -> 2.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x636 -> 15.0, x608 -> 0.0, x589 -> 2.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x525 -> 0.4, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x632 -> 2.0, x510 -> 0.0, x603 -> 3.6, x635 -> 15.0, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List(x628, x637, x628, x628, x629, x630, x633, x637)
          [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x628 = SRAMBankedRead(x557,Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b552
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b626
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b627
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b543
          [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x629 = VecApply(x628,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x628 = SRAMBankedRead(x557,Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 2.0 = 8.0 - 6.0] x630 = FixMul(x629,Const(0.099999904632568359375))
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x629 = VecApply(x628,0)
          ..[2.0 (-> 2) = 2.0 - (0.0 - 0.0) (-> 2 - 0)] 0.099999904632568359375
          [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x631 = SRAMBankedRead(x594,Vector(List(Const(0))),Vector(Const(0)),Vector(Set(b627, b552, b543)),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b552
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b627
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b543
          [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x632 = VecApply(x631,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x631 = SRAMBankedRead(x594,Vector(List(Const(0))),Vector(Const(0)),Vector(Set(b627, b552, b543)),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 8.0 = 14.0 - 6.0] x633 = FixMul(x630,x632)
          ..[0.0 (-> 0) = 8.0 - (8.0 - 0.0) (-> 8 - 8)] x630 = FixMul(x629,Const(0.099999904632568359375))
          ..[6.0 (-> 6) = 8.0 - (2.0 - 0.0) (-> 8 - 2)] x632 = VecApply(x631,0)
          [Arrive = Dly - Lat: 14.0 = 15.0 - 1.0] x634 = SRAMBankedWrite(x555,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)))
          ..[0.0 (-> 0) = 14.0 - (14.0 - 0.0) (-> 14 - 14)] x633 = FixMul(x630,x632)
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] 0
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b552
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b626
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b627
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b543
          [Arrive = Dly - Lat: 14.0 = 15.0 - 1.0] x635 = SRAMBankedWrite(x554,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)))
          ..[0.0 (-> 0) = 14.0 - (14.0 - 0.0) (-> 14 - 14)] x633 = FixMul(x630,x632)
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] 0
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b552
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b626
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b627
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b543
          [Arrive = Dly - Lat: 14.0 = 15.0 - 1.0] x636 = SRAMBankedWrite(x558,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)))
          ..[0.0 (-> 0) = 14.0 - (14.0 - 0.0) (-> 14 - 14)] x633 = FixMul(x630,x632)
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] 0
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b552
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b626
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b627
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b543
          [Arrive = Dly - Lat: 14.0 = 15.0 - 1.0] x637 = SRAMBankedWrite(x557,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)))
          ..[0.0 (-> 0) = 14.0 - (14.0 - 0.0) (-> 14 - 14)] x633 = FixMul(x630,x632)
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] 0
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b552
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b626
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b627
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b543
          [Arrive = Dly - Lat: 14.0 = 15.0 - 1.0] x638 = SRAMBankedWrite(x556,Vector(x633),Vector(List(Const(0))),Vector(b626),Vector(Set(b627, b552, b543)))
          ..[0.0 (-> 0) = 14.0 - (14.0 - 0.0) (-> 14 - 14)] x633 = FixMul(x630,x632)
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] 0
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b552
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b626
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b627
          ..[14.0 (-> 14) = 14.0 - (0.0 - 0.0) (-> 14 - 0)] b543
            Creating value delay on Const(0.099999904632568359375) for reader x630 with delay 2: 
            Creating value delay on Const(0) for reader x634 with delay 14: 
            Creating value delay on Const(0) for reader x635 with delay 14: 
            Creating value delay on Const(0) for reader x636 with delay 14: 
            Creating value delay on Const(0) for reader x637 with delay 14: 
            Creating value delay on Const(0) for reader x638 with delay 14: 
            Creating value delay on b552 for reader x634 with delay 14: 
            Creating value delay on b552 for reader x635 with delay 14: 
            Creating value delay on b552 for reader x636 with delay 14: 
            Creating value delay on b552 for reader x637 with delay 14: 
            Creating value delay on b552 for reader x638 with delay 14: 
            Creating value delay on b626 for reader x634 with delay 14: 
            Creating value delay on b626 for reader x635 with delay 14: 
            Creating value delay on b626 for reader x636 with delay 14: 
            Creating value delay on b626 for reader x637 with delay 14: 
            Creating value delay on b626 for reader x638 with delay 14: 
            Creating value delay on b627 for reader x634 with delay 14: 
            Creating value delay on b627 for reader x635 with delay 14: 
            Creating value delay on b627 for reader x636 with delay 14: 
            Creating value delay on b627 for reader x637 with delay 14: 
            Creating value delay on b627 for reader x638 with delay 14: 
            Creating value delay on x632 for reader x633 with delay 6: 
            Creating value delay on b543 for reader x634 with delay 14: 
            Creating value delay on b543 for reader x635 with delay 14: 
            Creating value delay on b543 for reader x636 with delay 14: 
            Creating value delay on b543 for reader x637 with delay 14: 
            Creating value delay on b543 for reader x638 with delay 14: 
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x640 = SRAMBankedRead(x558,Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)),Vec[Fix[TRUE,_10,_22]]) (0.0)
            x641 = VecApply(x640,0) (2.0)
            x642 = SRAMBankedRead(x544,Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)),Vec[Fix[TRUE,_10,_22]]) (0.0)
            x643 = VecApply(x642,0) (2.0)
            x647 = FixEql(b550,Const(0)) (0.0)
            x648 = FixAdd(x641,x643) (2.0)
            x649 = Mux(x647,x641,x648) (3.0)
            x650 = SRAMBankedWrite(x545,Vector(x649),Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543))) (3.5)
            x651 = SRAMBankedWrite(x544,Vector(x649),Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543))) (3.5)
          Working on pipeLatencies of result Vector(Const(()), x651, x650, x642, x640), schedule Vector(x640, x641, x642, x643, x647, x648, x649, x650, x651)
          Memories with both reads and writes in this scope: Set(x544)
          NonConflictSets(x642, x651): Set()
          NonConflictSets(x642, x651): Set()
          Found Cycle: x642, x651
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x544,x642,x651)), Map(x648 -> List(AccumTriple(x544,x642,x651)), x651 -> List(AccumTriple(x544,x642,x651)), x642 -> List(AccumTriple(x544,x642,x651)), x649 -> List(AccumTriple(x544,x642,x651)), x643 -> List(AccumTriple(x544,x642,x651)))
          Computing fullDFS: Const(())
          Computing fullDFS: x651
          Computing fullDFS: x642
          cur: x642, inReduce: true, latency: 2.0
          Known Cycles: List(AccumTriple(x544,x642,x651))
          Computing fullDFS: x649
          Computing fullDFS: x641
          Computing fullDFS: x640
          cur: x640, inReduce: false, latency: 2.0
          Computing fullDFS: x647
          cur: x647, inReduce: false, latency: 0.2
          Computing fullDFS: x648
          Computing fullDFS: x643
          Computing fullDFS: x650
          Cycle #0: write: x651, cycle: x642, x642, x643, x648, x649, x651
          Cycles: Map(x648 -> Vector(x642, x643, x648), x651 -> Vector(x642, x642, x643, x648, x649, x651), x642 -> List(x642), x650 -> Vector(x642, x643, x648, x649, x650), x649 -> Vector(x642, x643, x648, x649), x643 -> Vector(x642, x643))
          pseudo cycles for x544:
          Access: x642 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x642 = SRAMBankedRead(x544,Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
          Access: x651 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x651 = SRAMBankedWrite(x544,Vector(x649),Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543))) by 0.0 to 4.5 due to muxing.
          computing delay lines for Vector(x640, x641, x642, x643, x647, x648, x649, x650, x651) Map(x629 -> 2.0, x628 -> 2.0, x523 -> 0.4, x582 -> 2.0, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x651 -> 4.5, x570 -> 2.2, x638 -> 15.0, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x634 -> 15.0, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x598 -> 2.0, x630 -> 8.0, x566 -> 4.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x650 -> 4.5, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x642 -> 2.0, x526 -> 0.6000000000000001, x637 -> 15.0, x489 -> 4.0, x622 -> 1.0, x647 -> 0.2, x515 -> 1.0, x738 -> 0.2, x633 -> 14.0, x508 -> 0.0, x586 -> 8.0, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x601 -> 2.6, x584 -> 2.0, x743 -> 1.2, x577 -> 6.2, x641 -> 2.0, x572 -> 4.2, x611 -> 22.0, x498 -> 5.0, x604 -> 3.8, x567 -> 4.2, x509 -> 0.0, x649 -> 3.5, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x631 -> 2.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x636 -> 15.0, x608 -> 0.0, x589 -> 2.0, x648 -> 3.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x525 -> 0.4, x640 -> 2.0, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x643 -> 2.0, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x632 -> 2.0, x510 -> 0.0, x603 -> 3.6, x635 -> 15.0, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List(x628, x637, x628, x628, x629, x630, x633, x637, x642, x651, x642, x642, x643, x648, x649, x651)
          [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x640 = SRAMBankedRead(x558,Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b551
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b553
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b543
          [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x641 = VecApply(x640,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x640 = SRAMBankedRead(x558,Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x642 = SRAMBankedRead(x544,Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)),Vec[Fix[TRUE,_10,_22]])
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b551
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b553
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b543
          [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x643 = VecApply(x642,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x642 = SRAMBankedRead(x544,Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)),Vec[Fix[TRUE,_10,_22]])
          [Arrive = Dly - Lat: 0.0 = 0.2 - 0.2] x647 = FixEql(b550,Const(0))
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b550
          ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
          [Arrive = Dly - Lat: 2.0 = 3.0 - 1.0] x648 = FixAdd(x641,x643)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x641 = VecApply(x640,0)
          ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x643 = VecApply(x642,0)
          [Arrive = Dly - Lat: 3.0 = 3.5 - 0.5] x649 = Mux(x647,x641,x648)
          ..[2.8 (-> 3) = 3.0 - (0.2 - 0.0) (-> 3 - 0)] x647 = FixEql(b550,Const(0))
          ..[1.0 (-> 1) = 3.0 - (2.0 - 0.0) (-> 3 - 2)] x641 = VecApply(x640,0)
          ..[0.0 (-> 0) = 3.0 - (3.0 - 0.0) (-> 3 - 3)] x648 = FixAdd(x641,x643)
          [Arrive = Dly - Lat: 3.5 = 4.5 - 1.0] x650 = SRAMBankedWrite(x545,Vector(x649),Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)))
          ..[3.5 (-> 3) = 3.5 - (0.0 - 0.0) (-> 3 - 0)] b551
          ..[3.5 (-> 3) = 3.5 - (0.0 - 0.0) (-> 3 - 0)] 0
          ..[0.5 (-> 0) = 3.5 - (3.5 - 0.5) (-> 3 - 3)] x649 = Mux(x647,x641,x648)
          ..[3.5 (-> 3) = 3.5 - (0.0 - 0.0) (-> 3 - 0)] b553
          ..[3.5 (-> 3) = 3.5 - (0.0 - 0.0) (-> 3 - 0)] b543
          [Arrive = Dly - Lat: 3.5 = 4.5 - 1.0] x651 = SRAMBankedWrite(x544,Vector(x649),Vector(List(Const(0))),Vector(b551),Vector(Set(b553, b543)))
          ..[3.5 (-> 3) = 3.5 - (0.0 - 0.0) (-> 3 - 0)] b551
          ..[3.5 (-> 3) = 3.5 - (0.0 - 0.0) (-> 3 - 0)] 0
          ..[0.5 (-> 0) = 3.5 - (3.5 - 0.5) (-> 3 - 3)] x649 = Mux(x647,x641,x648)
          ..[3.5 (-> 3) = 3.5 - (0.0 - 0.0) (-> 3 - 0)] b553
          ..[3.5 (-> 3) = 3.5 - (0.0 - 0.0) (-> 3 - 0)] b543
            Creating value delay on b551 for reader x650 with delay 3: 
            Creating value delay on b551 for reader x651 with delay 3: 
            Creating value delay on x647 for reader x649 with delay 3: 
            Creating value delay on Const(0) for reader x650 with delay 3: 
            Creating value delay on Const(0) for reader x651 with delay 3: 
            Creating value delay on x641 for reader x649 with delay 1: 
            Creating value delay on b553 for reader x650 with delay 3: 
            Creating value delay on b553 for reader x651 with delay 3: 
            Creating value delay on b543 for reader x650 with delay 3: 
            Creating value delay on b543 for reader x651 with delay 3: 
        Transforming Block Block(Const(())) [List() => true, List() => false]
        Retiming block Block(Const(())):
          x658 = SRAMBankedRead(x545,Vector(List(Const(0))),Vector(b656),Vector(Set(b657, b543)),Vec[Fix[TRUE,_10,_22]]) (0.0)
          x659 = VecApply(x658,0) (2.0)
          x750 = FixSLA(b542,Const(1)) (0.0)
          x751 = FixAdd(x750,b542) (0.2)
          x662 = FixAdd(x751,b656) (1.2)
          x663 = SRAMBankedRead(x473,Vector(List(Const(0))),Vector(x662),Vector(Set(b657, b543)),Vec[Fix[TRUE,_10,_22]]) (2.2)
          x664 = VecApply(x663,0) (4.2)
          x665 = FixAdd(x659,x664) (4.2)
          x666 = SRAMBankedWrite(x539,Vector(x665),Vector(List(Const(0))),Vector(x662),Vector(Set(b657, b543))) (5.2)
        Working on pipeLatencies of result Vector(Const(()), x658, x663, x666), schedule Vector(x658, x659, x750, x751, x662, x663, x664, x665, x666)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x658
        cur: x658, inReduce: false, latency: 2.0
        Computing fullDFS: x663
        Computing fullDFS: x662
        Computing fullDFS: x751
        Computing fullDFS: x750
        cur: x750, inReduce: false, latency: 0.2
        Computing fullDFS: x666
        Computing fullDFS: x665
        Computing fullDFS: x659
        Computing fullDFS: x664
        Cycles: Map()
        computing delay lines for Vector(x658, x659, x750, x751, x662, x663, x664, x665, x666) Map(x629 -> 2.0, x628 -> 2.0, x666 -> 6.2, x523 -> 0.4, x582 -> 2.0, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x651 -> 4.5, x570 -> 2.2, x751 -> 1.2, x638 -> 15.0, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x634 -> 15.0, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x598 -> 2.0, x630 -> 8.0, x566 -> 4.2, x665 -> 5.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x650 -> 4.5, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x642 -> 2.0, x526 -> 0.6000000000000001, x637 -> 15.0, x489 -> 4.0, x622 -> 1.0, x647 -> 0.2, x515 -> 1.0, x738 -> 0.2, x633 -> 14.0, x508 -> 0.0, x586 -> 8.0, x662 -> 2.2, x750 -> 0.2, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x601 -> 2.6, x584 -> 2.0, x743 -> 1.2, x577 -> 6.2, x641 -> 2.0, x572 -> 4.2, x611 -> 22.0, x498 -> 5.0, x604 -> 3.8, x567 -> 4.2, x509 -> 0.0, x649 -> 3.5, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x631 -> 2.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x636 -> 15.0, x608 -> 0.0, x658 -> 2.0, x589 -> 2.0, x663 -> 4.2, x648 -> 3.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x525 -> 0.4, x640 -> 2.0, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x643 -> 2.0, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x632 -> 2.0, x510 -> 0.0, x603 -> 3.6, x664 -> 4.2, x635 -> 15.0, x532 -> 2.2, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x486 -> 3.6, x659 -> 2.0, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List(x628, x637, x628, x628, x629, x630, x633, x637, x642, x651, x642, x642, x643, x648, x649, x651)
        [Arrive = Dly - Lat: 0.0 = 2.0 - 2.0] x658 = SRAMBankedRead(x545,Vector(List(Const(0))),Vector(b656),Vector(Set(b657, b543)),Vec[Fix[TRUE,_10,_22]])
        ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b657
        ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 0
        ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b656
        ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b543
        [Arrive = Dly - Lat: 2.0 = 2.0 - 0.0] x659 = VecApply(x658,0)
        ..[0.0 (-> 0) = 2.0 - (2.0 - 0.0) (-> 2 - 2)] x658 = SRAMBankedRead(x545,Vector(List(Const(0))),Vector(b656),Vector(Set(b657, b543)),Vec[Fix[TRUE,_10,_22]])
        [Arrive = Dly - Lat: 0.0 = 0.2 - 0.2] x750 = FixSLA(b542,Const(1))
        ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b542
        ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 1
        [Arrive = Dly - Lat: 0.2 = 1.2 - 1.0] x751 = FixAdd(x750,b542)
        ..[0.0 (-> 0) = 0.2 - (0.2 - 0.0) (-> 0 - 0)] x750 = FixSLA(b542,Const(1))
        ..[0.2 (-> 0) = 0.2 - (0.0 - 0.0) (-> 0 - 0)] b542
        [Arrive = Dly - Lat: 1.2 = 2.2 - 1.0] x662 = FixAdd(x751,b656)
        ..[0.0 (-> 0) = 1.2 - (1.2 - 0.0) (-> 1 - 1)] x751 = FixAdd(x750,b542)
        ..[1.2 (-> 1) = 1.2 - (0.0 - 0.0) (-> 1 - 0)] b656
        [Arrive = Dly - Lat: 2.2 = 4.2 - 2.0] x663 = SRAMBankedRead(x473,Vector(List(Const(0))),Vector(x662),Vector(Set(b657, b543)),Vec[Fix[TRUE,_10,_22]])
        ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b657
        ..[0.0 (-> 0) = 2.2 - (2.2 - 0.0) (-> 2 - 2)] x662 = FixAdd(x751,b656)
        ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] 0
        ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b543
        [Arrive = Dly - Lat: 4.2 = 4.2 - 0.0] x664 = VecApply(x663,0)
        ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x663 = SRAMBankedRead(x473,Vector(List(Const(0))),Vector(x662),Vector(Set(b657, b543)),Vec[Fix[TRUE,_10,_22]])
        [Arrive = Dly - Lat: 4.2 = 5.2 - 1.0] x665 = FixAdd(x659,x664)
        ..[2.2 (-> 2) = 4.2 - (2.0 - 0.0) (-> 4 - 2)] x659 = VecApply(x658,0)
        ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x664 = VecApply(x663,0)
        [Arrive = Dly - Lat: 5.2 = 6.2 - 1.0] x666 = SRAMBankedWrite(x539,Vector(x665),Vector(List(Const(0))),Vector(x662),Vector(Set(b657, b543)))
        ..[0.0 (-> 0) = 5.2 - (5.2 - 0.0) (-> 5 - 5)] x665 = FixAdd(x659,x664)
        ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b657
        ..[3.0 (-> 3) = 5.2 - (2.2 - 0.0) (-> 5 - 2)] x662 = FixAdd(x751,b656)
        ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] 0
        ..[5.2 (-> 5) = 5.2 - (0.0 - 0.0) (-> 5 - 0)] b543
          Creating value delay on b657 for reader x663 with delay 2: 
          Creating value delay on b657 for reader x666 with delay 5: 
          Creating value delay on x662 for reader x666 with delay 3: 
          Creating value delay on Const(0) for reader x663 with delay 2: 
          Creating value delay on Const(0) for reader x666 with delay 5: 
          Creating value delay on b656 for reader x662 with delay 1: 
          Creating value delay on x659 for reader x665 with delay 2: 
          Creating value delay on b543 for reader x663 with delay 2: 
          Creating value delay on b543 for reader x666 with delay 5: 
      Transforming Block Block(Const(())) [List() => false, List() => false]
        Transforming Block Block(Const(())) [List() => false, List() => false]
          Transforming Block Block(Const(())) [List() => false, List() => false]
            Transforming Block Block(Const(())) [List() => true, List() => false]
            Retiming block Block(Const(())):
              x752 = FixSLA(b674,Const(1)) (0.0)
              x753 = FixAdd(x752,b674) (0.2)
              x680 = FixDivSRA(x753,Const(4)) (1.2)
              x681 = FixSLA(x680,Const(4)) (1.4)
              x754 = FixSLA(x680,Const(6)) (1.4)
              x683 = FixSub(x753,x681) (1.6)
              x684 = FixAdd(x683,Const(3)) (2.6)
              x685 = FixAdd(x683,Const(18)) (2.6)
              x686 = FixDivSRA(x685,Const(4)) (3.6)
              x687 = FixSLA(x686,Const(4)) (3.8)
              x755 = FixSLA(x686,Const(6)) (3.8)
              x689 = FixToFix(x754,TRUE,_64,_0) (1.6)
              x690 = DRAMAddress(x470) (0.0)
              x691 = FixAdd(x689,x690) (1.6)
              x692 = SimpleStruct(ArrayBuffer((offset,x691), (size,x755), (isLoad,Const(false)))) (4.0)
              x693 = DRAMIsAlloc(x470) (0.0)
              x694 = StreamOutBankedWrite(x669,ArrayBuffer(x692),ArrayBuffer(Set(x693))) (4.0)
              x695 = RegWrite(x676,x683,Set()) (2.6)
              x696 = RegWrite(x677,x684,Set()) (3.6)
              x697 = RegWrite(x678,x687,Set()) (4.0)
            Working on pipeLatencies of result Vector(Const(()), x693, x697, x694, x695, x690, x696), schedule Vector(x752, x753, x680, x681, x754, x683, x684, x685, x686, x687, x755, x689, x690, x691, x692, x693, x694, x695, x696, x697)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x693
            cur: x693, inReduce: false, latency: 0.0
            Computing fullDFS: x697
            Computing fullDFS: x687
            Computing fullDFS: x686
            Computing fullDFS: x685
            Computing fullDFS: x683
            Computing fullDFS: x753
            Computing fullDFS: x752
            cur: x752, inReduce: false, latency: 0.2
            Computing fullDFS: x681
            Computing fullDFS: x680
            Computing fullDFS: x694
            Computing fullDFS: x692
            Computing fullDFS: x755
            Computing fullDFS: x691
            Computing fullDFS: x689
            Computing fullDFS: x754
            Computing fullDFS: x690
            cur: x690, inReduce: false, latency: 0.0
            Computing fullDFS: x695
            Computing fullDFS: x696
            Computing fullDFS: x684
            Cycles: Map()
            computing delay lines for Vector(x752, x753, x680, x681, x754, x683, x684, x685, x686, x687, x755, x689, x690, x691, x692, x693, x694, x695, x696, x697) Map(x629 -> 2.0, x628 -> 2.0, x666 -> 6.2, x523 -> 0.4, x582 -> 2.0, x683 -> 2.6, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x747 -> 1.2, x565 -> 2.2, x651 -> 4.5, x570 -> 2.2, x751 -> 1.2, x638 -> 15.0, x492 -> 0.0, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x687 -> 4.0, x634 -> 15.0, x692 -> 4.0, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x746 -> 0.2, x598 -> 2.0, x693 -> 0.0, x630 -> 8.0, x566 -> 4.2, x665 -> 5.2, x522 -> 0.0, x493 -> 3.6, x742 -> 0.2, x578 -> 6.2, x697 -> 5.0, x650 -> 4.5, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x753 -> 1.2, x686 -> 3.8000000000000003, x642 -> 2.0, x526 -> 0.6000000000000001, x637 -> 15.0, x489 -> 4.0, x622 -> 1.0, x647 -> 0.2, x515 -> 1.0, x738 -> 0.2, x633 -> 14.0, x508 -> 0.0, x586 -> 8.0, x662 -> 2.2, x750 -> 0.2, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x689 -> 1.6, x601 -> 2.6, x584 -> 2.0, x694 -> 4.0, x743 -> 1.2, x577 -> 6.2, x641 -> 2.0, x572 -> 4.2, x611 -> 22.0, x498 -> 5.0, x604 -> 3.8, x681 -> 1.5999999999999999, x567 -> 4.2, x509 -> 0.0, x649 -> 3.5, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x631 -> 2.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x685 -> 3.6, x636 -> 15.0, x695 -> 3.6, x608 -> 0.0, x658 -> 2.0, x589 -> 2.0, x680 -> 1.4, x663 -> 4.2, x648 -> 3.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x754 -> 1.5999999999999999, x525 -> 0.4, x690 -> 0.0, x640 -> 2.0, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x643 -> 2.0, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x632 -> 2.0, x510 -> 0.0, x684 -> 3.6, x752 -> 0.2, x603 -> 3.6, x664 -> 4.2, x635 -> 15.0, x532 -> 2.2, x696 -> 4.6, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x691 -> 3.6, x486 -> 3.6, x659 -> 2.0, x755 -> 4.0, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0) Map() List(x628, x637, x628, x628, x629, x630, x633, x637, x642, x651, x642, x642, x643, x648, x649, x651)
            [Arrive = Dly - Lat: 0.0 = 0.2 - 0.2] x752 = FixSLA(b674,Const(1))
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b674
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 1
            [Arrive = Dly - Lat: 0.2 = 1.2 - 1.0] x753 = FixAdd(x752,b674)
            ..[0.0 (-> 0) = 0.2 - (0.2 - 0.0) (-> 0 - 0)] x752 = FixSLA(b674,Const(1))
            ..[0.2 (-> 0) = 0.2 - (0.0 - 0.0) (-> 0 - 0)] b674
            [Arrive = Dly - Lat: 1.2 = 1.4 - 0.2] x680 = FixDivSRA(x753,Const(4))
            ..[0.0 (-> 0) = 1.2 - (1.2 - 0.0) (-> 1 - 1)] x753 = FixAdd(x752,b674)
            ..[1.2 (-> 1) = 1.2 - (0.0 - 0.0) (-> 1 - 0)] 4
            [Arrive = Dly - Lat: 1.4 = 1.5999999999999999 - 0.2] x681 = FixSLA(x680,Const(4))
            ..[0.0 (-> 0) = 1.4 - (1.4 - 0.0) (-> 1 - 1)] x680 = FixDivSRA(x753,Const(4))
            ..[1.4 (-> 1) = 1.4 - (0.0 - 0.0) (-> 1 - 0)] 4
            [Arrive = Dly - Lat: 1.4 = 1.5999999999999999 - 0.2] x754 = FixSLA(x680,Const(6))
            ..[0.0 (-> 0) = 1.4 - (1.4 - 0.0) (-> 1 - 1)] x680 = FixDivSRA(x753,Const(4))
            ..[1.4 (-> 1) = 1.4 - (0.0 - 0.0) (-> 1 - 0)] 6
            [Arrive = Dly - Lat: 1.6 = 2.6 - 1.0] x683 = FixSub(x753,x681)
            ..[0.40000000000000013 (-> 0) = 1.6 - (1.2 - 0.0) (-> 1 - 1)] x753 = FixAdd(x752,b674)
            ..[0.0 (-> 0) = 1.6 - (1.6 - 0.0) (-> 1 - 1)] x681 = FixSLA(x680,Const(4))
            [Arrive = Dly - Lat: 2.6 = 3.6 - 1.0] x684 = FixAdd(x683,Const(3))
            ..[0.0 (-> 0) = 2.6 - (2.6 - 0.0) (-> 2 - 2)] x683 = FixSub(x753,x681)
            ..[2.6 (-> 2) = 2.6 - (0.0 - 0.0) (-> 2 - 0)] 3
            [Arrive = Dly - Lat: 2.6 = 3.6 - 1.0] x685 = FixAdd(x683,Const(18))
            ..[0.0 (-> 0) = 2.6 - (2.6 - 0.0) (-> 2 - 2)] x683 = FixSub(x753,x681)
            ..[2.6 (-> 2) = 2.6 - (0.0 - 0.0) (-> 2 - 0)] 18
            [Arrive = Dly - Lat: 3.6 = 3.8000000000000003 - 0.2] x686 = FixDivSRA(x685,Const(4))
            ..[0.0 (-> 0) = 3.6 - (3.6 - 0.0) (-> 3 - 3)] x685 = FixAdd(x683,Const(18))
            ..[3.6 (-> 3) = 3.6 - (0.0 - 0.0) (-> 3 - 0)] 4
            [Arrive = Dly - Lat: 3.8 = 4.0 - 0.2] x687 = FixSLA(x686,Const(4))
            ..[0.0 (-> 0) = 3.8 - (3.8 - 0.0) (-> 3 - 3)] x686 = FixDivSRA(x685,Const(4))
            ..[3.8 (-> 3) = 3.8 - (0.0 - 0.0) (-> 3 - 0)] 4
            [Arrive = Dly - Lat: 3.8 = 4.0 - 0.2] x755 = FixSLA(x686,Const(6))
            ..[0.0 (-> 0) = 3.8 - (3.8 - 0.0) (-> 3 - 3)] x686 = FixDivSRA(x685,Const(4))
            ..[3.8 (-> 3) = 3.8 - (0.0 - 0.0) (-> 3 - 0)] 6
            [Arrive = Dly - Lat: 1.6 = 1.6 - 0.0] x689 = FixToFix(x754,TRUE,_64,_0)
            ..[0.0 (-> 0) = 1.6 - (1.6 - 0.0) (-> 1 - 1)] x754 = FixSLA(x680,Const(6))
            [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x690 = DRAMAddress(x470)
            [Arrive = Dly - Lat: 1.6 = 3.6 - 2.0] x691 = FixAdd(x689,x690)
            ..[0.0 (-> 0) = 1.6 - (1.6 - 0.0) (-> 1 - 1)] x689 = FixToFix(x754,TRUE,_64,_0)
            ..[1.6 (-> 1) = 1.6 - (0.0 - 0.0) (-> 1 - 0)] x690 = DRAMAddress(x470)
            [Arrive = Dly - Lat: 4.0 = 4.0 - 0.0] x692 = SimpleStruct(ArrayBuffer((offset,x691), (size,x755), (isLoad,Const(false))))
            ..[0.3999999999999999 (-> 1) = 4.0 - (3.6 - 0.0) (-> 4 - 3)] x691 = FixAdd(x689,x690)
            ..[0.0 (-> 0) = 4.0 - (4.0 - 0.0) (-> 4 - 4)] x755 = FixSLA(x686,Const(6))
            ..[4.0 (-> 4) = 4.0 - (0.0 - 0.0) (-> 4 - 0)] false
            [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x693 = DRAMIsAlloc(x470)
            [Arrive = Dly - Lat: 4.0 = 4.0 - 0.0] x694 = StreamOutBankedWrite(x669,ArrayBuffer(x692),ArrayBuffer(Set(x693)))
            ..[0.0 (-> 0) = 4.0 - (4.0 - 0.0) (-> 4 - 4)] x692 = SimpleStruct(ArrayBuffer((offset,x691), (size,x755), (isLoad,Const(false))))
            ..[4.0 (-> 4) = 4.0 - (0.0 - 0.0) (-> 4 - 0)] x693 = DRAMIsAlloc(x470)
            [Arrive = Dly - Lat: 2.6 = 3.6 - 1.0] x695 = RegWrite(x676,x683,Set())
            ..[0.0 (-> 0) = 2.6 - (2.6 - 0.0) (-> 2 - 2)] x683 = FixSub(x753,x681)
            [Arrive = Dly - Lat: 3.6 = 4.6 - 1.0] x696 = RegWrite(x677,x684,Set())
            ..[0.0 (-> 0) = 3.6 - (3.6 - 0.0) (-> 3 - 3)] x684 = FixAdd(x683,Const(3))
            [Arrive = Dly - Lat: 4.0 = 5.0 - 1.0] x697 = RegWrite(x678,x687,Set())
            ..[0.0 (-> 0) = 4.0 - (4.0 - 0.0) (-> 4 - 4)] x687 = FixSLA(x686,Const(4))
              Creating value delay on Const(18) for reader x685 with delay 2: 
              Creating value delay on Const(6) for reader x754 with delay 1: 
              Creating value delay on Const(6) for reader x755 with delay 3: 
              Creating value delay on x693 for reader x694 with delay 4: 
              Creating value delay on Const(3) for reader x684 with delay 2: 
              Creating value delay on Const(4) for reader x680 with delay 1: 
              Creating value delay on Const(4) for reader x681 with delay 1: 
              Creating value delay on Const(4) for reader x686 with delay 3: 
              Creating value delay on Const(4) for reader x687 with delay 3: 
              Creating value delay on x690 for reader x691 with delay 1: 
              Creating value delay on Const(false) for reader x692 with delay 4: 
              Creating value delay on x691 for reader x692 with delay 1: 
            Transforming Block Block(Const(())) [List() => true, List() => false]
            Retiming block Block(Const(())):
              x704 = RegRead(x676) (0.0)
              x705 = FixLeq(x704,b702) (0.0)
              x706 = RegRead(x677) (0.0)
              x707 = FixLst(b702,x706) (0.0)
              x708 = And(x705,x707) (0.4)
              x709 = FixSub(b702,x704) (0.0)
              x756 = FixSLA(b674,Const(1)) (0.0)
              x757 = FixAdd(x756,b674) (0.2)
              x712 = FixAdd(x757,x709) (1.2)
              x713 = SRAMBankedRead(x539,Vector(List(Const(0))),Vector(x712),Vector(Set(x708, b703)),Vec[Fix[TRUE,_10,_22]]) (2.2)
              x714 = VecApply(x713,0) (4.2)
              x715 = SimpleStruct(ArrayBuffer((_1,x714), (_2,x708))) (4.2)
              x716 = StreamOutBankedWrite(x670,ArrayBuffer(x715),ArrayBuffer(Set(b703))) (4.2)
            Working on pipeLatencies of result Vector(Const(()), x706, x713, x704, x716), schedule Vector(x704, x705, x706, x707, x708, x709, x756, x757, x712, x713, x714, x715, x716)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x706
            cur: x706, inReduce: false, latency: 0.0
            Computing fullDFS: x713
            Computing fullDFS: x708
            Computing fullDFS: x705
            Computing fullDFS: x704
            cur: x704, inReduce: false, latency: 0.0
            Computing fullDFS: x707
            Computing fullDFS: x712
            Computing fullDFS: x709
            Computing fullDFS: x757
            Computing fullDFS: x756
            cur: x756, inReduce: false, latency: 0.2
            Computing fullDFS: x716
            Computing fullDFS: x715
            Computing fullDFS: x714
            Cycles: Map()
            computing delay lines for Vector(x704, x705, x706, x707, x708, x709, x756, x757, x712, x713, x714, x715, x716) Map(x629 -> 2.0, x628 -> 2.0, x666 -> 6.2, x523 -> 0.4, x582 -> 2.0, x683 -> 2.6, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x715 -> 4.2, x747 -> 1.2, x709 -> 1.0, x565 -> 2.2, x651 -> 4.5, x570 -> 2.2, x751 -> 1.2, x638 -> 15.0, x492 -> 0.0, x756 -> 0.2, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x687 -> 4.0, x634 -> 15.0, x692 -> 4.0, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x714 -> 4.2, x746 -> 0.2, x598 -> 2.0, x693 -> 0.0, x630 -> 8.0, x566 -> 4.2, x665 -> 5.2, x522 -> 0.0, x493 -> 3.6, x757 -> 1.2, x742 -> 0.2, x578 -> 6.2, x697 -> 5.0, x650 -> 4.5, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x753 -> 1.2, x686 -> 3.8000000000000003, x642 -> 2.0, x526 -> 0.6000000000000001, x637 -> 15.0, x489 -> 4.0, x706 -> 0.0, x622 -> 1.0, x647 -> 0.2, x515 -> 1.0, x738 -> 0.2, x633 -> 14.0, x508 -> 0.0, x586 -> 8.0, x662 -> 2.2, x750 -> 0.2, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x689 -> 1.6, x601 -> 2.6, x584 -> 2.0, x694 -> 4.0, x743 -> 1.2, x577 -> 6.2, x641 -> 2.0, x572 -> 4.2, x611 -> 22.0, x713 -> 4.2, x498 -> 5.0, x704 -> 0.0, x604 -> 3.8, x681 -> 1.5999999999999999, x567 -> 4.2, x509 -> 0.0, x649 -> 3.5, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x631 -> 2.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x685 -> 3.6, x636 -> 15.0, x695 -> 3.6, x608 -> 0.0, x658 -> 2.0, x589 -> 2.0, x680 -> 1.4, x663 -> 4.2, x648 -> 3.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x754 -> 1.5999999999999999, x525 -> 0.4, x712 -> 2.2, x690 -> 0.0, x640 -> 2.0, x705 -> 0.4, x707 -> 0.4, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x643 -> 2.0, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x632 -> 2.0, x510 -> 0.0, x684 -> 3.6, x716 -> 4.2, x752 -> 0.2, x603 -> 3.6, x664 -> 4.2, x635 -> 15.0, x532 -> 2.2, x696 -> 4.6, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x691 -> 3.6, x486 -> 3.6, x659 -> 2.0, x755 -> 4.0, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0, x708 -> 0.6000000000000001) Map() List(x628, x637, x628, x628, x629, x630, x633, x637, x642, x651, x642, x642, x643, x648, x649, x651)
            [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x704 = RegRead(x676)
            [Arrive = Dly - Lat: 0.0 = 0.4 - 0.4] x705 = FixLeq(x704,b702)
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x704 = RegRead(x676)
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b702
            [Arrive = Dly - Lat: 0.0 = 0.0 - 0.0] x706 = RegRead(x677)
            [Arrive = Dly - Lat: 0.0 = 0.4 - 0.4] x707 = FixLst(b702,x706)
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b702
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x706 = RegRead(x677)
            [Arrive = Dly - Lat: 0.4 = 0.6000000000000001 - 0.2] x708 = And(x705,x707)
            ..[0.0 (-> 0) = 0.4 - (0.4 - 0.0) (-> 0 - 0)] x705 = FixLeq(x704,b702)
            ..[0.0 (-> 0) = 0.4 - (0.4 - 0.0) (-> 0 - 0)] x707 = FixLst(b702,x706)
            [Arrive = Dly - Lat: 0.0 = 1.0 - 1.0] x709 = FixSub(b702,x704)
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b702
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] x704 = RegRead(x676)
            [Arrive = Dly - Lat: 0.0 = 0.2 - 0.2] x756 = FixSLA(b674,Const(1))
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] b674
            ..[0.0 (-> 0) = 0.0 - (0.0 - 0.0) (-> 0 - 0)] 1
            [Arrive = Dly - Lat: 0.2 = 1.2 - 1.0] x757 = FixAdd(x756,b674)
            ..[0.0 (-> 0) = 0.2 - (0.2 - 0.0) (-> 0 - 0)] x756 = FixSLA(b674,Const(1))
            ..[0.2 (-> 0) = 0.2 - (0.0 - 0.0) (-> 0 - 0)] b674
            [Arrive = Dly - Lat: 1.2 = 2.2 - 1.0] x712 = FixAdd(x757,x709)
            ..[0.0 (-> 0) = 1.2 - (1.2 - 0.0) (-> 1 - 1)] x757 = FixAdd(x756,b674)
            ..[0.19999999999999996 (-> 0) = 1.2 - (1.0 - 0.0) (-> 1 - 1)] x709 = FixSub(b702,x704)
            [Arrive = Dly - Lat: 2.2 = 4.2 - 2.0] x713 = SRAMBankedRead(x539,Vector(List(Const(0))),Vector(x712),Vector(Set(x708, b703)),Vec[Fix[TRUE,_10,_22]])
            ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] 0
            ..[0.0 (-> 0) = 2.2 - (2.2 - 0.0) (-> 2 - 2)] x712 = FixAdd(x757,x709)
            ..[2.2 (-> 2) = 2.2 - (0.0 - 0.0) (-> 2 - 0)] b703
            ..[1.8000000000000003 (-> 2) = 2.2 - (0.6 - 0.2) (-> 2 - 0)] x708 = And(x705,x707)
            [Arrive = Dly - Lat: 4.2 = 4.2 - 0.0] x714 = VecApply(x713,0)
            ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x713 = SRAMBankedRead(x539,Vector(List(Const(0))),Vector(x712),Vector(Set(x708, b703)),Vec[Fix[TRUE,_10,_22]])
            [Arrive = Dly - Lat: 4.2 = 4.2 - 0.0] x715 = SimpleStruct(ArrayBuffer((_1,x714), (_2,x708)))
            ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x714 = VecApply(x713,0)
            ..[3.8000000000000003 (-> 4) = 4.2 - (0.6 - 0.2) (-> 4 - 0)] x708 = And(x705,x707)
            [Arrive = Dly - Lat: 4.2 = 4.2 - 0.0] x716 = StreamOutBankedWrite(x670,ArrayBuffer(x715),ArrayBuffer(Set(b703)))
            ..[0.0 (-> 0) = 4.2 - (4.2 - 0.0) (-> 4 - 4)] x715 = SimpleStruct(ArrayBuffer((_1,x714), (_2,x708)))
            ..[4.2 (-> 4) = 4.2 - (0.0 - 0.0) (-> 4 - 0)] b703
              Creating value delay on x708 for reader x713 with delay 2: 
              Creating value delay on x708 for reader x715 with delay 4: 
              Creating value delay on b703 for reader x713 with delay 2: 
              Creating value delay on b703 for reader x716 with delay 4: 
              Creating value delay on Const(0) for reader x713 with delay 2: 
          Transforming Block Block(Const(())) [List() => true, List() => false]
          Retiming block Block(Const(())):
            x720 = StreamInBankedRead(x671,ArrayBuffer(Set())) (0.0)
          Working on pipeLatencies of result Vector(Const(()), x720), schedule Vector(x720)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x720
          cur: x720, inReduce: false, latency: 1.0
          Cycles: Map()
          computing delay lines for Vector(x720) Map(x629 -> 2.0, x628 -> 2.0, x666 -> 6.2, x523 -> 0.4, x582 -> 2.0, x683 -> 2.6, x741 -> 4.0, x511 -> 1.0, x614 -> 82.0, x597 -> 2.0, x533 -> 3.2, x715 -> 4.2, x747 -> 1.2, x709 -> 1.0, x565 -> 2.2, x651 -> 4.5, x570 -> 2.2, x751 -> 1.2, x638 -> 15.0, x492 -> 0.0, x756 -> 0.2, x485 -> 2.6, x514 -> 0.0, x574 -> 6.2, x602 -> 2.8000000000000003, x687 -> 4.0, x634 -> 15.0, x692 -> 4.0, x527 -> 1.0, x512 -> 0.0, x529 -> 1.0, x534 -> 3.2, x714 -> 4.2, x746 -> 0.2, x598 -> 2.0, x693 -> 0.0, x630 -> 8.0, x566 -> 4.2, x665 -> 5.2, x522 -> 0.0, x493 -> 3.6, x757 -> 1.2, x742 -> 0.2, x578 -> 6.2, x697 -> 5.0, x650 -> 4.5, x615 -> 102.0, x610 -> 2.0, x488 -> 3.8000000000000003, x753 -> 1.2, x686 -> 3.8000000000000003, x642 -> 2.0, x526 -> 0.6000000000000001, x637 -> 15.0, x489 -> 4.0, x706 -> 0.0, x622 -> 1.0, x647 -> 0.2, x515 -> 1.0, x738 -> 0.2, x633 -> 14.0, x508 -> 0.0, x586 -> 8.0, x662 -> 2.2, x750 -> 0.2, x618 -> 103.0, x513 -> 1.0, x745 -> 1.2, x573 -> 5.2, x689 -> 1.6, x601 -> 2.6, x584 -> 2.0, x694 -> 4.0, x743 -> 1.2, x577 -> 6.2, x641 -> 2.0, x572 -> 4.2, x611 -> 22.0, x713 -> 4.2, x498 -> 5.0, x704 -> 0.0, x604 -> 3.8, x681 -> 1.5999999999999999, x567 -> 4.2, x509 -> 0.0, x649 -> 3.5, x616 -> 22.0, x599 -> 2.4, x494 -> 4.0, x631 -> 2.0, x535 -> 3.2, x609 -> 2.0, x483 -> 1.5999999999999999, x685 -> 3.6, x636 -> 15.0, x695 -> 3.6, x608 -> 0.0, x658 -> 2.0, x589 -> 2.0, x680 -> 1.4, x663 -> 4.2, x648 -> 3.0, x487 -> 3.6, x749 -> 20.0, x617 -> 42.0, x754 -> 1.5999999999999999, x525 -> 0.4, x712 -> 2.2, x690 -> 0.0, x640 -> 2.0, x705 -> 0.4, x707 -> 0.4, x739 -> 1.2, x585 -> 2.0, x576 -> 6.2, x643 -> 2.0, x744 -> 0.2, x613 -> 62.0, x600 -> 2.4, x571 -> 4.2, x612 -> 42.0, x497 -> 4.0, x482 -> 1.4, x524 -> 0.0, x581 -> 2.0, x495 -> 0.0, x588 -> 2.0, x748 -> 14.0, x632 -> 2.0, x510 -> 0.0, x684 -> 3.6, x716 -> 4.2, x752 -> 0.2, x603 -> 3.6, x664 -> 4.2, x635 -> 15.0, x532 -> 2.2, x696 -> 4.6, x720 -> 1.0, x740 -> 1.5999999999999999, x575 -> 6.2, x528 -> 1.0, x691 -> 3.6, x486 -> 3.6, x659 -> 2.0, x755 -> 4.0, x491 -> 1.6, x592 -> 21.0, x496 -> 4.0, x708 -> 0.6000000000000001) Map() List(x628, x637, x628, x628, x629, x630, x633, x637, x642, x651, x642, x642, x643, x648, x649, x651)
          [Arrive = Dly - Lat: 0.0 = 1.0 - 1.0] x720 = StreamInBankedRead(x671,ArrayBuffer(Set()))
    Transforming Block Block((b95) => x730) [List() => false, List() => false]
