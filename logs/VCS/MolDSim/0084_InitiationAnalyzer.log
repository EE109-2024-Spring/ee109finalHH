  x444 = AccelScope(Block(Const(())))
    x543 = UnitPipe(Set(),Block(Const(())),None)
      x499 = UnrolledForeach(Set(),x478,Block(Const(())),List(List(b479)),List(List(b480)),None)
      Working on pipeLatencies of result Vector(Const(()), x492, x498, x495, x496), schedule Vector(x2968, x2969, x482, x483, x2970, x485, x486, x487, x488, x489, x2971, x491, x492, x3123, x493, x3124, x494, x495, x3125, x3126, x496, x3127, x3128, x497, x498)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x492
      cur: x492, inReduce: false, latency: 0.0
      Computing fullDFS: x498
      Computing fullDFS: x3126
      cur: x3126, inReduce: false, latency: 0.0
      Computing fullDFS: x497
      Computing fullDFS: x489
      Computing fullDFS: x488
      Computing fullDFS: x487
      Computing fullDFS: x485
      Computing fullDFS: x2969
      Computing fullDFS: x2968
      cur: x2968, inReduce: false, latency: 0.2
      Computing fullDFS: x483
      Computing fullDFS: x482
      Computing fullDFS: x3127
      Computing fullDFS: x486
      Computing fullDFS: x3128
      Computing fullDFS: x495
      cur: x495, inReduce: false, latency: 0.0
      Computing fullDFS: x496
      Computing fullDFS: x494
      Computing fullDFS: x2971
      Computing fullDFS: x3124
      Computing fullDFS: x493
      Computing fullDFS: x491
      Computing fullDFS: x2970
      Computing fullDFS: x3123
      Computing fullDFS: x3125
      Cycles: Map()
      cycles are Vector()
         stm: x2968, None
         stm: x2969, None
         stm: x482, None
         stm: x483, None
         stm: x2970, None
         stm: x485, None
         stm: x486, None
         stm: x487, None
         stm: x488, None
         stm: x489, None
         stm: x2971, None
         stm: x491, None
         stm: x492, None
         stm: x3123, None
         stm: x493, None
         stm: x3124, None
         stm: x494, None
         stm: x495, None
         stm: x3125, None
         stm: x3126, None
         stm: x496, None
         stm: x3127, None
         stm: x3128, None
         stm: x497, None
         stm: x498, None
       - Latency:  5.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x542 = UnrolledForeach(Set(),x502,Block(Const(())),List(List(b503)),List(List(b504)),None)
        x516 = UnitPipe(Set(b504),Block(Const(())),None)
        Working on pipeLatencies of result Vector(Const(()), x511, x515, x508, x513), schedule Vector(x508, x509, x510, x511, x512, x513, x514, x515)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x511
        Computing fullDFS: x510
        Computing fullDFS: x509
        Computing fullDFS: x508
        cur: x508, inReduce: false, latency: 0.0
        Computing fullDFS: x515
        Computing fullDFS: x514
        Computing fullDFS: x513
        Computing fullDFS: x512
        Cycles: Map()
        cycles are Vector()
           stm: x508, None
           stm: x509, None
           stm: x510, None
           stm: x511, None
           stm: x512, None
           stm: x513, None
           stm: x514, None
           stm: x515, None
         - Latency:  1.0
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x541 = UnrolledForeach(Set(b504),x519,Block(Const(())),List(List(b520)),List(List(b521)),None)
        Working on pipeLatencies of result Vector(Const(()), x534, x522, x540, x539, x524, x528), schedule Vector(x522, x523, x524, x525, x526, x527, x528, x3129, x529, x2972, x531, x2973, x2974, x533, x3130, x3131, x3132, x3133, x3134, x534, x535, x536, x2975, x2976, x3135, x538, x3136, x3137, x3138, x3139, x3140, x539, x540)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x534
        Computing fullDFS: x533
        Computing fullDFS: x527
        Computing fullDFS: x522
        cur: x522, inReduce: false, latency: 0.0
        Computing fullDFS: x2974
        Computing fullDFS: x531
        cur: x531, inReduce: false, latency: 0.2
        Computing fullDFS: x2973
        Computing fullDFS: x3130
        Computing fullDFS: x2972
        cur: x2972, inReduce: false, latency: 0.2
        Computing fullDFS: x3131
        cur: x3131, inReduce: false, latency: 0.0
        Computing fullDFS: x3132
        Computing fullDFS: x529
        Computing fullDFS: x3129
        Computing fullDFS: x528
        cur: x528, inReduce: false, latency: 1.0
        Computing fullDFS: x3133
        Computing fullDFS: x526
        Computing fullDFS: x523
        Computing fullDFS: x525
        Computing fullDFS: x524
        cur: x524, inReduce: false, latency: 0.0
        Computing fullDFS: x3134
        cur: x3134, inReduce: false, latency: 0.0
        Computing fullDFS: x540
        Computing fullDFS: x538
        Computing fullDFS: x2976
        Computing fullDFS: x536
        cur: x536, inReduce: false, latency: 20.0
        Computing fullDFS: x2975
        Computing fullDFS: x3135
        Computing fullDFS: x3136
        cur: x3136, inReduce: false, latency: 0.0
        Computing fullDFS: x3137
        Computing fullDFS: x3138
        Computing fullDFS: x3139
        Computing fullDFS: x535
        cur: x535, inReduce: false, latency: 16.0
        Computing fullDFS: x3140
        cur: x3140, inReduce: false, latency: 0.0
        Computing fullDFS: x539
        Cycles: Map()
        cycles are Vector()
           stm: x522, None
           stm: x523, None
           stm: x524, None
           stm: x525, None
           stm: x526, None
           stm: x527, None
           stm: x528, None
           stm: x3129, None
           stm: x529, None
           stm: x2972, None
           stm: x531, None
           stm: x2973, None
           stm: x2974, None
           stm: x533, None
           stm: x3130, None
           stm: x3131, None
           stm: x3132, None
           stm: x3133, None
           stm: x3134, None
           stm: x534, None
           stm: x535, None
           stm: x536, None
           stm: x2975, None
           stm: x2976, None
           stm: x3135, None
           stm: x538, None
           stm: x3136, None
           stm: x3137, None
           stm: x3138, None
           stm: x3139, None
           stm: x3140, None
           stm: x539, None
           stm: x540, None
         - Latency:  23.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
       - Interval: 1.0
     - Interval: 5.0
    x2859 = UnrolledForeach(Set(),x546,Block(Const(())),List(List(b547, b548, b549, b550, b551, b552, b553, b554, b555, b556)),List(List(b557, b558, b559, b560, b561, b562, b563, b564, b565, b566)),None)
      x2707 = ParallelPipe(Set(),Block(Const(())))
        x834 = UnrolledReduce(Set(b557),x597,Block((x567) => Const(())),List(List(b627, b628)),List(List(b630, b631)),None)
          x689 = ParallelPipe(Set(b557),Block(Const(())))
            x667 = UnrolledForeach(Set(b630, b557),x645,Block(Const(())),List(List(b647)),List(List(b648)),None)
            Working on pipeLatencies of result Vector(Const(()), x666, x665, x662, x653, x663, x664, x659), schedule Vector(x650, x2977, x2978, x3141, x652, x3142, x3143, x3144, x653, x654, x656, x2979, x2980, x3145, x658, x3146, x3147, x3148, x659, x660, x3149, x661, x3150, x3151, x3152, x3153, x662, x663, x664, x665, x666)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x666
            Computing fullDFS: x661
            Computing fullDFS: x654
            Computing fullDFS: x653
            Computing fullDFS: x652
            Computing fullDFS: x2978
            Computing fullDFS: x650
            cur: x650, inReduce: false, latency: 20.0
            Computing fullDFS: x2977
            Computing fullDFS: x3141
            cur: x3141, inReduce: false, latency: 0.0
            Computing fullDFS: x3142
            cur: x3142, inReduce: false, latency: 0.0
            Computing fullDFS: x3143
            cur: x3143, inReduce: false, latency: 0.0
            Computing fullDFS: x3144
            cur: x3144, inReduce: false, latency: 0.0
            Computing fullDFS: x3149
            Computing fullDFS: x660
            Computing fullDFS: x659
            Computing fullDFS: x658
            Computing fullDFS: x2980
            Computing fullDFS: x656
            cur: x656, inReduce: false, latency: 0.2
            Computing fullDFS: x2979
            Computing fullDFS: x3145
            cur: x3145, inReduce: false, latency: 0.0
            Computing fullDFS: x3146
            cur: x3146, inReduce: false, latency: 0.0
            Computing fullDFS: x3147
            cur: x3147, inReduce: false, latency: 0.0
            Computing fullDFS: x3148
            cur: x3148, inReduce: false, latency: 0.0
            Computing fullDFS: x3150
            cur: x3150, inReduce: false, latency: 0.0
            Computing fullDFS: x3151
            cur: x3151, inReduce: false, latency: 0.0
            Computing fullDFS: x3152
            cur: x3152, inReduce: false, latency: 0.0
            Computing fullDFS: x3153
            cur: x3153, inReduce: false, latency: 0.0
            Computing fullDFS: x665
            Computing fullDFS: x662
            Computing fullDFS: x663
            Computing fullDFS: x664
            Cycles: Map()
            cycles are Vector()
               stm: x650, None
               stm: x2977, None
               stm: x2978, None
               stm: x3141, None
               stm: x652, None
               stm: x3142, None
               stm: x3143, None
               stm: x3144, None
               stm: x653, None
               stm: x654, None
               stm: x656, None
               stm: x2979, None
               stm: x2980, None
               stm: x3145, None
               stm: x658, None
               stm: x3146, None
               stm: x3147, None
               stm: x3148, None
               stm: x659, None
               stm: x660, None
               stm: x3149, None
               stm: x661, None
               stm: x3150, None
               stm: x3151, None
               stm: x3152, None
               stm: x3153, None
               stm: x662, None
               stm: x663, None
               stm: x664, None
               stm: x665, None
               stm: x666, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x688 = UnrolledForeach(Set(b631, b557),x646,Block(Const(())),List(List(b668)),List(List(b669)),None)
            Working on pipeLatencies of result Vector(Const(()), x683, x687, x686, x674, x685, x680, x684), schedule Vector(x671, x2981, x2982, x3154, x673, x3155, x3156, x3157, x674, x675, x677, x2983, x2984, x3158, x679, x3159, x3160, x3161, x680, x681, x3162, x682, x3163, x3164, x3165, x3166, x683, x684, x685, x686, x687)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x683
            Computing fullDFS: x682
            Computing fullDFS: x675
            Computing fullDFS: x674
            Computing fullDFS: x673
            Computing fullDFS: x2982
            Computing fullDFS: x671
            cur: x671, inReduce: false, latency: 20.0
            Computing fullDFS: x2981
            Computing fullDFS: x3154
            cur: x3154, inReduce: false, latency: 0.0
            Computing fullDFS: x3155
            cur: x3155, inReduce: false, latency: 0.0
            Computing fullDFS: x3156
            cur: x3156, inReduce: false, latency: 0.0
            Computing fullDFS: x3157
            cur: x3157, inReduce: false, latency: 0.0
            Computing fullDFS: x3162
            Computing fullDFS: x681
            Computing fullDFS: x680
            Computing fullDFS: x679
            Computing fullDFS: x2984
            Computing fullDFS: x677
            cur: x677, inReduce: false, latency: 0.2
            Computing fullDFS: x2983
            Computing fullDFS: x3158
            cur: x3158, inReduce: false, latency: 0.0
            Computing fullDFS: x3159
            cur: x3159, inReduce: false, latency: 0.0
            Computing fullDFS: x3160
            cur: x3160, inReduce: false, latency: 0.0
            Computing fullDFS: x3161
            cur: x3161, inReduce: false, latency: 0.0
            Computing fullDFS: x3163
            cur: x3163, inReduce: false, latency: 0.0
            Computing fullDFS: x3164
            cur: x3164, inReduce: false, latency: 0.0
            Computing fullDFS: x3165
            cur: x3165, inReduce: false, latency: 0.0
            Computing fullDFS: x3166
            cur: x3166, inReduce: false, latency: 0.0
            Computing fullDFS: x687
            Computing fullDFS: x686
            Computing fullDFS: x685
            Computing fullDFS: x684
            Cycles: Map()
            cycles are Vector()
               stm: x671, None
               stm: x2981, None
               stm: x2982, None
               stm: x3154, None
               stm: x673, None
               stm: x3155, None
               stm: x3156, None
               stm: x3157, None
               stm: x674, None
               stm: x675, None
               stm: x677, None
               stm: x2983, None
               stm: x2984, None
               stm: x3158, None
               stm: x679, None
               stm: x3159, None
               stm: x3160, None
               stm: x3161, None
               stm: x680, None
               stm: x681, None
               stm: x3162, None
               stm: x682, None
               stm: x3163, None
               stm: x3164, None
               stm: x3165, None
               stm: x3166, None
               stm: x683, None
               stm: x684, None
               stm: x685, None
               stm: x686, None
               stm: x687, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x718 = ParallelPipe(Set(b557),Block(Const(())))
            x704 = UnitPipe(Set(b630, b557),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x692, x695, x703, x699), schedule Vector(x692, x693, x695, x696, x697, x3167, x2985, x699, x700, x3168, x2986, x703)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x692
            cur: x692, inReduce: false, latency: 2.0
            Computing fullDFS: x695
            cur: x695, inReduce: false, latency: 2.0
            Computing fullDFS: x703
            Computing fullDFS: x2986
            Computing fullDFS: x2985
            Computing fullDFS: x697
            Computing fullDFS: x696
            Computing fullDFS: x3167
            Computing fullDFS: x693
            Computing fullDFS: x3168
            Computing fullDFS: x700
            Computing fullDFS: x699
            cur: x699, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x692, None
               stm: x693, None
               stm: x695, None
               stm: x696, None
               stm: x697, None
               stm: x3167, None
               stm: x2985, None
               stm: x699, None
               stm: x700, None
               stm: x3168, None
               stm: x2986, None
               stm: x703, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x717 = UnitPipe(Set(b631, b557),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x712, x705, x716, x708), schedule Vector(x705, x706, x708, x709, x710, x3169, x2987, x712, x713, x3170, x2988, x716)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x712
            cur: x712, inReduce: false, latency: 2.0
            Computing fullDFS: x705
            cur: x705, inReduce: false, latency: 2.0
            Computing fullDFS: x716
            Computing fullDFS: x2988
            Computing fullDFS: x2987
            Computing fullDFS: x710
            Computing fullDFS: x709
            Computing fullDFS: x708
            cur: x708, inReduce: false, latency: 2.0
            Computing fullDFS: x3169
            Computing fullDFS: x706
            Computing fullDFS: x3170
            Computing fullDFS: x713
            Cycles: Map()
            cycles are Vector()
               stm: x705, None
               stm: x706, None
               stm: x708, None
               stm: x709, None
               stm: x710, None
               stm: x3169, None
               stm: x2987, None
               stm: x712, None
               stm: x713, None
               stm: x3170, None
               stm: x2988, None
               stm: x716, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x743 = ParallelPipe(Set(b557),Block(Const(())))
            x733 = UnitPipe(Set(b630, b557),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x725, x731, x732), schedule Vector(x725, x726, x727, x728, x729, x730, x731, x732)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x725
            cur: x725, inReduce: false, latency: 2.0
            Computing fullDFS: x731
            Computing fullDFS: x729
            Computing fullDFS: x727
            Computing fullDFS: x726
            Computing fullDFS: x728
            Computing fullDFS: x732
            Computing fullDFS: x730
            Cycles: Map()
            cycles are Vector()
               stm: x725, None
               stm: x726, None
               stm: x727, None
               stm: x728, None
               stm: x729, None
               stm: x730, None
               stm: x731, None
               stm: x732, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x742 = UnitPipe(Set(b631, b557),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x734, x740, x741), schedule Vector(x734, x735, x736, x737, x738, x739, x740, x741)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x734
            cur: x734, inReduce: false, latency: 2.0
            Computing fullDFS: x740
            Computing fullDFS: x738
            Computing fullDFS: x736
            Computing fullDFS: x735
            Computing fullDFS: x737
            Computing fullDFS: x741
            Computing fullDFS: x739
            Cycles: Map()
            cycles are Vector()
               stm: x734, None
               stm: x735, None
               stm: x736, None
               stm: x737, None
               stm: x738, None
               stm: x739, None
               stm: x740, None
               stm: x741, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x761 = Switch(List(x2927, x2928),Block(x760))
          Working on pipeLatencies of result Vector(x760, x759, x758, x748, x749, Const(90)), schedule Vector(x759, x760, x748, x749, x750, x751, x3171, x752, x3172, x753, x3173, x754, x3174, x755, x756, x757, x3175, x758)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x760
          cur: x760, inReduce: false, latency: 0.0
          Computing fullDFS: x759
          Computing fullDFS: x748
          cur: x748, inReduce: false, latency: 0.0
          Computing fullDFS: x749
          Computing fullDFS: x758
          Computing fullDFS: x755
          Computing fullDFS: x754
          Computing fullDFS: x753
          Computing fullDFS: x752
          Computing fullDFS: x751
          Computing fullDFS: x750
          Computing fullDFS: x3171
          Computing fullDFS: x3172
          Computing fullDFS: x3173
          Computing fullDFS: x3174
          Computing fullDFS: x3175
          Computing fullDFS: x757
          Computing fullDFS: x756
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x759, None
             stm: x760, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x775 = Switch(List(x2929, x2930),Block(x774))
          Working on pipeLatencies of result Vector(x774, x773, x772, x762, x763, Const(90)), schedule Vector(x773, x774, x762, x763, x764, x765, x3176, x766, x3177, x767, x3178, x768, x3179, x769, x770, x771, x3180, x772)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x774
          cur: x774, inReduce: false, latency: 0.0
          Computing fullDFS: x773
          Computing fullDFS: x762
          cur: x762, inReduce: false, latency: 0.0
          Computing fullDFS: x763
          Computing fullDFS: x772
          Computing fullDFS: x769
          Computing fullDFS: x768
          Computing fullDFS: x767
          Computing fullDFS: x766
          Computing fullDFS: x765
          Computing fullDFS: x764
          Computing fullDFS: x3176
          Computing fullDFS: x3177
          Computing fullDFS: x3178
          Computing fullDFS: x3179
          Computing fullDFS: x3180
          Computing fullDFS: x771
          Computing fullDFS: x770
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x773, None
             stm: x774, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x780 = ParallelPipe(Set(b557),Block(Const(())))
            x777 = UnitPipe(Set(b630, b557),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x776), schedule Vector(x776)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x776
            cur: x776, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x776, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x779 = UnitPipe(Set(b631, b557),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x778), schedule Vector(x778)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x778
            cur: x778, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x778, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x813 = ParallelPipe(Set(b557),Block(Const(())))
            x798 = UnrolledForeach(Set(b630, b557),x783,Block(Const(())),List(List(b785)),List(List(b786)),None)
            Working on pipeLatencies of result Vector(Const(()), x797, x793, x794, x787, x795, x790, x796), schedule Vector(x787, x788, x789, x790, x791, x3181, x792, x3182, x3183, x3184, x3185, x793, x794, x795, x796, x797)
            Memories with both reads and writes in this scope: Set(x636)
            NonConflictSets(x787, x796): Set()
            NonConflictSets(x787, x796): Set()
            Found Cycle: x787, x796
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x636,x787,x796)), Map(x792 -> List(AccumTriple(x636,x787,x796)), x788 -> List(AccumTriple(x636,x787,x796)), x796 -> List(AccumTriple(x636,x787,x796)), x787 -> List(AccumTriple(x636,x787,x796)), x789 -> List(AccumTriple(x636,x787,x796)))
            Computing fullDFS: Const(())
            Computing fullDFS: x797
            Computing fullDFS: x792
            Computing fullDFS: x789
            Computing fullDFS: x788
            Computing fullDFS: x787
            cur: x787, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x636,x787,x796))
            Computing fullDFS: x3181
            Computing fullDFS: x791
            Computing fullDFS: x790
            cur: x790, inReduce: false, latency: 2.0
            Computing fullDFS: x3182
            cur: x3182, inReduce: false, latency: 0.0
            Computing fullDFS: x3183
            cur: x3183, inReduce: false, latency: 0.0
            Computing fullDFS: x3184
            cur: x3184, inReduce: false, latency: 0.0
            Computing fullDFS: x3185
            cur: x3185, inReduce: false, latency: 0.0
            Computing fullDFS: x793
            Computing fullDFS: x794
            Computing fullDFS: x795
            Computing fullDFS: x796
            Cycle #0: write: x796, cycle: x787, x787, x788, x789, x792, x796
            Cycles: Map(x792 -> Vector(x787, x788, x789, x792), x795 -> Vector(x787, x788, x789, x792, x795), x797 -> Vector(x787, x788, x789, x792, x797), x788 -> Vector(x787, x788), x794 -> Vector(x787, x788, x789, x792, x794), x793 -> Vector(x787, x788, x789, x792, x793), x796 -> Vector(x787, x787, x788, x789, x792, x796), x787 -> List(x787), x789 -> Vector(x787, x788, x789))
            pseudo cycles for x636:
            Access: x787 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x787 = SRAMBankedRead(x636,Vector(List(Const(0))),Vector(b785),Vector(Set(b786, b630, b557)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x796 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x796 = SRAMBankedWrite(x636,Vector(x792),Vector(List(Const(0))),Vector(x3182),Vector(Set(x3185, x3183, x3184))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x787),x636,1.0), AAACycle(Vector(x796),x636,1.0), WARCycle(x787,x796,x636,Vector(x787, x787, x788, x789, x792, x796),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x787, None
               stm: x788, None
               stm: x789, None
               stm: x790, None
               stm: x791, None
               stm: x3181, None
               stm: x792, None
               stm: x3182, None
               stm: x3183, None
               stm: x3184, None
               stm: x3185, None
               stm: x793, None
               stm: x794, None
               stm: x795, None
               stm: x796, None
               stm: x797, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x812 = UnrolledForeach(Set(b631, b557),x784,Block(Const(())),List(List(b799)),List(List(b800)),None)
            Working on pipeLatencies of result Vector(x809, Const(()), x810, x804, x811, x808, x801, x807), schedule Vector(x801, x802, x803, x804, x805, x3186, x806, x3187, x3188, x3189, x3190, x807, x808, x809, x810, x811)
            Memories with both reads and writes in this scope: Set(x641)
            NonConflictSets(x801, x809): Set()
            NonConflictSets(x801, x809): Set()
            Found Cycle: x801, x809
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x641,x801,x809)), Map(x801 -> List(AccumTriple(x641,x801,x809)), x803 -> List(AccumTriple(x641,x801,x809)), x806 -> List(AccumTriple(x641,x801,x809)), x809 -> List(AccumTriple(x641,x801,x809)), x802 -> List(AccumTriple(x641,x801,x809)))
            Computing fullDFS: x809
            Computing fullDFS: x801
            cur: x801, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x641,x801,x809))
            Computing fullDFS: x806
            Computing fullDFS: x803
            Computing fullDFS: x802
            Computing fullDFS: x3186
            Computing fullDFS: x805
            Computing fullDFS: x804
            cur: x804, inReduce: false, latency: 2.0
            Computing fullDFS: x3187
            cur: x3187, inReduce: false, latency: 0.0
            Computing fullDFS: x3188
            cur: x3188, inReduce: false, latency: 0.0
            Computing fullDFS: x3189
            cur: x3189, inReduce: false, latency: 0.0
            Computing fullDFS: x3190
            cur: x3190, inReduce: false, latency: 0.0
            Computing fullDFS: Const(())
            Computing fullDFS: x810
            Computing fullDFS: x811
            Computing fullDFS: x808
            Computing fullDFS: x807
            Cycle #0: write: x809, cycle: x801, x801, x802, x803, x806, x809
            Cycles: Map(x810 -> Vector(x801, x802, x803, x806, x810), x801 -> List(x801), x803 -> Vector(x801, x802, x803), x806 -> Vector(x801, x802, x803, x806), x809 -> Vector(x801, x801, x802, x803, x806, x809), x811 -> Vector(x801, x802, x803, x806, x811), x802 -> Vector(x801, x802), x808 -> Vector(x801, x802, x803, x806, x808), x807 -> Vector(x801, x802, x803, x806, x807))
            pseudo cycles for x641:
            Access: x801 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x801 = SRAMBankedRead(x641,Vector(List(Const(0))),Vector(b799),Vector(Set(b800, b631, b557)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x809 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x809 = SRAMBankedWrite(x641,Vector(x806),Vector(List(Const(0))),Vector(x3188),Vector(Set(x3190, x3187, x3189))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x801),x641,1.0), AAACycle(Vector(x809),x641,1.0), WARCycle(x801,x809,x641,Vector(x801, x801, x802, x803, x806, x809),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x801, None
               stm: x802, None
               stm: x803, None
               stm: x804, None
               stm: x805, None
               stm: x3186, None
               stm: x806, None
               stm: x3187, None
               stm: x3188, None
               stm: x3189, None
               stm: x3190, None
               stm: x807, None
               stm: x808, None
               stm: x809, None
               stm: x810, None
               stm: x811, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x833 = UnrolledForeach(Set(),x617,Block(Const(())),Vector(List(b629)),Vector(List(b632)),None)
          Working on pipeLatencies of result Vector(Const(()), x814, x831, x816, x832, x818), schedule Vector(x814, x815, x816, x817, x3191, x3192, x3193, x818, x819, x820, x822, x824, x825, x3194, x3195, x826, x828, x829, x3196, x3197, x830, x3198, x3199, x3200, x3201, x831, x832)
          Memories with both reads and writes in this scope: Set(x567)
          NonConflictSets(x818, x832): Set()
          NonConflictSets(x818, x832): Set()
          Found Cycle: x818, x832
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x567,x818,x832)), Map(x819 -> List(AccumTriple(x567,x818,x832)), x3199 -> List(AccumTriple(x567,x818,x832)), x830 -> List(AccumTriple(x567,x818,x832)), x818 -> List(AccumTriple(x567,x818,x832)), x829 -> List(AccumTriple(x567,x818,x832)), x832 -> List(AccumTriple(x567,x818,x832)))
          Computing fullDFS: Const(())
          Computing fullDFS: x814
          cur: x814, inReduce: false, latency: 2.0
          Computing fullDFS: x831
          Computing fullDFS: x3198
          cur: x3198, inReduce: false, latency: 0.0
          Computing fullDFS: x3199
          Computing fullDFS: x830
          Computing fullDFS: x829
          Computing fullDFS: x819
          Computing fullDFS: x818
          Computing fullDFS: x3191
          cur: x3191, inReduce: false, latency: 0.0
          Computing fullDFS: x3192
          cur: x3192, inReduce: false, latency: 0.0
          Computing fullDFS: x3193
          cur: x3193, inReduce: false, latency: 0.0
          Computing fullDFS: x826
          Computing fullDFS: x825
          Computing fullDFS: x815
          Computing fullDFS: x817
          Computing fullDFS: x816
          cur: x816, inReduce: false, latency: 2.0
          Computing fullDFS: x3194
          Computing fullDFS: x824
          Computing fullDFS: x820
          cur: x820, inReduce: false, latency: 0.2
          Computing fullDFS: x822
          cur: x822, inReduce: false, latency: 0.2
          Computing fullDFS: x3195
          Computing fullDFS: x3196
          Computing fullDFS: x828
          cur: x828, inReduce: false, latency: 0.2
          Computing fullDFS: x3197
          Computing fullDFS: x3200
          cur: x3200, inReduce: false, latency: 0.0
          Computing fullDFS: x3201
          cur: x3201, inReduce: false, latency: 0.0
          Computing fullDFS: x832
          Cycle #0: write: x832, cycle: x818, x818, x819, x829, x830, x3199, x832
          Cycles: Map(x819 -> Vector(x818, x819), x831 -> Vector(x818, x819, x829, x830, x3199, x831), x3199 -> Vector(x818, x819, x829, x830, x3199), x830 -> Vector(x818, x819, x829, x830), x818 -> List(x818), x829 -> Vector(x818, x819, x829), x832 -> Vector(x818, x818, x819, x829, x830, x3199, x832))
          pseudo cycles for x567:
          Access: x818 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x818 = SRAMBankedRead(x567,Vector(List(Const(0))),Vector(x3193),Vector(Set(x3191, x3192)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x832 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x832 = SRAMBankedWrite(x567,Vector(x3199),Vector(List(Const(0))),Vector(x3198),Vector(Set(x3201, x3200))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x818),x567,1.0), AAACycle(Vector(x832),x567,1.0), WARCycle(x818,x832,x567,Vector(x818, x818, x819, x829, x830, x832, x3199),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x814, None
             stm: x815, None
             stm: x816, None
             stm: x817, None
             stm: x3191, None
             stm: x3192, None
             stm: x3193, None
             stm: x818, Some(0)
             stm: x819, None
             stm: x820, None
             stm: x822, None
             stm: x824, None
             stm: x825, None
             stm: x3194, None
             stm: x3195, None
             stm: x826, None
             stm: x828, None
             stm: x829, None
             stm: x3196, None
             stm: x3197, None
             stm: x830, None
             stm: x3198, None
             stm: x3199, None
             stm: x3200, None
             stm: x3201, None
             stm: x831, None
             stm: x832, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x1042 = UnrolledReduce(Set(b558),x598,Block((x569) => Const(())),List(List(b835, b836)),List(List(b838, b839)),None)
          x897 = ParallelPipe(Set(b558),Block(Const(())))
            x875 = UnrolledForeach(Set(b838, b558),x853,Block(Const(())),List(List(b855)),List(List(b856)),None)
            Working on pipeLatencies of result Vector(Const(()), x873, x861, x870, x874, x872, x867, x871), schedule Vector(x858, x2989, x2990, x3202, x860, x3203, x3204, x3205, x861, x862, x864, x2991, x2992, x3206, x866, x3207, x3208, x3209, x867, x868, x3210, x869, x3211, x3212, x3213, x3214, x870, x871, x872, x873, x874)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x873
            Computing fullDFS: x869
            Computing fullDFS: x862
            Computing fullDFS: x861
            Computing fullDFS: x860
            Computing fullDFS: x2990
            Computing fullDFS: x858
            cur: x858, inReduce: false, latency: 20.0
            Computing fullDFS: x2989
            Computing fullDFS: x3202
            cur: x3202, inReduce: false, latency: 0.0
            Computing fullDFS: x3203
            cur: x3203, inReduce: false, latency: 0.0
            Computing fullDFS: x3204
            cur: x3204, inReduce: false, latency: 0.0
            Computing fullDFS: x3205
            cur: x3205, inReduce: false, latency: 0.0
            Computing fullDFS: x3210
            Computing fullDFS: x868
            Computing fullDFS: x867
            Computing fullDFS: x866
            Computing fullDFS: x2992
            Computing fullDFS: x864
            cur: x864, inReduce: false, latency: 0.2
            Computing fullDFS: x2991
            Computing fullDFS: x3206
            cur: x3206, inReduce: false, latency: 0.0
            Computing fullDFS: x3207
            cur: x3207, inReduce: false, latency: 0.0
            Computing fullDFS: x3208
            cur: x3208, inReduce: false, latency: 0.0
            Computing fullDFS: x3209
            cur: x3209, inReduce: false, latency: 0.0
            Computing fullDFS: x3211
            cur: x3211, inReduce: false, latency: 0.0
            Computing fullDFS: x3212
            cur: x3212, inReduce: false, latency: 0.0
            Computing fullDFS: x3213
            cur: x3213, inReduce: false, latency: 0.0
            Computing fullDFS: x3214
            cur: x3214, inReduce: false, latency: 0.0
            Computing fullDFS: x870
            Computing fullDFS: x874
            Computing fullDFS: x872
            Computing fullDFS: x871
            Cycles: Map()
            cycles are Vector()
               stm: x858, None
               stm: x2989, None
               stm: x2990, None
               stm: x3202, None
               stm: x860, None
               stm: x3203, None
               stm: x3204, None
               stm: x3205, None
               stm: x861, None
               stm: x862, None
               stm: x864, None
               stm: x2991, None
               stm: x2992, None
               stm: x3206, None
               stm: x866, None
               stm: x3207, None
               stm: x3208, None
               stm: x3209, None
               stm: x867, None
               stm: x868, None
               stm: x3210, None
               stm: x869, None
               stm: x3211, None
               stm: x3212, None
               stm: x3213, None
               stm: x3214, None
               stm: x870, None
               stm: x871, None
               stm: x872, None
               stm: x873, None
               stm: x874, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x896 = UnrolledForeach(Set(b839, b558),x854,Block(Const(())),List(List(b876)),List(List(b877)),None)
            Working on pipeLatencies of result Vector(x892, x893, Const(()), x894, x888, x895, x891, x882), schedule Vector(x879, x2993, x2994, x3215, x881, x3216, x3217, x3218, x882, x883, x885, x2995, x2996, x3219, x887, x3220, x3221, x3222, x888, x889, x3223, x890, x3224, x3225, x3226, x3227, x891, x892, x893, x894, x895)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: x892
            Computing fullDFS: x890
            Computing fullDFS: x883
            Computing fullDFS: x882
            Computing fullDFS: x881
            Computing fullDFS: x2994
            Computing fullDFS: x879
            cur: x879, inReduce: false, latency: 20.0
            Computing fullDFS: x2993
            Computing fullDFS: x3215
            cur: x3215, inReduce: false, latency: 0.0
            Computing fullDFS: x3216
            cur: x3216, inReduce: false, latency: 0.0
            Computing fullDFS: x3217
            cur: x3217, inReduce: false, latency: 0.0
            Computing fullDFS: x3218
            cur: x3218, inReduce: false, latency: 0.0
            Computing fullDFS: x3223
            Computing fullDFS: x889
            Computing fullDFS: x888
            Computing fullDFS: x887
            Computing fullDFS: x2996
            Computing fullDFS: x885
            cur: x885, inReduce: false, latency: 0.2
            Computing fullDFS: x2995
            Computing fullDFS: x3219
            cur: x3219, inReduce: false, latency: 0.0
            Computing fullDFS: x3220
            cur: x3220, inReduce: false, latency: 0.0
            Computing fullDFS: x3221
            cur: x3221, inReduce: false, latency: 0.0
            Computing fullDFS: x3222
            cur: x3222, inReduce: false, latency: 0.0
            Computing fullDFS: x3224
            cur: x3224, inReduce: false, latency: 0.0
            Computing fullDFS: x3225
            cur: x3225, inReduce: false, latency: 0.0
            Computing fullDFS: x3226
            cur: x3226, inReduce: false, latency: 0.0
            Computing fullDFS: x3227
            cur: x3227, inReduce: false, latency: 0.0
            Computing fullDFS: x893
            Computing fullDFS: Const(())
            Computing fullDFS: x894
            Computing fullDFS: x895
            Computing fullDFS: x891
            Cycles: Map()
            cycles are Vector()
               stm: x879, None
               stm: x2993, None
               stm: x2994, None
               stm: x3215, None
               stm: x881, None
               stm: x3216, None
               stm: x3217, None
               stm: x3218, None
               stm: x882, None
               stm: x883, None
               stm: x885, None
               stm: x2995, None
               stm: x2996, None
               stm: x3219, None
               stm: x887, None
               stm: x3220, None
               stm: x3221, None
               stm: x3222, None
               stm: x888, None
               stm: x889, None
               stm: x3223, None
               stm: x890, None
               stm: x3224, None
               stm: x3225, None
               stm: x3226, None
               stm: x3227, None
               stm: x891, None
               stm: x892, None
               stm: x893, None
               stm: x894, None
               stm: x895, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x926 = ParallelPipe(Set(b558),Block(Const(())))
            x912 = UnitPipe(Set(b838, b558),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x911, x900, x907, x903), schedule Vector(x900, x901, x903, x904, x905, x3228, x2997, x907, x908, x3229, x2998, x911)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x911
            Computing fullDFS: x2998
            Computing fullDFS: x2997
            Computing fullDFS: x905
            Computing fullDFS: x904
            Computing fullDFS: x903
            cur: x903, inReduce: false, latency: 2.0
            Computing fullDFS: x3228
            Computing fullDFS: x901
            Computing fullDFS: x900
            cur: x900, inReduce: false, latency: 2.0
            Computing fullDFS: x3229
            Computing fullDFS: x908
            Computing fullDFS: x907
            cur: x907, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x900, None
               stm: x901, None
               stm: x903, None
               stm: x904, None
               stm: x905, None
               stm: x3228, None
               stm: x2997, None
               stm: x907, None
               stm: x908, None
               stm: x3229, None
               stm: x2998, None
               stm: x911, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x925 = UnitPipe(Set(b839, b558),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x913, x924, x920, x916), schedule Vector(x913, x914, x916, x917, x918, x3230, x2999, x920, x921, x3231, x3000, x924)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x913
            cur: x913, inReduce: false, latency: 2.0
            Computing fullDFS: x924
            Computing fullDFS: x3000
            Computing fullDFS: x2999
            Computing fullDFS: x918
            Computing fullDFS: x917
            Computing fullDFS: x916
            cur: x916, inReduce: false, latency: 2.0
            Computing fullDFS: x3230
            Computing fullDFS: x914
            Computing fullDFS: x3231
            Computing fullDFS: x921
            Computing fullDFS: x920
            cur: x920, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x913, None
               stm: x914, None
               stm: x916, None
               stm: x917, None
               stm: x918, None
               stm: x3230, None
               stm: x2999, None
               stm: x920, None
               stm: x921, None
               stm: x3231, None
               stm: x3000, None
               stm: x924, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x951 = ParallelPipe(Set(b558),Block(Const(())))
            x941 = UnitPipe(Set(b838, b558),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x933, x939, x940), schedule Vector(x933, x934, x935, x936, x937, x938, x939, x940)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x933
            cur: x933, inReduce: false, latency: 2.0
            Computing fullDFS: x939
            Computing fullDFS: x937
            Computing fullDFS: x935
            Computing fullDFS: x934
            Computing fullDFS: x936
            Computing fullDFS: x940
            Computing fullDFS: x938
            Cycles: Map()
            cycles are Vector()
               stm: x933, None
               stm: x934, None
               stm: x935, None
               stm: x936, None
               stm: x937, None
               stm: x938, None
               stm: x939, None
               stm: x940, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x950 = UnitPipe(Set(b839, b558),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x942, x948, x949), schedule Vector(x942, x943, x944, x945, x946, x947, x948, x949)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x942
            cur: x942, inReduce: false, latency: 2.0
            Computing fullDFS: x948
            Computing fullDFS: x946
            Computing fullDFS: x944
            Computing fullDFS: x943
            Computing fullDFS: x945
            Computing fullDFS: x949
            Computing fullDFS: x947
            Cycles: Map()
            cycles are Vector()
               stm: x942, None
               stm: x943, None
               stm: x944, None
               stm: x945, None
               stm: x946, None
               stm: x947, None
               stm: x948, None
               stm: x949, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x969 = Switch(List(x2931, x2932),Block(x968))
          Working on pipeLatencies of result Vector(x968, x967, x966, x956, x957, Const(90)), schedule Vector(x967, x968, x956, x957, x958, x959, x3232, x960, x3233, x961, x3234, x962, x3235, x963, x964, x965, x3236, x966)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x968
          cur: x968, inReduce: false, latency: 0.0
          Computing fullDFS: x967
          Computing fullDFS: x956
          cur: x956, inReduce: false, latency: 0.0
          Computing fullDFS: x957
          Computing fullDFS: x966
          Computing fullDFS: x963
          Computing fullDFS: x962
          Computing fullDFS: x961
          Computing fullDFS: x960
          Computing fullDFS: x959
          Computing fullDFS: x958
          Computing fullDFS: x3232
          Computing fullDFS: x3233
          Computing fullDFS: x3234
          Computing fullDFS: x3235
          Computing fullDFS: x3236
          Computing fullDFS: x965
          Computing fullDFS: x964
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x967, None
             stm: x968, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x983 = Switch(List(x2933, x2934),Block(x982))
          Working on pipeLatencies of result Vector(x982, x981, x980, x970, x971, Const(90)), schedule Vector(x981, x982, x970, x971, x972, x973, x3237, x974, x3238, x975, x3239, x976, x3240, x977, x978, x979, x3241, x980)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x982
          cur: x982, inReduce: false, latency: 0.0
          Computing fullDFS: x981
          Computing fullDFS: x970
          cur: x970, inReduce: false, latency: 0.0
          Computing fullDFS: x971
          Computing fullDFS: x980
          Computing fullDFS: x977
          Computing fullDFS: x976
          Computing fullDFS: x975
          Computing fullDFS: x974
          Computing fullDFS: x973
          Computing fullDFS: x972
          Computing fullDFS: x3237
          Computing fullDFS: x3238
          Computing fullDFS: x3239
          Computing fullDFS: x3240
          Computing fullDFS: x3241
          Computing fullDFS: x979
          Computing fullDFS: x978
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x981, None
             stm: x982, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x988 = ParallelPipe(Set(b558),Block(Const(())))
            x985 = UnitPipe(Set(b838, b558),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x984), schedule Vector(x984)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x984
            cur: x984, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x984, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x987 = UnitPipe(Set(b839, b558),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x986), schedule Vector(x986)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x986
            cur: x986, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x986, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1021 = ParallelPipe(Set(b558),Block(Const(())))
            x1006 = UnrolledForeach(Set(b838, b558),x991,Block(Const(())),List(List(b993)),List(List(b994)),None)
            Working on pipeLatencies of result Vector(Const(()), x1005, x1001, x998, x1002, x1003, x995, x1004), schedule Vector(x995, x996, x997, x998, x999, x3242, x1000, x3243, x3244, x3245, x3246, x1001, x1002, x1003, x1004, x1005)
            Memories with both reads and writes in this scope: Set(x844)
            NonConflictSets(x995, x1005): Set()
            NonConflictSets(x995, x1005): Set()
            Found Cycle: x995, x1005
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x844,x995,x1005)), Map(x995 -> List(AccumTriple(x844,x995,x1005)), x997 -> List(AccumTriple(x844,x995,x1005)), x1000 -> List(AccumTriple(x844,x995,x1005)), x1005 -> List(AccumTriple(x844,x995,x1005)), x996 -> List(AccumTriple(x844,x995,x1005)))
            Computing fullDFS: Const(())
            Computing fullDFS: x1005
            Computing fullDFS: x995
            cur: x995, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x844,x995,x1005))
            Computing fullDFS: x1000
            Computing fullDFS: x997
            Computing fullDFS: x996
            Computing fullDFS: x3242
            Computing fullDFS: x999
            Computing fullDFS: x998
            cur: x998, inReduce: false, latency: 2.0
            Computing fullDFS: x3243
            cur: x3243, inReduce: false, latency: 0.0
            Computing fullDFS: x3244
            cur: x3244, inReduce: false, latency: 0.0
            Computing fullDFS: x3245
            cur: x3245, inReduce: false, latency: 0.0
            Computing fullDFS: x3246
            cur: x3246, inReduce: false, latency: 0.0
            Computing fullDFS: x1001
            Computing fullDFS: x1002
            Computing fullDFS: x1003
            Computing fullDFS: x1004
            Cycle #0: write: x1005, cycle: x995, x995, x996, x997, x1000, x1005
            Cycles: Map(x1001 -> Vector(x995, x996, x997, x1000, x1001), x1004 -> Vector(x995, x996, x997, x1000, x1004), x995 -> List(x995), x997 -> Vector(x995, x996, x997), x1000 -> Vector(x995, x996, x997, x1000), x1003 -> Vector(x995, x996, x997, x1000, x1003), x1005 -> Vector(x995, x995, x996, x997, x1000, x1005), x996 -> Vector(x995, x996), x1002 -> Vector(x995, x996, x997, x1000, x1002))
            pseudo cycles for x844:
            Access: x995 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x995 = SRAMBankedRead(x844,Vector(List(Const(0))),Vector(b993),Vector(Set(b994, b838, b558)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1005 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1005 = SRAMBankedWrite(x844,Vector(x1000),Vector(List(Const(0))),Vector(x3246),Vector(Set(x3243, x3244, x3245))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x995),x844,1.0), AAACycle(Vector(x1005),x844,1.0), WARCycle(x995,x1005,x844,Vector(x995, x995, x996, x997, x1000, x1005),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x995, None
               stm: x996, None
               stm: x997, None
               stm: x998, None
               stm: x999, None
               stm: x3242, None
               stm: x1000, None
               stm: x3243, None
               stm: x3244, None
               stm: x3245, None
               stm: x3246, None
               stm: x1001, None
               stm: x1002, None
               stm: x1003, None
               stm: x1004, None
               stm: x1005, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1020 = UnrolledForeach(Set(b839, b558),x992,Block(Const(())),List(List(b1007)),List(List(b1008)),None)
            Working on pipeLatencies of result Vector(Const(()), x1012, x1017, x1016, x1015, x1018, x1019, x1009), schedule Vector(x1009, x1010, x1011, x1012, x1013, x3247, x1014, x3248, x3249, x3250, x3251, x1015, x1016, x1017, x1018, x1019)
            Memories with both reads and writes in this scope: Set(x849)
            NonConflictSets(x1009, x1016): Set()
            NonConflictSets(x1009, x1016): Set()
            Found Cycle: x1009, x1016
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x849,x1009,x1016)), Map(x1010 -> List(AccumTriple(x849,x1009,x1016)), x1016 -> List(AccumTriple(x849,x1009,x1016)), x1009 -> List(AccumTriple(x849,x1009,x1016)), x1014 -> List(AccumTriple(x849,x1009,x1016)), x1011 -> List(AccumTriple(x849,x1009,x1016)))
            Computing fullDFS: Const(())
            Computing fullDFS: x1012
            cur: x1012, inReduce: false, latency: 2.0
            Computing fullDFS: x1017
            Computing fullDFS: x1014
            Computing fullDFS: x1011
            Computing fullDFS: x1010
            Computing fullDFS: x1009
            cur: x1009, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x849,x1009,x1016))
            Computing fullDFS: x3247
            Computing fullDFS: x1013
            Computing fullDFS: x3248
            cur: x3248, inReduce: false, latency: 0.0
            Computing fullDFS: x3249
            cur: x3249, inReduce: false, latency: 0.0
            Computing fullDFS: x3250
            cur: x3250, inReduce: false, latency: 0.0
            Computing fullDFS: x3251
            cur: x3251, inReduce: false, latency: 0.0
            Computing fullDFS: x1016
            Computing fullDFS: x1015
            Computing fullDFS: x1018
            Computing fullDFS: x1019
            Cycle #0: write: x1016, cycle: x1009, x1009, x1010, x1011, x1014, x1016
            Cycles: Map(x1019 -> Vector(x1009, x1010, x1011, x1014, x1019), x1010 -> Vector(x1009, x1010), x1016 -> Vector(x1009, x1009, x1010, x1011, x1014, x1016), x1015 -> Vector(x1009, x1010, x1011, x1014, x1015), x1018 -> Vector(x1009, x1010, x1011, x1014, x1018), x1009 -> List(x1009), x1014 -> Vector(x1009, x1010, x1011, x1014), x1017 -> Vector(x1009, x1010, x1011, x1014, x1017), x1011 -> Vector(x1009, x1010, x1011))
            pseudo cycles for x849:
            Access: x1009 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1009 = SRAMBankedRead(x849,Vector(List(Const(0))),Vector(b1007),Vector(Set(b1008, b839, b558)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1016 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1016 = SRAMBankedWrite(x849,Vector(x1014),Vector(List(Const(0))),Vector(x3249),Vector(Set(x3250, x3251, x3248))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1009),x849,1.0), AAACycle(Vector(x1016),x849,1.0), WARCycle(x1009,x1016,x849,Vector(x1009, x1009, x1010, x1011, x1014, x1016),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1009, None
               stm: x1010, None
               stm: x1011, None
               stm: x1012, None
               stm: x1013, None
               stm: x3247, None
               stm: x1014, None
               stm: x3248, None
               stm: x3249, None
               stm: x3250, None
               stm: x3251, None
               stm: x1015, None
               stm: x1016, None
               stm: x1017, None
               stm: x1018, None
               stm: x1019, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x1041 = UnrolledForeach(Set(),x618,Block(Const(())),Vector(List(b837)),Vector(List(b840)),None)
          Working on pipeLatencies of result Vector(x1024, Const(()), x1040, x1039, x1026, x1022), schedule Vector(x1022, x1023, x1024, x1025, x3252, x3253, x3254, x1026, x1027, x1028, x1030, x1032, x1033, x3255, x3256, x1034, x1036, x1037, x3257, x3258, x1038, x3259, x3260, x3261, x3262, x1039, x1040)
          Memories with both reads and writes in this scope: Set(x569)
          NonConflictSets(x1026, x1040): Set()
          NonConflictSets(x1026, x1040): Set()
          Found Cycle: x1026, x1040
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x569,x1026,x1040)), Map(x1037 -> List(AccumTriple(x569,x1026,x1040)), x1040 -> List(AccumTriple(x569,x1026,x1040)), x3261 -> List(AccumTriple(x569,x1026,x1040)), x1027 -> List(AccumTriple(x569,x1026,x1040)), x1038 -> List(AccumTriple(x569,x1026,x1040)), x1026 -> List(AccumTriple(x569,x1026,x1040)))
          Computing fullDFS: x1024
          cur: x1024, inReduce: false, latency: 2.0
          Computing fullDFS: Const(())
          Computing fullDFS: x1040
          Computing fullDFS: x1026
          Computing fullDFS: x3252
          cur: x3252, inReduce: false, latency: 0.0
          Computing fullDFS: x3253
          cur: x3253, inReduce: false, latency: 0.0
          Computing fullDFS: x3254
          cur: x3254, inReduce: false, latency: 0.0
          Computing fullDFS: x3259
          cur: x3259, inReduce: false, latency: 0.0
          Computing fullDFS: x3260
          cur: x3260, inReduce: false, latency: 0.0
          Computing fullDFS: x3261
          Computing fullDFS: x1038
          Computing fullDFS: x1037
          Computing fullDFS: x1027
          Computing fullDFS: x1034
          Computing fullDFS: x1033
          Computing fullDFS: x1023
          Computing fullDFS: x1022
          cur: x1022, inReduce: false, latency: 2.0
          Computing fullDFS: x1025
          Computing fullDFS: x3255
          Computing fullDFS: x3256
          Computing fullDFS: x1032
          Computing fullDFS: x1028
          cur: x1028, inReduce: false, latency: 0.2
          Computing fullDFS: x1030
          cur: x1030, inReduce: false, latency: 0.2
          Computing fullDFS: x3257
          Computing fullDFS: x3258
          Computing fullDFS: x1036
          cur: x1036, inReduce: false, latency: 0.2
          Computing fullDFS: x3262
          cur: x3262, inReduce: false, latency: 0.0
          Computing fullDFS: x1039
          Cycle #0: write: x1040, cycle: x1026, x1026, x1027, x1037, x1038, x3261, x1040
          Cycles: Map(x1037 -> Vector(x1026, x1027, x1037), x1040 -> Vector(x1026, x1026, x1027, x1037, x1038, x3261, x1040), x3261 -> Vector(x1026, x1027, x1037, x1038, x3261), x1027 -> Vector(x1026, x1027), x1039 -> Vector(x1026, x1027, x1037, x1038, x3261, x1039), x1038 -> Vector(x1026, x1027, x1037, x1038), x1026 -> List(x1026))
          pseudo cycles for x569:
          Access: x1026 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1026 = SRAMBankedRead(x569,Vector(List(Const(0))),Vector(x3254),Vector(Set(x3252, x3253)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x1040 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1040 = SRAMBankedWrite(x569,Vector(x3261),Vector(List(Const(0))),Vector(x3259),Vector(Set(x3262, x3260))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x1026),x569,1.0), AAACycle(Vector(x1040),x569,1.0), WARCycle(x1026,x1040,x569,Vector(x1026, x1026, x1027, x1037, x1038, x1040, x3261),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x1022, None
             stm: x1023, None
             stm: x1024, None
             stm: x1025, None
             stm: x3252, None
             stm: x3253, None
             stm: x3254, None
             stm: x1026, Some(0)
             stm: x1027, None
             stm: x1028, None
             stm: x1030, None
             stm: x1032, None
             stm: x1033, None
             stm: x3255, None
             stm: x3256, None
             stm: x1034, None
             stm: x1036, None
             stm: x1037, None
             stm: x3257, None
             stm: x3258, None
             stm: x1038, None
             stm: x3259, None
             stm: x3260, None
             stm: x3261, None
             stm: x3262, None
             stm: x1039, None
             stm: x1040, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x1250 = UnrolledReduce(Set(b559),x599,Block((x571) => Const(())),List(List(b1043, b1044)),List(List(b1046, b1047)),None)
          x1105 = ParallelPipe(Set(b559),Block(Const(())))
            x1083 = UnrolledForeach(Set(b1046, b559),x1061,Block(Const(())),List(List(b1063)),List(List(b1064)),None)
            Working on pipeLatencies of result Vector(Const(()), x1078, x1079, x1082, x1075, x1080, x1081, x1069), schedule Vector(x1066, x3001, x3002, x3263, x1068, x3264, x3265, x3266, x1069, x1070, x1072, x3003, x3004, x3267, x1074, x3268, x3269, x3270, x1075, x1076, x3271, x1077, x3272, x3273, x3274, x3275, x1078, x1079, x1080, x1081, x1082)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1078
            Computing fullDFS: x1077
            Computing fullDFS: x1070
            Computing fullDFS: x1069
            Computing fullDFS: x1068
            Computing fullDFS: x3002
            Computing fullDFS: x1066
            cur: x1066, inReduce: false, latency: 20.0
            Computing fullDFS: x3001
            Computing fullDFS: x3263
            cur: x3263, inReduce: false, latency: 0.0
            Computing fullDFS: x3264
            cur: x3264, inReduce: false, latency: 0.0
            Computing fullDFS: x3265
            cur: x3265, inReduce: false, latency: 0.0
            Computing fullDFS: x3266
            cur: x3266, inReduce: false, latency: 0.0
            Computing fullDFS: x3271
            Computing fullDFS: x1076
            Computing fullDFS: x1075
            Computing fullDFS: x1074
            Computing fullDFS: x3004
            Computing fullDFS: x1072
            cur: x1072, inReduce: false, latency: 0.2
            Computing fullDFS: x3003
            Computing fullDFS: x3267
            cur: x3267, inReduce: false, latency: 0.0
            Computing fullDFS: x3268
            cur: x3268, inReduce: false, latency: 0.0
            Computing fullDFS: x3269
            cur: x3269, inReduce: false, latency: 0.0
            Computing fullDFS: x3270
            cur: x3270, inReduce: false, latency: 0.0
            Computing fullDFS: x3272
            cur: x3272, inReduce: false, latency: 0.0
            Computing fullDFS: x3273
            cur: x3273, inReduce: false, latency: 0.0
            Computing fullDFS: x3274
            cur: x3274, inReduce: false, latency: 0.0
            Computing fullDFS: x3275
            cur: x3275, inReduce: false, latency: 0.0
            Computing fullDFS: x1079
            Computing fullDFS: x1082
            Computing fullDFS: x1080
            Computing fullDFS: x1081
            Cycles: Map()
            cycles are Vector()
               stm: x1066, None
               stm: x3001, None
               stm: x3002, None
               stm: x3263, None
               stm: x1068, None
               stm: x3264, None
               stm: x3265, None
               stm: x3266, None
               stm: x1069, None
               stm: x1070, None
               stm: x1072, None
               stm: x3003, None
               stm: x3004, None
               stm: x3267, None
               stm: x1074, None
               stm: x3268, None
               stm: x3269, None
               stm: x3270, None
               stm: x1075, None
               stm: x1076, None
               stm: x3271, None
               stm: x1077, None
               stm: x3272, None
               stm: x3273, None
               stm: x3274, None
               stm: x3275, None
               stm: x1078, None
               stm: x1079, None
               stm: x1080, None
               stm: x1081, None
               stm: x1082, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1104 = UnrolledForeach(Set(b1047, b559),x1062,Block(Const(())),List(List(b1084)),List(List(b1085)),None)
            Working on pipeLatencies of result Vector(Const(()), x1100, x1096, x1099, x1103, x1090, x1102, x1101), schedule Vector(x1087, x3005, x3006, x3276, x1089, x3277, x3278, x3279, x1090, x1091, x1093, x3007, x3008, x3280, x1095, x3281, x3282, x3283, x1096, x1097, x3284, x1098, x3285, x3286, x3287, x3288, x1099, x1100, x1101, x1102, x1103)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1100
            Computing fullDFS: x1098
            Computing fullDFS: x1091
            Computing fullDFS: x1090
            Computing fullDFS: x1089
            Computing fullDFS: x3006
            Computing fullDFS: x1087
            cur: x1087, inReduce: false, latency: 20.0
            Computing fullDFS: x3005
            Computing fullDFS: x3276
            cur: x3276, inReduce: false, latency: 0.0
            Computing fullDFS: x3277
            cur: x3277, inReduce: false, latency: 0.0
            Computing fullDFS: x3278
            cur: x3278, inReduce: false, latency: 0.0
            Computing fullDFS: x3279
            cur: x3279, inReduce: false, latency: 0.0
            Computing fullDFS: x3284
            Computing fullDFS: x1097
            Computing fullDFS: x1096
            Computing fullDFS: x1095
            Computing fullDFS: x3008
            Computing fullDFS: x1093
            cur: x1093, inReduce: false, latency: 0.2
            Computing fullDFS: x3007
            Computing fullDFS: x3280
            cur: x3280, inReduce: false, latency: 0.0
            Computing fullDFS: x3281
            cur: x3281, inReduce: false, latency: 0.0
            Computing fullDFS: x3282
            cur: x3282, inReduce: false, latency: 0.0
            Computing fullDFS: x3283
            cur: x3283, inReduce: false, latency: 0.0
            Computing fullDFS: x3285
            cur: x3285, inReduce: false, latency: 0.0
            Computing fullDFS: x3286
            cur: x3286, inReduce: false, latency: 0.0
            Computing fullDFS: x3287
            cur: x3287, inReduce: false, latency: 0.0
            Computing fullDFS: x3288
            cur: x3288, inReduce: false, latency: 0.0
            Computing fullDFS: x1099
            Computing fullDFS: x1103
            Computing fullDFS: x1102
            Computing fullDFS: x1101
            Cycles: Map()
            cycles are Vector()
               stm: x1087, None
               stm: x3005, None
               stm: x3006, None
               stm: x3276, None
               stm: x1089, None
               stm: x3277, None
               stm: x3278, None
               stm: x3279, None
               stm: x1090, None
               stm: x1091, None
               stm: x1093, None
               stm: x3007, None
               stm: x3008, None
               stm: x3280, None
               stm: x1095, None
               stm: x3281, None
               stm: x3282, None
               stm: x3283, None
               stm: x1096, None
               stm: x1097, None
               stm: x3284, None
               stm: x1098, None
               stm: x3285, None
               stm: x3286, None
               stm: x3287, None
               stm: x3288, None
               stm: x1099, None
               stm: x1100, None
               stm: x1101, None
               stm: x1102, None
               stm: x1103, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1134 = ParallelPipe(Set(b559),Block(Const(())))
            x1120 = UnitPipe(Set(b1046, b559),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1115, x1119, x1111, x1108), schedule Vector(x1108, x1109, x1111, x1112, x1113, x3289, x3009, x1115, x1116, x3290, x3010, x1119)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1115
            cur: x1115, inReduce: false, latency: 2.0
            Computing fullDFS: x1119
            Computing fullDFS: x3010
            Computing fullDFS: x3009
            Computing fullDFS: x1113
            Computing fullDFS: x1112
            Computing fullDFS: x1111
            cur: x1111, inReduce: false, latency: 2.0
            Computing fullDFS: x3289
            Computing fullDFS: x1109
            Computing fullDFS: x1108
            cur: x1108, inReduce: false, latency: 2.0
            Computing fullDFS: x3290
            Computing fullDFS: x1116
            Cycles: Map()
            cycles are Vector()
               stm: x1108, None
               stm: x1109, None
               stm: x1111, None
               stm: x1112, None
               stm: x1113, None
               stm: x3289, None
               stm: x3009, None
               stm: x1115, None
               stm: x1116, None
               stm: x3290, None
               stm: x3010, None
               stm: x1119, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1133 = UnitPipe(Set(b1047, b559),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1132, x1128, x1121, x1124), schedule Vector(x1121, x1122, x1124, x1125, x1126, x3291, x3011, x1128, x1129, x3292, x3012, x1132)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1132
            Computing fullDFS: x3012
            Computing fullDFS: x3011
            Computing fullDFS: x1126
            Computing fullDFS: x1125
            Computing fullDFS: x1124
            cur: x1124, inReduce: false, latency: 2.0
            Computing fullDFS: x3291
            Computing fullDFS: x1122
            Computing fullDFS: x1121
            cur: x1121, inReduce: false, latency: 2.0
            Computing fullDFS: x3292
            Computing fullDFS: x1129
            Computing fullDFS: x1128
            cur: x1128, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x1121, None
               stm: x1122, None
               stm: x1124, None
               stm: x1125, None
               stm: x1126, None
               stm: x3291, None
               stm: x3011, None
               stm: x1128, None
               stm: x1129, None
               stm: x3292, None
               stm: x3012, None
               stm: x1132, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1159 = ParallelPipe(Set(b559),Block(Const(())))
            x1149 = UnitPipe(Set(b1046, b559),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1141, x1147, x1148), schedule Vector(x1141, x1142, x1143, x1144, x1145, x1146, x1147, x1148)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1141
            cur: x1141, inReduce: false, latency: 2.0
            Computing fullDFS: x1147
            Computing fullDFS: x1145
            Computing fullDFS: x1143
            Computing fullDFS: x1142
            Computing fullDFS: x1144
            Computing fullDFS: x1148
            Computing fullDFS: x1146
            Cycles: Map()
            cycles are Vector()
               stm: x1141, None
               stm: x1142, None
               stm: x1143, None
               stm: x1144, None
               stm: x1145, None
               stm: x1146, None
               stm: x1147, None
               stm: x1148, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1158 = UnitPipe(Set(b1047, b559),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1150, x1156, x1157), schedule Vector(x1150, x1151, x1152, x1153, x1154, x1155, x1156, x1157)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1150
            cur: x1150, inReduce: false, latency: 2.0
            Computing fullDFS: x1156
            Computing fullDFS: x1154
            Computing fullDFS: x1152
            Computing fullDFS: x1151
            Computing fullDFS: x1153
            Computing fullDFS: x1157
            Computing fullDFS: x1155
            Cycles: Map()
            cycles are Vector()
               stm: x1150, None
               stm: x1151, None
               stm: x1152, None
               stm: x1153, None
               stm: x1154, None
               stm: x1155, None
               stm: x1156, None
               stm: x1157, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1177 = Switch(List(x2935, x2936),Block(x1176))
          Working on pipeLatencies of result Vector(x1176, x1175, x1174, x1164, x1165, Const(90)), schedule Vector(x1175, x1176, x1164, x1165, x1166, x1167, x3293, x1168, x3294, x1169, x3295, x1170, x3296, x1171, x1172, x1173, x3297, x1174)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x1176
          cur: x1176, inReduce: false, latency: 0.0
          Computing fullDFS: x1175
          Computing fullDFS: x1164
          cur: x1164, inReduce: false, latency: 0.0
          Computing fullDFS: x1165
          Computing fullDFS: x1174
          Computing fullDFS: x1171
          Computing fullDFS: x1170
          Computing fullDFS: x1169
          Computing fullDFS: x1168
          Computing fullDFS: x1167
          Computing fullDFS: x1166
          Computing fullDFS: x3293
          Computing fullDFS: x3294
          Computing fullDFS: x3295
          Computing fullDFS: x3296
          Computing fullDFS: x3297
          Computing fullDFS: x1173
          Computing fullDFS: x1172
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x1175, None
             stm: x1176, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1191 = Switch(List(x2937, x2938),Block(x1190))
          Working on pipeLatencies of result Vector(x1190, x1189, x1188, x1178, x1179, Const(90)), schedule Vector(x1189, x1190, x1178, x1179, x1180, x1181, x3298, x1182, x3299, x1183, x3300, x1184, x3301, x1185, x1186, x1187, x3302, x1188)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x1190
          cur: x1190, inReduce: false, latency: 0.0
          Computing fullDFS: x1189
          Computing fullDFS: x1178
          cur: x1178, inReduce: false, latency: 0.0
          Computing fullDFS: x1179
          Computing fullDFS: x1188
          Computing fullDFS: x1185
          Computing fullDFS: x1184
          Computing fullDFS: x1183
          Computing fullDFS: x1182
          Computing fullDFS: x1181
          Computing fullDFS: x1180
          Computing fullDFS: x3298
          Computing fullDFS: x3299
          Computing fullDFS: x3300
          Computing fullDFS: x3301
          Computing fullDFS: x3302
          Computing fullDFS: x1187
          Computing fullDFS: x1186
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x1189, None
             stm: x1190, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1196 = ParallelPipe(Set(b559),Block(Const(())))
            x1193 = UnitPipe(Set(b1046, b559),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1192), schedule Vector(x1192)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1192
            cur: x1192, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x1192, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1195 = UnitPipe(Set(b1047, b559),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1194), schedule Vector(x1194)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1194
            cur: x1194, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x1194, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1229 = ParallelPipe(Set(b559),Block(Const(())))
            x1214 = UnrolledForeach(Set(b1046, b559),x1199,Block(Const(())),List(List(b1201)),List(List(b1202)),None)
            Working on pipeLatencies of result Vector(Const(()), x1211, x1206, x1210, x1209, x1213, x1203, x1212), schedule Vector(x1203, x1204, x1205, x1206, x1207, x3303, x1208, x3304, x3305, x3306, x3307, x1209, x1210, x1211, x1212, x1213)
            Memories with both reads and writes in this scope: Set(x1052)
            NonConflictSets(x1203, x1213): Set()
            NonConflictSets(x1203, x1213): Set()
            Found Cycle: x1203, x1213
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1052,x1203,x1213)), Map(x1205 -> List(AccumTriple(x1052,x1203,x1213)), x1213 -> List(AccumTriple(x1052,x1203,x1213)), x1204 -> List(AccumTriple(x1052,x1203,x1213)), x1203 -> List(AccumTriple(x1052,x1203,x1213)), x1208 -> List(AccumTriple(x1052,x1203,x1213)))
            Computing fullDFS: Const(())
            Computing fullDFS: x1211
            Computing fullDFS: x1208
            Computing fullDFS: x1205
            Computing fullDFS: x1204
            Computing fullDFS: x1203
            cur: x1203, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1052,x1203,x1213))
            Computing fullDFS: x3303
            Computing fullDFS: x1207
            Computing fullDFS: x1206
            cur: x1206, inReduce: false, latency: 2.0
            Computing fullDFS: x3304
            cur: x3304, inReduce: false, latency: 0.0
            Computing fullDFS: x3305
            cur: x3305, inReduce: false, latency: 0.0
            Computing fullDFS: x3306
            cur: x3306, inReduce: false, latency: 0.0
            Computing fullDFS: x3307
            cur: x3307, inReduce: false, latency: 0.0
            Computing fullDFS: x1210
            Computing fullDFS: x1209
            Computing fullDFS: x1213
            Computing fullDFS: x1212
            Cycle #0: write: x1213, cycle: x1203, x1203, x1204, x1205, x1208, x1213
            Cycles: Map(x1205 -> Vector(x1203, x1204, x1205), x1213 -> Vector(x1203, x1203, x1204, x1205, x1208, x1213), x1204 -> Vector(x1203, x1204), x1210 -> Vector(x1203, x1204, x1205, x1208, x1210), x1209 -> Vector(x1203, x1204, x1205, x1208, x1209), x1212 -> Vector(x1203, x1204, x1205, x1208, x1212), x1203 -> List(x1203), x1208 -> Vector(x1203, x1204, x1205, x1208), x1211 -> Vector(x1203, x1204, x1205, x1208, x1211))
            pseudo cycles for x1052:
            Access: x1203 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1203 = SRAMBankedRead(x1052,Vector(List(Const(0))),Vector(b1201),Vector(Set(b1202, b1046, b559)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1213 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1213 = SRAMBankedWrite(x1052,Vector(x1208),Vector(List(Const(0))),Vector(x3306),Vector(Set(x3307, x3304, x3305))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1203),x1052,1.0), AAACycle(Vector(x1213),x1052,1.0), WARCycle(x1203,x1213,x1052,Vector(x1203, x1203, x1204, x1205, x1208, x1213),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1203, None
               stm: x1204, None
               stm: x1205, None
               stm: x1206, None
               stm: x1207, None
               stm: x3303, None
               stm: x1208, None
               stm: x3304, None
               stm: x3305, None
               stm: x3306, None
               stm: x3307, None
               stm: x1209, None
               stm: x1210, None
               stm: x1211, None
               stm: x1212, None
               stm: x1213, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1228 = UnrolledForeach(Set(b1047, b559),x1200,Block(Const(())),List(List(b1215)),List(List(b1216)),None)
            Working on pipeLatencies of result Vector(Const(()), x1223, x1217, x1227, x1226, x1224, x1225, x1220), schedule Vector(x1217, x1218, x1219, x1220, x1221, x3308, x1222, x3309, x3310, x3311, x3312, x1223, x1224, x1225, x1226, x1227)
            Memories with both reads and writes in this scope: Set(x1057)
            NonConflictSets(x1217, x1224): Set()
            NonConflictSets(x1217, x1224): Set()
            Found Cycle: x1217, x1224
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1057,x1217,x1224)), Map(x1222 -> List(AccumTriple(x1057,x1217,x1224)), x1219 -> List(AccumTriple(x1057,x1217,x1224)), x1218 -> List(AccumTriple(x1057,x1217,x1224)), x1224 -> List(AccumTriple(x1057,x1217,x1224)), x1217 -> List(AccumTriple(x1057,x1217,x1224)))
            Computing fullDFS: Const(())
            Computing fullDFS: x1223
            Computing fullDFS: x1222
            Computing fullDFS: x1219
            Computing fullDFS: x1218
            Computing fullDFS: x1217
            cur: x1217, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1057,x1217,x1224))
            Computing fullDFS: x3308
            Computing fullDFS: x1221
            Computing fullDFS: x1220
            cur: x1220, inReduce: false, latency: 2.0
            Computing fullDFS: x3309
            cur: x3309, inReduce: false, latency: 0.0
            Computing fullDFS: x3310
            cur: x3310, inReduce: false, latency: 0.0
            Computing fullDFS: x3311
            cur: x3311, inReduce: false, latency: 0.0
            Computing fullDFS: x3312
            cur: x3312, inReduce: false, latency: 0.0
            Computing fullDFS: x1227
            Computing fullDFS: x1226
            Computing fullDFS: x1224
            Computing fullDFS: x1225
            Cycle #0: write: x1224, cycle: x1217, x1217, x1218, x1219, x1222, x1224
            Cycles: Map(x1222 -> Vector(x1217, x1218, x1219, x1222), x1225 -> Vector(x1217, x1218, x1219, x1222, x1225), x1219 -> Vector(x1217, x1218, x1219), x1227 -> Vector(x1217, x1218, x1219, x1222, x1227), x1218 -> Vector(x1217, x1218), x1224 -> Vector(x1217, x1217, x1218, x1219, x1222, x1224), x1223 -> Vector(x1217, x1218, x1219, x1222, x1223), x1226 -> Vector(x1217, x1218, x1219, x1222, x1226), x1217 -> List(x1217))
            pseudo cycles for x1057:
            Access: x1217 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1217 = SRAMBankedRead(x1057,Vector(List(Const(0))),Vector(b1215),Vector(Set(b1216, b1047, b559)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1224 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1224 = SRAMBankedWrite(x1057,Vector(x1222),Vector(List(Const(0))),Vector(x3310),Vector(Set(x3312, x3311, x3309))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1217),x1057,1.0), AAACycle(Vector(x1224),x1057,1.0), WARCycle(x1217,x1224,x1057,Vector(x1217, x1217, x1218, x1219, x1222, x1224),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1217, None
               stm: x1218, None
               stm: x1219, None
               stm: x1220, None
               stm: x1221, None
               stm: x3308, None
               stm: x1222, None
               stm: x3309, None
               stm: x3310, None
               stm: x3311, None
               stm: x3312, None
               stm: x1223, None
               stm: x1224, None
               stm: x1225, None
               stm: x1226, None
               stm: x1227, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x1249 = UnrolledForeach(Set(),x619,Block(Const(())),Vector(List(b1045)),Vector(List(b1048)),None)
          Working on pipeLatencies of result Vector(Const(()), x1247, x1232, x1234, x1230, x1248), schedule Vector(x1230, x1231, x1232, x1233, x3313, x3314, x3315, x1234, x1235, x1236, x1238, x1240, x1241, x3316, x3317, x1242, x1244, x1245, x3318, x3319, x1246, x3320, x3321, x3322, x3323, x1247, x1248)
          Memories with both reads and writes in this scope: Set(x571)
          NonConflictSets(x1234, x1248): Set()
          NonConflictSets(x1234, x1248): Set()
          Found Cycle: x1234, x1248
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x571,x1234,x1248)), Map(x1246 -> List(AccumTriple(x571,x1234,x1248)), x1234 -> List(AccumTriple(x571,x1234,x1248)), x3321 -> List(AccumTriple(x571,x1234,x1248)), x1245 -> List(AccumTriple(x571,x1234,x1248)), x1248 -> List(AccumTriple(x571,x1234,x1248)), x1235 -> List(AccumTriple(x571,x1234,x1248)))
          Computing fullDFS: Const(())
          Computing fullDFS: x1247
          Computing fullDFS: x3320
          cur: x3320, inReduce: false, latency: 0.0
          Computing fullDFS: x3321
          Computing fullDFS: x1246
          Computing fullDFS: x1245
          Computing fullDFS: x1235
          Computing fullDFS: x1234
          Computing fullDFS: x3313
          cur: x3313, inReduce: false, latency: 0.0
          Computing fullDFS: x3314
          cur: x3314, inReduce: false, latency: 0.0
          Computing fullDFS: x3315
          cur: x3315, inReduce: false, latency: 0.0
          Computing fullDFS: x1242
          Computing fullDFS: x1241
          Computing fullDFS: x1231
          Computing fullDFS: x1230
          cur: x1230, inReduce: false, latency: 2.0
          Computing fullDFS: x1233
          Computing fullDFS: x1232
          cur: x1232, inReduce: false, latency: 2.0
          Computing fullDFS: x3316
          Computing fullDFS: x1240
          Computing fullDFS: x1236
          cur: x1236, inReduce: false, latency: 0.2
          Computing fullDFS: x1238
          cur: x1238, inReduce: false, latency: 0.2
          Computing fullDFS: x3317
          Computing fullDFS: x3318
          Computing fullDFS: x1244
          cur: x1244, inReduce: false, latency: 0.2
          Computing fullDFS: x3319
          Computing fullDFS: x3322
          cur: x3322, inReduce: false, latency: 0.0
          Computing fullDFS: x3323
          cur: x3323, inReduce: false, latency: 0.0
          Computing fullDFS: x1248
          Cycle #0: write: x1248, cycle: x1234, x1234, x1235, x1245, x1246, x3321, x1248
          Cycles: Map(x1246 -> Vector(x1234, x1235, x1245, x1246), x1234 -> List(x1234), x3321 -> Vector(x1234, x1235, x1245, x1246, x3321), x1245 -> Vector(x1234, x1235, x1245), x1248 -> Vector(x1234, x1234, x1235, x1245, x1246, x3321, x1248), x1235 -> Vector(x1234, x1235), x1247 -> Vector(x1234, x1235, x1245, x1246, x3321, x1247))
          pseudo cycles for x571:
          Access: x1234 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1234 = SRAMBankedRead(x571,Vector(List(Const(0))),Vector(x3313),Vector(Set(x3314, x3315)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x1248 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1248 = SRAMBankedWrite(x571,Vector(x3321),Vector(List(Const(0))),Vector(x3323),Vector(Set(x3322, x3320))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x1234),x571,1.0), AAACycle(Vector(x1248),x571,1.0), WARCycle(x1234,x1248,x571,Vector(x1234, x1234, x1235, x1245, x1246, x1248, x3321),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x1230, None
             stm: x1231, None
             stm: x1232, None
             stm: x1233, None
             stm: x3313, None
             stm: x3314, None
             stm: x3315, None
             stm: x1234, Some(0)
             stm: x1235, None
             stm: x1236, None
             stm: x1238, None
             stm: x1240, None
             stm: x1241, None
             stm: x3316, None
             stm: x3317, None
             stm: x1242, None
             stm: x1244, None
             stm: x1245, None
             stm: x3318, None
             stm: x3319, None
             stm: x1246, None
             stm: x3320, None
             stm: x3321, None
             stm: x3322, None
             stm: x3323, None
             stm: x1247, None
             stm: x1248, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x1458 = UnrolledReduce(Set(b560),x600,Block((x573) => Const(())),List(List(b1251, b1252)),List(List(b1254, b1255)),None)
          x1313 = ParallelPipe(Set(b560),Block(Const(())))
            x1291 = UnrolledForeach(Set(b1254, b560),x1269,Block(Const(())),List(List(b1271)),List(List(b1272)),None)
            Working on pipeLatencies of result Vector(Const(()), x1290, x1287, x1283, x1286, x1277, x1289, x1288), schedule Vector(x1274, x3013, x3014, x3324, x1276, x3325, x3326, x3327, x1277, x1278, x1280, x3015, x3016, x3328, x1282, x3329, x3330, x3331, x1283, x1284, x3332, x1285, x3333, x3334, x3335, x3336, x1286, x1287, x1288, x1289, x1290)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1290
            Computing fullDFS: x1285
            Computing fullDFS: x1278
            Computing fullDFS: x1277
            Computing fullDFS: x1276
            Computing fullDFS: x3014
            Computing fullDFS: x1274
            cur: x1274, inReduce: false, latency: 20.0
            Computing fullDFS: x3013
            Computing fullDFS: x3324
            cur: x3324, inReduce: false, latency: 0.0
            Computing fullDFS: x3325
            cur: x3325, inReduce: false, latency: 0.0
            Computing fullDFS: x3326
            cur: x3326, inReduce: false, latency: 0.0
            Computing fullDFS: x3327
            cur: x3327, inReduce: false, latency: 0.0
            Computing fullDFS: x3332
            Computing fullDFS: x1284
            Computing fullDFS: x1283
            Computing fullDFS: x1282
            Computing fullDFS: x3016
            Computing fullDFS: x1280
            cur: x1280, inReduce: false, latency: 0.2
            Computing fullDFS: x3015
            Computing fullDFS: x3328
            cur: x3328, inReduce: false, latency: 0.0
            Computing fullDFS: x3329
            cur: x3329, inReduce: false, latency: 0.0
            Computing fullDFS: x3330
            cur: x3330, inReduce: false, latency: 0.0
            Computing fullDFS: x3331
            cur: x3331, inReduce: false, latency: 0.0
            Computing fullDFS: x3333
            cur: x3333, inReduce: false, latency: 0.0
            Computing fullDFS: x3334
            cur: x3334, inReduce: false, latency: 0.0
            Computing fullDFS: x3335
            cur: x3335, inReduce: false, latency: 0.0
            Computing fullDFS: x3336
            cur: x3336, inReduce: false, latency: 0.0
            Computing fullDFS: x1287
            Computing fullDFS: x1286
            Computing fullDFS: x1289
            Computing fullDFS: x1288
            Cycles: Map()
            cycles are Vector()
               stm: x1274, None
               stm: x3013, None
               stm: x3014, None
               stm: x3324, None
               stm: x1276, None
               stm: x3325, None
               stm: x3326, None
               stm: x3327, None
               stm: x1277, None
               stm: x1278, None
               stm: x1280, None
               stm: x3015, None
               stm: x3016, None
               stm: x3328, None
               stm: x1282, None
               stm: x3329, None
               stm: x3330, None
               stm: x3331, None
               stm: x1283, None
               stm: x1284, None
               stm: x3332, None
               stm: x1285, None
               stm: x3333, None
               stm: x3334, None
               stm: x3335, None
               stm: x3336, None
               stm: x1286, None
               stm: x1287, None
               stm: x1288, None
               stm: x1289, None
               stm: x1290, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1312 = UnrolledForeach(Set(b1255, b560),x1270,Block(Const(())),List(List(b1292)),List(List(b1293)),None)
            Working on pipeLatencies of result Vector(Const(()), x1310, x1298, x1311, x1307, x1304, x1308, x1309), schedule Vector(x1295, x3017, x3018, x3337, x1297, x3338, x3339, x3340, x1298, x1299, x1301, x3019, x3020, x3341, x1303, x3342, x3343, x3344, x1304, x1305, x3345, x1306, x3346, x3347, x3348, x3349, x1307, x1308, x1309, x1310, x1311)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1310
            Computing fullDFS: x1306
            Computing fullDFS: x1299
            Computing fullDFS: x1298
            Computing fullDFS: x1297
            Computing fullDFS: x3018
            Computing fullDFS: x1295
            cur: x1295, inReduce: false, latency: 20.0
            Computing fullDFS: x3017
            Computing fullDFS: x3337
            cur: x3337, inReduce: false, latency: 0.0
            Computing fullDFS: x3338
            cur: x3338, inReduce: false, latency: 0.0
            Computing fullDFS: x3339
            cur: x3339, inReduce: false, latency: 0.0
            Computing fullDFS: x3340
            cur: x3340, inReduce: false, latency: 0.0
            Computing fullDFS: x3345
            Computing fullDFS: x1305
            Computing fullDFS: x1304
            Computing fullDFS: x1303
            Computing fullDFS: x3020
            Computing fullDFS: x1301
            cur: x1301, inReduce: false, latency: 0.2
            Computing fullDFS: x3019
            Computing fullDFS: x3341
            cur: x3341, inReduce: false, latency: 0.0
            Computing fullDFS: x3342
            cur: x3342, inReduce: false, latency: 0.0
            Computing fullDFS: x3343
            cur: x3343, inReduce: false, latency: 0.0
            Computing fullDFS: x3344
            cur: x3344, inReduce: false, latency: 0.0
            Computing fullDFS: x3346
            cur: x3346, inReduce: false, latency: 0.0
            Computing fullDFS: x3347
            cur: x3347, inReduce: false, latency: 0.0
            Computing fullDFS: x3348
            cur: x3348, inReduce: false, latency: 0.0
            Computing fullDFS: x3349
            cur: x3349, inReduce: false, latency: 0.0
            Computing fullDFS: x1311
            Computing fullDFS: x1307
            Computing fullDFS: x1308
            Computing fullDFS: x1309
            Cycles: Map()
            cycles are Vector()
               stm: x1295, None
               stm: x3017, None
               stm: x3018, None
               stm: x3337, None
               stm: x1297, None
               stm: x3338, None
               stm: x3339, None
               stm: x3340, None
               stm: x1298, None
               stm: x1299, None
               stm: x1301, None
               stm: x3019, None
               stm: x3020, None
               stm: x3341, None
               stm: x1303, None
               stm: x3342, None
               stm: x3343, None
               stm: x3344, None
               stm: x1304, None
               stm: x1305, None
               stm: x3345, None
               stm: x1306, None
               stm: x3346, None
               stm: x3347, None
               stm: x3348, None
               stm: x3349, None
               stm: x1307, None
               stm: x1308, None
               stm: x1309, None
               stm: x1310, None
               stm: x1311, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1342 = ParallelPipe(Set(b560),Block(Const(())))
            x1328 = UnitPipe(Set(b1254, b560),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1327, x1323, x1319, x1316), schedule Vector(x1316, x1317, x1319, x1320, x1321, x3350, x3021, x1323, x1324, x3351, x3022, x1327)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1327
            Computing fullDFS: x3022
            Computing fullDFS: x3021
            Computing fullDFS: x1321
            Computing fullDFS: x1320
            Computing fullDFS: x1319
            cur: x1319, inReduce: false, latency: 2.0
            Computing fullDFS: x3350
            Computing fullDFS: x1317
            Computing fullDFS: x1316
            cur: x1316, inReduce: false, latency: 2.0
            Computing fullDFS: x3351
            Computing fullDFS: x1324
            Computing fullDFS: x1323
            cur: x1323, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x1316, None
               stm: x1317, None
               stm: x1319, None
               stm: x1320, None
               stm: x1321, None
               stm: x3350, None
               stm: x3021, None
               stm: x1323, None
               stm: x1324, None
               stm: x3351, None
               stm: x3022, None
               stm: x1327, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1341 = UnitPipe(Set(b1255, b560),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1329, x1332, x1340, x1336), schedule Vector(x1329, x1330, x1332, x1333, x1334, x3352, x3023, x1336, x1337, x3353, x3024, x1340)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1329
            cur: x1329, inReduce: false, latency: 2.0
            Computing fullDFS: x1332
            cur: x1332, inReduce: false, latency: 2.0
            Computing fullDFS: x1340
            Computing fullDFS: x3024
            Computing fullDFS: x3023
            Computing fullDFS: x1334
            Computing fullDFS: x1333
            Computing fullDFS: x3352
            Computing fullDFS: x1330
            Computing fullDFS: x3353
            Computing fullDFS: x1337
            Computing fullDFS: x1336
            cur: x1336, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x1329, None
               stm: x1330, None
               stm: x1332, None
               stm: x1333, None
               stm: x1334, None
               stm: x3352, None
               stm: x3023, None
               stm: x1336, None
               stm: x1337, None
               stm: x3353, None
               stm: x3024, None
               stm: x1340, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1367 = ParallelPipe(Set(b560),Block(Const(())))
            x1357 = UnitPipe(Set(b1254, b560),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1349, x1355, x1356), schedule Vector(x1349, x1350, x1351, x1352, x1353, x1354, x1355, x1356)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1349
            cur: x1349, inReduce: false, latency: 2.0
            Computing fullDFS: x1355
            Computing fullDFS: x1353
            Computing fullDFS: x1351
            Computing fullDFS: x1350
            Computing fullDFS: x1352
            Computing fullDFS: x1356
            Computing fullDFS: x1354
            Cycles: Map()
            cycles are Vector()
               stm: x1349, None
               stm: x1350, None
               stm: x1351, None
               stm: x1352, None
               stm: x1353, None
               stm: x1354, None
               stm: x1355, None
               stm: x1356, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1366 = UnitPipe(Set(b1255, b560),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1358, x1364, x1365), schedule Vector(x1358, x1359, x1360, x1361, x1362, x1363, x1364, x1365)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1358
            cur: x1358, inReduce: false, latency: 2.0
            Computing fullDFS: x1364
            Computing fullDFS: x1362
            Computing fullDFS: x1360
            Computing fullDFS: x1359
            Computing fullDFS: x1361
            Computing fullDFS: x1365
            Computing fullDFS: x1363
            Cycles: Map()
            cycles are Vector()
               stm: x1358, None
               stm: x1359, None
               stm: x1360, None
               stm: x1361, None
               stm: x1362, None
               stm: x1363, None
               stm: x1364, None
               stm: x1365, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1385 = Switch(List(x2939, x2940),Block(x1384))
          Working on pipeLatencies of result Vector(x1384, x1383, x1382, x1372, x1373, Const(90)), schedule Vector(x1383, x1384, x1372, x1373, x1374, x1375, x3354, x1376, x3355, x1377, x3356, x1378, x3357, x1379, x1380, x1381, x3358, x1382)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x1384
          cur: x1384, inReduce: false, latency: 0.0
          Computing fullDFS: x1383
          Computing fullDFS: x1372
          cur: x1372, inReduce: false, latency: 0.0
          Computing fullDFS: x1373
          Computing fullDFS: x1382
          Computing fullDFS: x1379
          Computing fullDFS: x1378
          Computing fullDFS: x1377
          Computing fullDFS: x1376
          Computing fullDFS: x1375
          Computing fullDFS: x1374
          Computing fullDFS: x3354
          Computing fullDFS: x3355
          Computing fullDFS: x3356
          Computing fullDFS: x3357
          Computing fullDFS: x3358
          Computing fullDFS: x1381
          Computing fullDFS: x1380
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x1383, None
             stm: x1384, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1399 = Switch(List(x2941, x2942),Block(x1398))
          Working on pipeLatencies of result Vector(x1398, x1397, x1396, x1386, x1387, Const(90)), schedule Vector(x1397, x1398, x1386, x1387, x1388, x1389, x3359, x1390, x3360, x1391, x3361, x1392, x3362, x1393, x1394, x1395, x3363, x1396)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x1398
          cur: x1398, inReduce: false, latency: 0.0
          Computing fullDFS: x1397
          Computing fullDFS: x1386
          cur: x1386, inReduce: false, latency: 0.0
          Computing fullDFS: x1387
          Computing fullDFS: x1396
          Computing fullDFS: x1393
          Computing fullDFS: x1392
          Computing fullDFS: x1391
          Computing fullDFS: x1390
          Computing fullDFS: x1389
          Computing fullDFS: x1388
          Computing fullDFS: x3359
          Computing fullDFS: x3360
          Computing fullDFS: x3361
          Computing fullDFS: x3362
          Computing fullDFS: x3363
          Computing fullDFS: x1395
          Computing fullDFS: x1394
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x1397, None
             stm: x1398, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1404 = ParallelPipe(Set(b560),Block(Const(())))
            x1401 = UnitPipe(Set(b1254, b560),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1400), schedule Vector(x1400)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1400
            cur: x1400, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x1400, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1403 = UnitPipe(Set(b1255, b560),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1402), schedule Vector(x1402)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1402
            cur: x1402, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x1402, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1437 = ParallelPipe(Set(b560),Block(Const(())))
            x1422 = UnrolledForeach(Set(b1254, b560),x1407,Block(Const(())),List(List(b1409)),List(List(b1410)),None)
            Working on pipeLatencies of result Vector(x1411, Const(()), x1418, x1414, x1419, x1420, x1421, x1417), schedule Vector(x1411, x1412, x1413, x1414, x1415, x3364, x1416, x3365, x3366, x3367, x3368, x1417, x1418, x1419, x1420, x1421)
            Memories with both reads and writes in this scope: Set(x1260)
            NonConflictSets(x1411, x1417): Set()
            NonConflictSets(x1411, x1417): Set()
            Found Cycle: x1411, x1417
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1260,x1411,x1417)), Map(x1411 -> List(AccumTriple(x1260,x1411,x1417)), x1416 -> List(AccumTriple(x1260,x1411,x1417)), x1413 -> List(AccumTriple(x1260,x1411,x1417)), x1412 -> List(AccumTriple(x1260,x1411,x1417)), x1417 -> List(AccumTriple(x1260,x1411,x1417)))
            Computing fullDFS: x1411
            cur: x1411, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1260,x1411,x1417))
            Computing fullDFS: Const(())
            Computing fullDFS: x1418
            Computing fullDFS: x1416
            Computing fullDFS: x1413
            Computing fullDFS: x1412
            Computing fullDFS: x3364
            Computing fullDFS: x1415
            Computing fullDFS: x1414
            cur: x1414, inReduce: false, latency: 2.0
            Computing fullDFS: x3365
            cur: x3365, inReduce: false, latency: 0.0
            Computing fullDFS: x3366
            cur: x3366, inReduce: false, latency: 0.0
            Computing fullDFS: x3367
            cur: x3367, inReduce: false, latency: 0.0
            Computing fullDFS: x3368
            cur: x3368, inReduce: false, latency: 0.0
            Computing fullDFS: x1419
            Computing fullDFS: x1420
            Computing fullDFS: x1421
            Computing fullDFS: x1417
            Cycle #0: write: x1417, cycle: x1411, x1411, x1412, x1413, x1416, x1417
            Cycles: Map(x1420 -> Vector(x1411, x1412, x1413, x1416, x1420), x1411 -> List(x1411), x1416 -> Vector(x1411, x1412, x1413, x1416), x1419 -> Vector(x1411, x1412, x1413, x1416, x1419), x1413 -> Vector(x1411, x1412, x1413), x1421 -> Vector(x1411, x1412, x1413, x1416, x1421), x1412 -> Vector(x1411, x1412), x1418 -> Vector(x1411, x1412, x1413, x1416, x1418), x1417 -> Vector(x1411, x1411, x1412, x1413, x1416, x1417))
            pseudo cycles for x1260:
            Access: x1411 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1411 = SRAMBankedRead(x1260,Vector(List(Const(0))),Vector(b1409),Vector(Set(b1410, b1254, b560)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1417 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1417 = SRAMBankedWrite(x1260,Vector(x1416),Vector(List(Const(0))),Vector(x3366),Vector(Set(x3367, x3365, x3368))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1411),x1260,1.0), AAACycle(Vector(x1417),x1260,1.0), WARCycle(x1411,x1417,x1260,Vector(x1411, x1411, x1412, x1413, x1416, x1417),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1411, None
               stm: x1412, None
               stm: x1413, None
               stm: x1414, None
               stm: x1415, None
               stm: x3364, None
               stm: x1416, None
               stm: x3365, None
               stm: x3366, None
               stm: x3367, None
               stm: x3368, None
               stm: x1417, None
               stm: x1418, None
               stm: x1419, None
               stm: x1420, None
               stm: x1421, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1436 = UnrolledForeach(Set(b1255, b560),x1408,Block(Const(())),List(List(b1423)),List(List(b1424)),None)
            Working on pipeLatencies of result Vector(Const(()), x1433, x1425, x1434, x1428, x1435, x1432, x1431), schedule Vector(x1425, x1426, x1427, x1428, x1429, x3369, x1430, x3370, x3371, x3372, x3373, x1431, x1432, x1433, x1434, x1435)
            Memories with both reads and writes in this scope: Set(x1265)
            NonConflictSets(x1425, x1431): Set()
            NonConflictSets(x1425, x1431): Set()
            Found Cycle: x1425, x1431
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1265,x1425,x1431)), Map(x1425 -> List(AccumTriple(x1265,x1425,x1431)), x1431 -> List(AccumTriple(x1265,x1425,x1431)), x1430 -> List(AccumTriple(x1265,x1425,x1431)), x1427 -> List(AccumTriple(x1265,x1425,x1431)), x1426 -> List(AccumTriple(x1265,x1425,x1431)))
            Computing fullDFS: Const(())
            Computing fullDFS: x1433
            Computing fullDFS: x1430
            Computing fullDFS: x1427
            Computing fullDFS: x1426
            Computing fullDFS: x1425
            cur: x1425, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1265,x1425,x1431))
            Computing fullDFS: x3369
            Computing fullDFS: x1429
            Computing fullDFS: x1428
            cur: x1428, inReduce: false, latency: 2.0
            Computing fullDFS: x3370
            cur: x3370, inReduce: false, latency: 0.0
            Computing fullDFS: x3371
            cur: x3371, inReduce: false, latency: 0.0
            Computing fullDFS: x3372
            cur: x3372, inReduce: false, latency: 0.0
            Computing fullDFS: x3373
            cur: x3373, inReduce: false, latency: 0.0
            Computing fullDFS: x1434
            Computing fullDFS: x1435
            Computing fullDFS: x1432
            Computing fullDFS: x1431
            Cycle #0: write: x1431, cycle: x1425, x1425, x1426, x1427, x1430, x1431
            Cycles: Map(x1432 -> Vector(x1425, x1426, x1427, x1430, x1432), x1434 -> Vector(x1425, x1426, x1427, x1430, x1434), x1425 -> List(x1425), x1431 -> Vector(x1425, x1425, x1426, x1427, x1430, x1431), x1430 -> Vector(x1425, x1426, x1427, x1430), x1433 -> Vector(x1425, x1426, x1427, x1430, x1433), x1427 -> Vector(x1425, x1426, x1427), x1435 -> Vector(x1425, x1426, x1427, x1430, x1435), x1426 -> Vector(x1425, x1426))
            pseudo cycles for x1265:
            Access: x1425 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1425 = SRAMBankedRead(x1265,Vector(List(Const(0))),Vector(b1423),Vector(Set(b1424, b1255, b560)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1431 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1431 = SRAMBankedWrite(x1265,Vector(x1430),Vector(List(Const(0))),Vector(x3371),Vector(Set(x3372, x3370, x3373))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1425),x1265,1.0), AAACycle(Vector(x1431),x1265,1.0), WARCycle(x1425,x1431,x1265,Vector(x1425, x1425, x1426, x1427, x1430, x1431),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1425, None
               stm: x1426, None
               stm: x1427, None
               stm: x1428, None
               stm: x1429, None
               stm: x3369, None
               stm: x1430, None
               stm: x3370, None
               stm: x3371, None
               stm: x3372, None
               stm: x3373, None
               stm: x1431, None
               stm: x1432, None
               stm: x1433, None
               stm: x1434, None
               stm: x1435, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x1457 = UnrolledForeach(Set(),x620,Block(Const(())),Vector(List(b1253)),Vector(List(b1256)),None)
          Working on pipeLatencies of result Vector(Const(()), x1455, x1438, x1456, x1440, x1442), schedule Vector(x1438, x1439, x1440, x1441, x3374, x3375, x3376, x1442, x1443, x1444, x1446, x1448, x1449, x3377, x3378, x1450, x1452, x1453, x3379, x3380, x1454, x3381, x3382, x3383, x3384, x1455, x1456)
          Memories with both reads and writes in this scope: Set(x573)
          NonConflictSets(x1442, x1455): Set()
          NonConflictSets(x1442, x1455): Set()
          Found Cycle: x1442, x1455
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x573,x1442,x1455)), Map(x3381 -> List(AccumTriple(x573,x1442,x1455)), x1443 -> List(AccumTriple(x573,x1442,x1455)), x1455 -> List(AccumTriple(x573,x1442,x1455)), x1454 -> List(AccumTriple(x573,x1442,x1455)), x1442 -> List(AccumTriple(x573,x1442,x1455)), x1453 -> List(AccumTriple(x573,x1442,x1455)))
          Computing fullDFS: Const(())
          Computing fullDFS: x1455
          Computing fullDFS: x1442
          Computing fullDFS: x3374
          cur: x3374, inReduce: false, latency: 0.0
          Computing fullDFS: x3375
          cur: x3375, inReduce: false, latency: 0.0
          Computing fullDFS: x3376
          cur: x3376, inReduce: false, latency: 0.0
          Computing fullDFS: x3381
          Computing fullDFS: x1454
          Computing fullDFS: x1453
          Computing fullDFS: x1443
          Computing fullDFS: x1450
          Computing fullDFS: x1449
          Computing fullDFS: x1439
          Computing fullDFS: x1438
          cur: x1438, inReduce: false, latency: 2.0
          Computing fullDFS: x1441
          Computing fullDFS: x1440
          cur: x1440, inReduce: false, latency: 2.0
          Computing fullDFS: x3377
          Computing fullDFS: x1448
          Computing fullDFS: x1444
          cur: x1444, inReduce: false, latency: 0.2
          Computing fullDFS: x1446
          cur: x1446, inReduce: false, latency: 0.2
          Computing fullDFS: x3378
          Computing fullDFS: x3379
          Computing fullDFS: x1452
          cur: x1452, inReduce: false, latency: 0.2
          Computing fullDFS: x3380
          Computing fullDFS: x3382
          cur: x3382, inReduce: false, latency: 0.0
          Computing fullDFS: x3383
          cur: x3383, inReduce: false, latency: 0.0
          Computing fullDFS: x3384
          cur: x3384, inReduce: false, latency: 0.0
          Computing fullDFS: x1456
          Cycle #0: write: x1455, cycle: x1442, x1442, x1443, x1453, x1454, x3381, x1455
          Cycles: Map(x1456 -> Vector(x1442, x1443, x1453, x1454, x3381, x1456), x3381 -> Vector(x1442, x1443, x1453, x1454, x3381), x1443 -> Vector(x1442, x1443), x1455 -> Vector(x1442, x1442, x1443, x1453, x1454, x3381, x1455), x1454 -> Vector(x1442, x1443, x1453, x1454), x1442 -> List(x1442), x1453 -> Vector(x1442, x1443, x1453))
          pseudo cycles for x573:
          Access: x1442 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1442 = SRAMBankedRead(x573,Vector(List(Const(0))),Vector(x3375),Vector(Set(x3376, x3374)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x1455 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1455 = SRAMBankedWrite(x573,Vector(x3381),Vector(List(Const(0))),Vector(x3383),Vector(Set(x3382, x3384))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x1442),x573,1.0), AAACycle(Vector(x1455),x573,1.0), WARCycle(x1442,x1455,x573,Vector(x1442, x1442, x1443, x1453, x1454, x1455, x3381),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x1438, None
             stm: x1439, None
             stm: x1440, None
             stm: x1441, None
             stm: x3374, None
             stm: x3375, None
             stm: x3376, None
             stm: x1442, Some(0)
             stm: x1443, None
             stm: x1444, None
             stm: x1446, None
             stm: x1448, None
             stm: x1449, None
             stm: x3377, None
             stm: x3378, None
             stm: x1450, None
             stm: x1452, None
             stm: x1453, None
             stm: x3379, None
             stm: x3380, None
             stm: x1454, None
             stm: x3381, None
             stm: x3382, None
             stm: x3383, None
             stm: x3384, None
             stm: x1455, None
             stm: x1456, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x1666 = UnrolledReduce(Set(b561),x601,Block((x575) => Const(())),List(List(b1459, b1460)),List(List(b1462, b1463)),None)
          x1521 = ParallelPipe(Set(b561),Block(Const(())))
            x1499 = UnrolledForeach(Set(b1462, b561),x1477,Block(Const(())),List(List(b1479)),List(List(b1480)),None)
            Working on pipeLatencies of result Vector(Const(()), x1497, x1494, x1498, x1496, x1485, x1491, x1495), schedule Vector(x1482, x3025, x3026, x3385, x1484, x3386, x3387, x3388, x1485, x1486, x1488, x3027, x3028, x3389, x1490, x3390, x3391, x3392, x1491, x1492, x3393, x1493, x3394, x3395, x3396, x3397, x1494, x1495, x1496, x1497, x1498)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1497
            Computing fullDFS: x1493
            Computing fullDFS: x1486
            Computing fullDFS: x1485
            Computing fullDFS: x1484
            Computing fullDFS: x3026
            Computing fullDFS: x1482
            cur: x1482, inReduce: false, latency: 20.0
            Computing fullDFS: x3025
            Computing fullDFS: x3385
            cur: x3385, inReduce: false, latency: 0.0
            Computing fullDFS: x3386
            cur: x3386, inReduce: false, latency: 0.0
            Computing fullDFS: x3387
            cur: x3387, inReduce: false, latency: 0.0
            Computing fullDFS: x3388
            cur: x3388, inReduce: false, latency: 0.0
            Computing fullDFS: x3393
            Computing fullDFS: x1492
            Computing fullDFS: x1491
            Computing fullDFS: x1490
            Computing fullDFS: x3028
            Computing fullDFS: x1488
            cur: x1488, inReduce: false, latency: 0.2
            Computing fullDFS: x3027
            Computing fullDFS: x3389
            cur: x3389, inReduce: false, latency: 0.0
            Computing fullDFS: x3390
            cur: x3390, inReduce: false, latency: 0.0
            Computing fullDFS: x3391
            cur: x3391, inReduce: false, latency: 0.0
            Computing fullDFS: x3392
            cur: x3392, inReduce: false, latency: 0.0
            Computing fullDFS: x3394
            cur: x3394, inReduce: false, latency: 0.0
            Computing fullDFS: x3395
            cur: x3395, inReduce: false, latency: 0.0
            Computing fullDFS: x3396
            cur: x3396, inReduce: false, latency: 0.0
            Computing fullDFS: x3397
            cur: x3397, inReduce: false, latency: 0.0
            Computing fullDFS: x1494
            Computing fullDFS: x1498
            Computing fullDFS: x1496
            Computing fullDFS: x1495
            Cycles: Map()
            cycles are Vector()
               stm: x1482, None
               stm: x3025, None
               stm: x3026, None
               stm: x3385, None
               stm: x1484, None
               stm: x3386, None
               stm: x3387, None
               stm: x3388, None
               stm: x1485, None
               stm: x1486, None
               stm: x1488, None
               stm: x3027, None
               stm: x3028, None
               stm: x3389, None
               stm: x1490, None
               stm: x3390, None
               stm: x3391, None
               stm: x3392, None
               stm: x1491, None
               stm: x1492, None
               stm: x3393, None
               stm: x1493, None
               stm: x3394, None
               stm: x3395, None
               stm: x3396, None
               stm: x3397, None
               stm: x1494, None
               stm: x1495, None
               stm: x1496, None
               stm: x1497, None
               stm: x1498, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1520 = UnrolledForeach(Set(b1463, b561),x1478,Block(Const(())),List(List(b1500)),List(List(b1501)),None)
            Working on pipeLatencies of result Vector(Const(()), x1518, x1519, x1515, x1516, x1506, x1517, x1512), schedule Vector(x1503, x3029, x3030, x3398, x1505, x3399, x3400, x3401, x1506, x1507, x1509, x3031, x3032, x3402, x1511, x3403, x3404, x3405, x1512, x1513, x3406, x1514, x3407, x3408, x3409, x3410, x1515, x1516, x1517, x1518, x1519)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1518
            Computing fullDFS: x1514
            Computing fullDFS: x1507
            Computing fullDFS: x1506
            Computing fullDFS: x1505
            Computing fullDFS: x3030
            Computing fullDFS: x1503
            cur: x1503, inReduce: false, latency: 20.0
            Computing fullDFS: x3029
            Computing fullDFS: x3398
            cur: x3398, inReduce: false, latency: 0.0
            Computing fullDFS: x3399
            cur: x3399, inReduce: false, latency: 0.0
            Computing fullDFS: x3400
            cur: x3400, inReduce: false, latency: 0.0
            Computing fullDFS: x3401
            cur: x3401, inReduce: false, latency: 0.0
            Computing fullDFS: x3406
            Computing fullDFS: x1513
            Computing fullDFS: x1512
            Computing fullDFS: x1511
            Computing fullDFS: x3032
            Computing fullDFS: x1509
            cur: x1509, inReduce: false, latency: 0.2
            Computing fullDFS: x3031
            Computing fullDFS: x3402
            cur: x3402, inReduce: false, latency: 0.0
            Computing fullDFS: x3403
            cur: x3403, inReduce: false, latency: 0.0
            Computing fullDFS: x3404
            cur: x3404, inReduce: false, latency: 0.0
            Computing fullDFS: x3405
            cur: x3405, inReduce: false, latency: 0.0
            Computing fullDFS: x3407
            cur: x3407, inReduce: false, latency: 0.0
            Computing fullDFS: x3408
            cur: x3408, inReduce: false, latency: 0.0
            Computing fullDFS: x3409
            cur: x3409, inReduce: false, latency: 0.0
            Computing fullDFS: x3410
            cur: x3410, inReduce: false, latency: 0.0
            Computing fullDFS: x1519
            Computing fullDFS: x1515
            Computing fullDFS: x1516
            Computing fullDFS: x1517
            Cycles: Map()
            cycles are Vector()
               stm: x1503, None
               stm: x3029, None
               stm: x3030, None
               stm: x3398, None
               stm: x1505, None
               stm: x3399, None
               stm: x3400, None
               stm: x3401, None
               stm: x1506, None
               stm: x1507, None
               stm: x1509, None
               stm: x3031, None
               stm: x3032, None
               stm: x3402, None
               stm: x1511, None
               stm: x3403, None
               stm: x3404, None
               stm: x3405, None
               stm: x1512, None
               stm: x1513, None
               stm: x3406, None
               stm: x1514, None
               stm: x3407, None
               stm: x3408, None
               stm: x3409, None
               stm: x3410, None
               stm: x1515, None
               stm: x1516, None
               stm: x1517, None
               stm: x1518, None
               stm: x1519, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1550 = ParallelPipe(Set(b561),Block(Const(())))
            x1536 = UnitPipe(Set(b1462, b561),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1535, x1524, x1531, x1527), schedule Vector(x1524, x1525, x1527, x1528, x1529, x3411, x3033, x1531, x1532, x3412, x3034, x1535)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1535
            Computing fullDFS: x3034
            Computing fullDFS: x3033
            Computing fullDFS: x1529
            Computing fullDFS: x1528
            Computing fullDFS: x1527
            cur: x1527, inReduce: false, latency: 2.0
            Computing fullDFS: x3411
            Computing fullDFS: x1525
            Computing fullDFS: x1524
            cur: x1524, inReduce: false, latency: 2.0
            Computing fullDFS: x3412
            Computing fullDFS: x1532
            Computing fullDFS: x1531
            cur: x1531, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x1524, None
               stm: x1525, None
               stm: x1527, None
               stm: x1528, None
               stm: x1529, None
               stm: x3411, None
               stm: x3033, None
               stm: x1531, None
               stm: x1532, None
               stm: x3412, None
               stm: x3034, None
               stm: x1535, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1549 = UnitPipe(Set(b1463, b561),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1544, x1540, x1548, x1537), schedule Vector(x1537, x1538, x1540, x1541, x1542, x3413, x3035, x1544, x1545, x3414, x3036, x1548)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1544
            cur: x1544, inReduce: false, latency: 2.0
            Computing fullDFS: x1540
            cur: x1540, inReduce: false, latency: 2.0
            Computing fullDFS: x1548
            Computing fullDFS: x3036
            Computing fullDFS: x3035
            Computing fullDFS: x1542
            Computing fullDFS: x1541
            Computing fullDFS: x3413
            Computing fullDFS: x1538
            Computing fullDFS: x1537
            cur: x1537, inReduce: false, latency: 2.0
            Computing fullDFS: x3414
            Computing fullDFS: x1545
            Cycles: Map()
            cycles are Vector()
               stm: x1537, None
               stm: x1538, None
               stm: x1540, None
               stm: x1541, None
               stm: x1542, None
               stm: x3413, None
               stm: x3035, None
               stm: x1544, None
               stm: x1545, None
               stm: x3414, None
               stm: x3036, None
               stm: x1548, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1575 = ParallelPipe(Set(b561),Block(Const(())))
            x1565 = UnitPipe(Set(b1462, b561),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1557, x1563, x1564), schedule Vector(x1557, x1558, x1559, x1560, x1561, x1562, x1563, x1564)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1557
            cur: x1557, inReduce: false, latency: 2.0
            Computing fullDFS: x1563
            Computing fullDFS: x1561
            Computing fullDFS: x1559
            Computing fullDFS: x1558
            Computing fullDFS: x1560
            Computing fullDFS: x1564
            Computing fullDFS: x1562
            Cycles: Map()
            cycles are Vector()
               stm: x1557, None
               stm: x1558, None
               stm: x1559, None
               stm: x1560, None
               stm: x1561, None
               stm: x1562, None
               stm: x1563, None
               stm: x1564, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1574 = UnitPipe(Set(b1463, b561),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1566, x1572, x1573), schedule Vector(x1566, x1567, x1568, x1569, x1570, x1571, x1572, x1573)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1566
            cur: x1566, inReduce: false, latency: 2.0
            Computing fullDFS: x1572
            Computing fullDFS: x1570
            Computing fullDFS: x1568
            Computing fullDFS: x1567
            Computing fullDFS: x1569
            Computing fullDFS: x1573
            Computing fullDFS: x1571
            Cycles: Map()
            cycles are Vector()
               stm: x1566, None
               stm: x1567, None
               stm: x1568, None
               stm: x1569, None
               stm: x1570, None
               stm: x1571, None
               stm: x1572, None
               stm: x1573, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1593 = Switch(List(x2943, x2944),Block(x1592))
          Working on pipeLatencies of result Vector(x1592, x1591, x1590, x1580, x1581, Const(90)), schedule Vector(x1591, x1592, x1580, x1581, x1582, x1583, x3415, x1584, x3416, x1585, x3417, x1586, x3418, x1587, x1588, x1589, x3419, x1590)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x1592
          cur: x1592, inReduce: false, latency: 0.0
          Computing fullDFS: x1591
          Computing fullDFS: x1580
          cur: x1580, inReduce: false, latency: 0.0
          Computing fullDFS: x1581
          Computing fullDFS: x1590
          Computing fullDFS: x1587
          Computing fullDFS: x1586
          Computing fullDFS: x1585
          Computing fullDFS: x1584
          Computing fullDFS: x1583
          Computing fullDFS: x1582
          Computing fullDFS: x3415
          Computing fullDFS: x3416
          Computing fullDFS: x3417
          Computing fullDFS: x3418
          Computing fullDFS: x3419
          Computing fullDFS: x1589
          Computing fullDFS: x1588
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x1591, None
             stm: x1592, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1607 = Switch(List(x2945, x2946),Block(x1606))
          Working on pipeLatencies of result Vector(x1606, x1605, x1604, x1594, x1595, Const(90)), schedule Vector(x1605, x1606, x1594, x1595, x1596, x1597, x3420, x1598, x3421, x1599, x3422, x1600, x3423, x1601, x1602, x1603, x3424, x1604)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x1606
          cur: x1606, inReduce: false, latency: 0.0
          Computing fullDFS: x1605
          Computing fullDFS: x1594
          cur: x1594, inReduce: false, latency: 0.0
          Computing fullDFS: x1595
          Computing fullDFS: x1604
          Computing fullDFS: x1601
          Computing fullDFS: x1600
          Computing fullDFS: x1599
          Computing fullDFS: x1598
          Computing fullDFS: x1597
          Computing fullDFS: x1596
          Computing fullDFS: x3420
          Computing fullDFS: x3421
          Computing fullDFS: x3422
          Computing fullDFS: x3423
          Computing fullDFS: x3424
          Computing fullDFS: x1603
          Computing fullDFS: x1602
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x1605, None
             stm: x1606, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1612 = ParallelPipe(Set(b561),Block(Const(())))
            x1609 = UnitPipe(Set(b1462, b561),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1608), schedule Vector(x1608)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1608
            cur: x1608, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x1608, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1611 = UnitPipe(Set(b1463, b561),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1610), schedule Vector(x1610)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1610
            cur: x1610, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x1610, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1645 = ParallelPipe(Set(b561),Block(Const(())))
            x1630 = UnrolledForeach(Set(b1462, b561),x1615,Block(Const(())),List(List(b1617)),List(List(b1618)),None)
            Working on pipeLatencies of result Vector(Const(()), x1628, x1622, x1619, x1627, x1626, x1629, x1625), schedule Vector(x1619, x1620, x1621, x1622, x1623, x3425, x1624, x3426, x3427, x3428, x3429, x1625, x1626, x1627, x1628, x1629)
            Memories with both reads and writes in this scope: Set(x1468)
            NonConflictSets(x1619, x1629): Set()
            NonConflictSets(x1619, x1629): Set()
            Found Cycle: x1619, x1629
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1468,x1619,x1629)), Map(x1629 -> List(AccumTriple(x1468,x1619,x1629)), x1620 -> List(AccumTriple(x1468,x1619,x1629)), x1619 -> List(AccumTriple(x1468,x1619,x1629)), x1624 -> List(AccumTriple(x1468,x1619,x1629)), x1621 -> List(AccumTriple(x1468,x1619,x1629)))
            Computing fullDFS: Const(())
            Computing fullDFS: x1628
            Computing fullDFS: x1624
            Computing fullDFS: x1621
            Computing fullDFS: x1620
            Computing fullDFS: x1619
            cur: x1619, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1468,x1619,x1629))
            Computing fullDFS: x3425
            Computing fullDFS: x1623
            Computing fullDFS: x1622
            cur: x1622, inReduce: false, latency: 2.0
            Computing fullDFS: x3426
            cur: x3426, inReduce: false, latency: 0.0
            Computing fullDFS: x3427
            cur: x3427, inReduce: false, latency: 0.0
            Computing fullDFS: x3428
            cur: x3428, inReduce: false, latency: 0.0
            Computing fullDFS: x3429
            cur: x3429, inReduce: false, latency: 0.0
            Computing fullDFS: x1627
            Computing fullDFS: x1626
            Computing fullDFS: x1629
            Computing fullDFS: x1625
            Cycle #0: write: x1629, cycle: x1619, x1619, x1620, x1621, x1624, x1629
            Cycles: Map(x1629 -> Vector(x1619, x1619, x1620, x1621, x1624, x1629), x1620 -> Vector(x1619, x1620), x1626 -> Vector(x1619, x1620, x1621, x1624, x1626), x1628 -> Vector(x1619, x1620, x1621, x1624, x1628), x1619 -> List(x1619), x1625 -> Vector(x1619, x1620, x1621, x1624, x1625), x1624 -> Vector(x1619, x1620, x1621, x1624), x1627 -> Vector(x1619, x1620, x1621, x1624, x1627), x1621 -> Vector(x1619, x1620, x1621))
            pseudo cycles for x1468:
            Access: x1619 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1619 = SRAMBankedRead(x1468,Vector(List(Const(0))),Vector(b1617),Vector(Set(b1618, b1462, b561)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1629 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1629 = SRAMBankedWrite(x1468,Vector(x1624),Vector(List(Const(0))),Vector(x3429),Vector(Set(x3426, x3427, x3428))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1619),x1468,1.0), AAACycle(Vector(x1629),x1468,1.0), WARCycle(x1619,x1629,x1468,Vector(x1619, x1619, x1620, x1621, x1624, x1629),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1619, None
               stm: x1620, None
               stm: x1621, None
               stm: x1622, None
               stm: x1623, None
               stm: x3425, None
               stm: x1624, None
               stm: x3426, None
               stm: x3427, None
               stm: x3428, None
               stm: x3429, None
               stm: x1625, None
               stm: x1626, None
               stm: x1627, None
               stm: x1628, None
               stm: x1629, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1644 = UnrolledForeach(Set(b1463, b561),x1616,Block(Const(())),List(List(b1631)),List(List(b1632)),None)
            Working on pipeLatencies of result Vector(x1633, Const(()), x1640, x1641, x1636, x1643, x1639, x1642), schedule Vector(x1633, x1634, x1635, x1636, x1637, x3430, x1638, x3431, x3432, x3433, x3434, x1639, x1640, x1641, x1642, x1643)
            Memories with both reads and writes in this scope: Set(x1473)
            NonConflictSets(x1633, x1643): Set()
            NonConflictSets(x1633, x1643): Set()
            Found Cycle: x1633, x1643
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1473,x1633,x1643)), Map(x1638 -> List(AccumTriple(x1473,x1633,x1643)), x1635 -> List(AccumTriple(x1473,x1633,x1643)), x1643 -> List(AccumTriple(x1473,x1633,x1643)), x1634 -> List(AccumTriple(x1473,x1633,x1643)), x1633 -> List(AccumTriple(x1473,x1633,x1643)))
            Computing fullDFS: x1633
            cur: x1633, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1473,x1633,x1643))
            Computing fullDFS: Const(())
            Computing fullDFS: x1640
            Computing fullDFS: x1638
            Computing fullDFS: x1635
            Computing fullDFS: x1634
            Computing fullDFS: x3430
            Computing fullDFS: x1637
            Computing fullDFS: x1636
            cur: x1636, inReduce: false, latency: 2.0
            Computing fullDFS: x3431
            cur: x3431, inReduce: false, latency: 0.0
            Computing fullDFS: x3432
            cur: x3432, inReduce: false, latency: 0.0
            Computing fullDFS: x3433
            cur: x3433, inReduce: false, latency: 0.0
            Computing fullDFS: x3434
            cur: x3434, inReduce: false, latency: 0.0
            Computing fullDFS: x1641
            Computing fullDFS: x1643
            Computing fullDFS: x1639
            Computing fullDFS: x1642
            Cycle #0: write: x1643, cycle: x1633, x1633, x1634, x1635, x1638, x1643
            Cycles: Map(x1638 -> Vector(x1633, x1634, x1635, x1638), x1641 -> Vector(x1633, x1634, x1635, x1638, x1641), x1635 -> Vector(x1633, x1634, x1635), x1643 -> Vector(x1633, x1633, x1634, x1635, x1638, x1643), x1634 -> Vector(x1633, x1634), x1640 -> Vector(x1633, x1634, x1635, x1638, x1640), x1642 -> Vector(x1633, x1634, x1635, x1638, x1642), x1633 -> List(x1633), x1639 -> Vector(x1633, x1634, x1635, x1638, x1639))
            pseudo cycles for x1473:
            Access: x1633 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1633 = SRAMBankedRead(x1473,Vector(List(Const(0))),Vector(b1631),Vector(Set(b1632, b1463, b561)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1643 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1643 = SRAMBankedWrite(x1473,Vector(x1638),Vector(List(Const(0))),Vector(x3433),Vector(Set(x3431, x3434, x3432))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1633),x1473,1.0), AAACycle(Vector(x1643),x1473,1.0), WARCycle(x1633,x1643,x1473,Vector(x1633, x1633, x1634, x1635, x1638, x1643),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1633, None
               stm: x1634, None
               stm: x1635, None
               stm: x1636, None
               stm: x1637, None
               stm: x3430, None
               stm: x1638, None
               stm: x3431, None
               stm: x3432, None
               stm: x3433, None
               stm: x3434, None
               stm: x1639, None
               stm: x1640, None
               stm: x1641, None
               stm: x1642, None
               stm: x1643, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x1665 = UnrolledForeach(Set(),x621,Block(Const(())),Vector(List(b1461)),Vector(List(b1464)),None)
          Working on pipeLatencies of result Vector(Const(()), x1650, x1664, x1663, x1648, x1646), schedule Vector(x1646, x1647, x1648, x1649, x3435, x3436, x3437, x1650, x1651, x1652, x1654, x1656, x1657, x3438, x3439, x1658, x1660, x1661, x3440, x3441, x1662, x3442, x3443, x3444, x3445, x1663, x1664)
          Memories with both reads and writes in this scope: Set(x575)
          NonConflictSets(x1650, x1664): Set()
          NonConflictSets(x1650, x1664): Set()
          Found Cycle: x1650, x1664
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x575,x1650,x1664)), Map(x1650 -> List(AccumTriple(x575,x1650,x1664)), x1662 -> List(AccumTriple(x575,x1650,x1664)), x1661 -> List(AccumTriple(x575,x1650,x1664)), x1664 -> List(AccumTriple(x575,x1650,x1664)), x1651 -> List(AccumTriple(x575,x1650,x1664)), x3445 -> List(AccumTriple(x575,x1650,x1664)))
          Computing fullDFS: Const(())
          Computing fullDFS: x1650
          Computing fullDFS: x3435
          cur: x3435, inReduce: false, latency: 0.0
          Computing fullDFS: x3436
          cur: x3436, inReduce: false, latency: 0.0
          Computing fullDFS: x3437
          cur: x3437, inReduce: false, latency: 0.0
          Computing fullDFS: x1664
          Computing fullDFS: x3442
          cur: x3442, inReduce: false, latency: 0.0
          Computing fullDFS: x3443
          cur: x3443, inReduce: false, latency: 0.0
          Computing fullDFS: x3444
          cur: x3444, inReduce: false, latency: 0.0
          Computing fullDFS: x3445
          Computing fullDFS: x1662
          Computing fullDFS: x1661
          Computing fullDFS: x1651
          Computing fullDFS: x1658
          Computing fullDFS: x1657
          Computing fullDFS: x1647
          Computing fullDFS: x1646
          cur: x1646, inReduce: false, latency: 2.0
          Computing fullDFS: x1649
          Computing fullDFS: x1648
          cur: x1648, inReduce: false, latency: 2.0
          Computing fullDFS: x3438
          Computing fullDFS: x3439
          Computing fullDFS: x1656
          Computing fullDFS: x1652
          cur: x1652, inReduce: false, latency: 0.2
          Computing fullDFS: x1654
          cur: x1654, inReduce: false, latency: 0.2
          Computing fullDFS: x3440
          Computing fullDFS: x3441
          Computing fullDFS: x1660
          cur: x1660, inReduce: false, latency: 0.2
          Computing fullDFS: x1663
          Cycle #0: write: x1664, cycle: x1650, x1650, x1651, x1661, x1662, x3445, x1664
          Cycles: Map(x1650 -> List(x1650), x1662 -> Vector(x1650, x1651, x1661, x1662), x1661 -> Vector(x1650, x1651, x1661), x1664 -> Vector(x1650, x1650, x1651, x1661, x1662, x3445, x1664), x1651 -> Vector(x1650, x1651), x1663 -> Vector(x1650, x1651, x1661, x1662, x3445, x1663), x3445 -> Vector(x1650, x1651, x1661, x1662, x3445))
          pseudo cycles for x575:
          Access: x1650 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1650 = SRAMBankedRead(x575,Vector(List(Const(0))),Vector(x3436),Vector(Set(x3435, x3437)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x1664 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1664 = SRAMBankedWrite(x575,Vector(x3445),Vector(List(Const(0))),Vector(x3443),Vector(Set(x3444, x3442))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x1650),x575,1.0), AAACycle(Vector(x1664),x575,1.0), WARCycle(x1650,x1664,x575,Vector(x1650, x1650, x1651, x1661, x1662, x1664, x3445),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x1646, None
             stm: x1647, None
             stm: x1648, None
             stm: x1649, None
             stm: x3435, None
             stm: x3436, None
             stm: x3437, None
             stm: x1650, Some(0)
             stm: x1651, None
             stm: x1652, None
             stm: x1654, None
             stm: x1656, None
             stm: x1657, None
             stm: x3438, None
             stm: x3439, None
             stm: x1658, None
             stm: x1660, None
             stm: x1661, None
             stm: x3440, None
             stm: x3441, None
             stm: x1662, None
             stm: x3442, None
             stm: x3443, None
             stm: x3444, None
             stm: x3445, None
             stm: x1663, None
             stm: x1664, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x1874 = UnrolledReduce(Set(b562),x602,Block((x577) => Const(())),List(List(b1667, b1668)),List(List(b1670, b1671)),None)
          x1729 = ParallelPipe(Set(b562),Block(Const(())))
            x1707 = UnrolledForeach(Set(b1670, b562),x1685,Block(Const(())),List(List(b1687)),List(List(b1688)),None)
            Working on pipeLatencies of result Vector(Const(()), x1705, x1703, x1704, x1699, x1702, x1706, x1693), schedule Vector(x1690, x3037, x3038, x3446, x1692, x3447, x3448, x3449, x1693, x1694, x1696, x3039, x3040, x3450, x1698, x3451, x3452, x3453, x1699, x1700, x3454, x1701, x3455, x3456, x3457, x3458, x1702, x1703, x1704, x1705, x1706)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1705
            Computing fullDFS: x1701
            Computing fullDFS: x1694
            Computing fullDFS: x1693
            Computing fullDFS: x1692
            Computing fullDFS: x3038
            Computing fullDFS: x1690
            cur: x1690, inReduce: false, latency: 20.0
            Computing fullDFS: x3037
            Computing fullDFS: x3446
            cur: x3446, inReduce: false, latency: 0.0
            Computing fullDFS: x3447
            cur: x3447, inReduce: false, latency: 0.0
            Computing fullDFS: x3448
            cur: x3448, inReduce: false, latency: 0.0
            Computing fullDFS: x3449
            cur: x3449, inReduce: false, latency: 0.0
            Computing fullDFS: x3454
            Computing fullDFS: x1700
            Computing fullDFS: x1699
            Computing fullDFS: x1698
            Computing fullDFS: x3040
            Computing fullDFS: x1696
            cur: x1696, inReduce: false, latency: 0.2
            Computing fullDFS: x3039
            Computing fullDFS: x3450
            cur: x3450, inReduce: false, latency: 0.0
            Computing fullDFS: x3451
            cur: x3451, inReduce: false, latency: 0.0
            Computing fullDFS: x3452
            cur: x3452, inReduce: false, latency: 0.0
            Computing fullDFS: x3453
            cur: x3453, inReduce: false, latency: 0.0
            Computing fullDFS: x3455
            cur: x3455, inReduce: false, latency: 0.0
            Computing fullDFS: x3456
            cur: x3456, inReduce: false, latency: 0.0
            Computing fullDFS: x3457
            cur: x3457, inReduce: false, latency: 0.0
            Computing fullDFS: x3458
            cur: x3458, inReduce: false, latency: 0.0
            Computing fullDFS: x1703
            Computing fullDFS: x1704
            Computing fullDFS: x1702
            Computing fullDFS: x1706
            Cycles: Map()
            cycles are Vector()
               stm: x1690, None
               stm: x3037, None
               stm: x3038, None
               stm: x3446, None
               stm: x1692, None
               stm: x3447, None
               stm: x3448, None
               stm: x3449, None
               stm: x1693, None
               stm: x1694, None
               stm: x1696, None
               stm: x3039, None
               stm: x3040, None
               stm: x3450, None
               stm: x1698, None
               stm: x3451, None
               stm: x3452, None
               stm: x3453, None
               stm: x1699, None
               stm: x1700, None
               stm: x3454, None
               stm: x1701, None
               stm: x3455, None
               stm: x3456, None
               stm: x3457, None
               stm: x3458, None
               stm: x1702, None
               stm: x1703, None
               stm: x1704, None
               stm: x1705, None
               stm: x1706, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1728 = UnrolledForeach(Set(b1671, b562),x1686,Block(Const(())),List(List(b1708)),List(List(b1709)),None)
            Working on pipeLatencies of result Vector(Const(()), x1724, x1714, x1723, x1720, x1727, x1726, x1725), schedule Vector(x1711, x3041, x3042, x3459, x1713, x3460, x3461, x3462, x1714, x1715, x1717, x3043, x3044, x3463, x1719, x3464, x3465, x3466, x1720, x1721, x3467, x1722, x3468, x3469, x3470, x3471, x1723, x1724, x1725, x1726, x1727)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1724
            Computing fullDFS: x1722
            Computing fullDFS: x1715
            Computing fullDFS: x1714
            Computing fullDFS: x1713
            Computing fullDFS: x3042
            Computing fullDFS: x1711
            cur: x1711, inReduce: false, latency: 20.0
            Computing fullDFS: x3041
            Computing fullDFS: x3459
            cur: x3459, inReduce: false, latency: 0.0
            Computing fullDFS: x3460
            cur: x3460, inReduce: false, latency: 0.0
            Computing fullDFS: x3461
            cur: x3461, inReduce: false, latency: 0.0
            Computing fullDFS: x3462
            cur: x3462, inReduce: false, latency: 0.0
            Computing fullDFS: x3467
            Computing fullDFS: x1721
            Computing fullDFS: x1720
            Computing fullDFS: x1719
            Computing fullDFS: x3044
            Computing fullDFS: x1717
            cur: x1717, inReduce: false, latency: 0.2
            Computing fullDFS: x3043
            Computing fullDFS: x3463
            cur: x3463, inReduce: false, latency: 0.0
            Computing fullDFS: x3464
            cur: x3464, inReduce: false, latency: 0.0
            Computing fullDFS: x3465
            cur: x3465, inReduce: false, latency: 0.0
            Computing fullDFS: x3466
            cur: x3466, inReduce: false, latency: 0.0
            Computing fullDFS: x3468
            cur: x3468, inReduce: false, latency: 0.0
            Computing fullDFS: x3469
            cur: x3469, inReduce: false, latency: 0.0
            Computing fullDFS: x3470
            cur: x3470, inReduce: false, latency: 0.0
            Computing fullDFS: x3471
            cur: x3471, inReduce: false, latency: 0.0
            Computing fullDFS: x1723
            Computing fullDFS: x1727
            Computing fullDFS: x1726
            Computing fullDFS: x1725
            Cycles: Map()
            cycles are Vector()
               stm: x1711, None
               stm: x3041, None
               stm: x3042, None
               stm: x3459, None
               stm: x1713, None
               stm: x3460, None
               stm: x3461, None
               stm: x3462, None
               stm: x1714, None
               stm: x1715, None
               stm: x1717, None
               stm: x3043, None
               stm: x3044, None
               stm: x3463, None
               stm: x1719, None
               stm: x3464, None
               stm: x3465, None
               stm: x3466, None
               stm: x1720, None
               stm: x1721, None
               stm: x3467, None
               stm: x1722, None
               stm: x3468, None
               stm: x3469, None
               stm: x3470, None
               stm: x3471, None
               stm: x1723, None
               stm: x1724, None
               stm: x1725, None
               stm: x1726, None
               stm: x1727, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1758 = ParallelPipe(Set(b562),Block(Const(())))
            x1744 = UnitPipe(Set(b1670, b562),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1735, x1739, x1732, x1743), schedule Vector(x1732, x1733, x1735, x1736, x1737, x3472, x3045, x1739, x1740, x3473, x3046, x1743)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1735
            cur: x1735, inReduce: false, latency: 2.0
            Computing fullDFS: x1739
            cur: x1739, inReduce: false, latency: 2.0
            Computing fullDFS: x1732
            cur: x1732, inReduce: false, latency: 2.0
            Computing fullDFS: x1743
            Computing fullDFS: x3046
            Computing fullDFS: x3045
            Computing fullDFS: x1737
            Computing fullDFS: x1736
            Computing fullDFS: x3472
            Computing fullDFS: x1733
            Computing fullDFS: x3473
            Computing fullDFS: x1740
            Cycles: Map()
            cycles are Vector()
               stm: x1732, None
               stm: x1733, None
               stm: x1735, None
               stm: x1736, None
               stm: x1737, None
               stm: x3472, None
               stm: x3045, None
               stm: x1739, None
               stm: x1740, None
               stm: x3473, None
               stm: x3046, None
               stm: x1743, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1757 = UnitPipe(Set(b1671, b562),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1756, x1752, x1748, x1745), schedule Vector(x1745, x1746, x1748, x1749, x1750, x3474, x3047, x1752, x1753, x3475, x3048, x1756)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1756
            Computing fullDFS: x3048
            Computing fullDFS: x3047
            Computing fullDFS: x1750
            Computing fullDFS: x1749
            Computing fullDFS: x1748
            cur: x1748, inReduce: false, latency: 2.0
            Computing fullDFS: x3474
            Computing fullDFS: x1746
            Computing fullDFS: x1745
            cur: x1745, inReduce: false, latency: 2.0
            Computing fullDFS: x3475
            Computing fullDFS: x1753
            Computing fullDFS: x1752
            cur: x1752, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x1745, None
               stm: x1746, None
               stm: x1748, None
               stm: x1749, None
               stm: x1750, None
               stm: x3474, None
               stm: x3047, None
               stm: x1752, None
               stm: x1753, None
               stm: x3475, None
               stm: x3048, None
               stm: x1756, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1783 = ParallelPipe(Set(b562),Block(Const(())))
            x1773 = UnitPipe(Set(b1670, b562),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1765, x1771, x1772), schedule Vector(x1765, x1766, x1767, x1768, x1769, x1770, x1771, x1772)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1765
            cur: x1765, inReduce: false, latency: 2.0
            Computing fullDFS: x1771
            Computing fullDFS: x1769
            Computing fullDFS: x1767
            Computing fullDFS: x1766
            Computing fullDFS: x1768
            Computing fullDFS: x1772
            Computing fullDFS: x1770
            Cycles: Map()
            cycles are Vector()
               stm: x1765, None
               stm: x1766, None
               stm: x1767, None
               stm: x1768, None
               stm: x1769, None
               stm: x1770, None
               stm: x1771, None
               stm: x1772, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1782 = UnitPipe(Set(b1671, b562),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1774, x1780, x1781), schedule Vector(x1774, x1775, x1776, x1777, x1778, x1779, x1780, x1781)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1774
            cur: x1774, inReduce: false, latency: 2.0
            Computing fullDFS: x1780
            Computing fullDFS: x1778
            Computing fullDFS: x1776
            Computing fullDFS: x1775
            Computing fullDFS: x1777
            Computing fullDFS: x1781
            Computing fullDFS: x1779
            Cycles: Map()
            cycles are Vector()
               stm: x1774, None
               stm: x1775, None
               stm: x1776, None
               stm: x1777, None
               stm: x1778, None
               stm: x1779, None
               stm: x1780, None
               stm: x1781, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1801 = Switch(List(x2947, x2948),Block(x1800))
          Working on pipeLatencies of result Vector(x1800, x1799, x1798, x1788, x1789, Const(90)), schedule Vector(x1799, x1800, x1788, x1789, x1790, x1791, x3476, x1792, x3477, x1793, x3478, x1794, x3479, x1795, x1796, x1797, x3480, x1798)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x1800
          cur: x1800, inReduce: false, latency: 0.0
          Computing fullDFS: x1799
          Computing fullDFS: x1788
          cur: x1788, inReduce: false, latency: 0.0
          Computing fullDFS: x1789
          Computing fullDFS: x1798
          Computing fullDFS: x1795
          Computing fullDFS: x1794
          Computing fullDFS: x1793
          Computing fullDFS: x1792
          Computing fullDFS: x1791
          Computing fullDFS: x1790
          Computing fullDFS: x3476
          Computing fullDFS: x3477
          Computing fullDFS: x3478
          Computing fullDFS: x3479
          Computing fullDFS: x3480
          Computing fullDFS: x1797
          Computing fullDFS: x1796
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x1799, None
             stm: x1800, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1815 = Switch(List(x2949, x2950),Block(x1814))
          Working on pipeLatencies of result Vector(x1814, x1813, x1812, x1802, x1803, Const(90)), schedule Vector(x1813, x1814, x1802, x1803, x1804, x1805, x3481, x1806, x3482, x1807, x3483, x1808, x3484, x1809, x1810, x1811, x3485, x1812)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x1814
          cur: x1814, inReduce: false, latency: 0.0
          Computing fullDFS: x1813
          Computing fullDFS: x1802
          cur: x1802, inReduce: false, latency: 0.0
          Computing fullDFS: x1803
          Computing fullDFS: x1812
          Computing fullDFS: x1809
          Computing fullDFS: x1808
          Computing fullDFS: x1807
          Computing fullDFS: x1806
          Computing fullDFS: x1805
          Computing fullDFS: x1804
          Computing fullDFS: x3481
          Computing fullDFS: x3482
          Computing fullDFS: x3483
          Computing fullDFS: x3484
          Computing fullDFS: x3485
          Computing fullDFS: x1811
          Computing fullDFS: x1810
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x1813, None
             stm: x1814, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1820 = ParallelPipe(Set(b562),Block(Const(())))
            x1817 = UnitPipe(Set(b1670, b562),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1816), schedule Vector(x1816)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1816
            cur: x1816, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x1816, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1819 = UnitPipe(Set(b1671, b562),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1818), schedule Vector(x1818)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1818
            cur: x1818, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x1818, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1853 = ParallelPipe(Set(b562),Block(Const(())))
            x1838 = UnrolledForeach(Set(b1670, b562),x1823,Block(Const(())),List(List(b1825)),List(List(b1826)),None)
            Working on pipeLatencies of result Vector(Const(()), x1835, x1837, x1836, x1833, x1830, x1834, x1827), schedule Vector(x1827, x1828, x1829, x1830, x1831, x3486, x1832, x3487, x3488, x3489, x3490, x1833, x1834, x1835, x1836, x1837)
            Memories with both reads and writes in this scope: Set(x1676)
            NonConflictSets(x1827, x1834): Set()
            NonConflictSets(x1827, x1834): Set()
            Found Cycle: x1827, x1834
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1676,x1827,x1834)), Map(x1832 -> List(AccumTriple(x1676,x1827,x1834)), x1829 -> List(AccumTriple(x1676,x1827,x1834)), x1834 -> List(AccumTriple(x1676,x1827,x1834)), x1828 -> List(AccumTriple(x1676,x1827,x1834)), x1827 -> List(AccumTriple(x1676,x1827,x1834)))
            Computing fullDFS: Const(())
            Computing fullDFS: x1835
            Computing fullDFS: x1832
            Computing fullDFS: x1829
            Computing fullDFS: x1828
            Computing fullDFS: x1827
            cur: x1827, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1676,x1827,x1834))
            Computing fullDFS: x3486
            Computing fullDFS: x1831
            Computing fullDFS: x1830
            cur: x1830, inReduce: false, latency: 2.0
            Computing fullDFS: x3487
            cur: x3487, inReduce: false, latency: 0.0
            Computing fullDFS: x3488
            cur: x3488, inReduce: false, latency: 0.0
            Computing fullDFS: x3489
            cur: x3489, inReduce: false, latency: 0.0
            Computing fullDFS: x3490
            cur: x3490, inReduce: false, latency: 0.0
            Computing fullDFS: x1837
            Computing fullDFS: x1836
            Computing fullDFS: x1833
            Computing fullDFS: x1834
            Cycle #0: write: x1834, cycle: x1827, x1827, x1828, x1829, x1832, x1834
            Cycles: Map(x1833 -> Vector(x1827, x1828, x1829, x1832, x1833), x1832 -> Vector(x1827, x1828, x1829, x1832), x1835 -> Vector(x1827, x1828, x1829, x1832, x1835), x1829 -> Vector(x1827, x1828, x1829), x1837 -> Vector(x1827, x1828, x1829, x1832, x1837), x1834 -> Vector(x1827, x1827, x1828, x1829, x1832, x1834), x1828 -> Vector(x1827, x1828), x1836 -> Vector(x1827, x1828, x1829, x1832, x1836), x1827 -> List(x1827))
            pseudo cycles for x1676:
            Access: x1827 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1827 = SRAMBankedRead(x1676,Vector(List(Const(0))),Vector(b1825),Vector(Set(b1826, b1670, b562)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1834 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1834 = SRAMBankedWrite(x1676,Vector(x1832),Vector(List(Const(0))),Vector(x3488),Vector(Set(x3487, x3490, x3489))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1827),x1676,1.0), AAACycle(Vector(x1834),x1676,1.0), WARCycle(x1827,x1834,x1676,Vector(x1827, x1827, x1828, x1829, x1832, x1834),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1827, None
               stm: x1828, None
               stm: x1829, None
               stm: x1830, None
               stm: x1831, None
               stm: x3486, None
               stm: x1832, None
               stm: x3487, None
               stm: x3488, None
               stm: x3489, None
               stm: x3490, None
               stm: x1833, None
               stm: x1834, None
               stm: x1835, None
               stm: x1836, None
               stm: x1837, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1852 = UnrolledForeach(Set(b1671, b562),x1824,Block(Const(())),List(List(b1839)),List(List(b1840)),None)
            Working on pipeLatencies of result Vector(x1850, Const(()), x1847, x1851, x1841, x1849, x1844, x1848), schedule Vector(x1841, x1842, x1843, x1844, x1845, x3491, x1846, x3492, x3493, x3494, x3495, x1847, x1848, x1849, x1850, x1851)
            Memories with both reads and writes in this scope: Set(x1681)
            NonConflictSets(x1841, x1851): Set()
            NonConflictSets(x1841, x1851): Set()
            Found Cycle: x1841, x1851
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1681,x1841,x1851)), Map(x1851 -> List(AccumTriple(x1681,x1841,x1851)), x1842 -> List(AccumTriple(x1681,x1841,x1851)), x1841 -> List(AccumTriple(x1681,x1841,x1851)), x1846 -> List(AccumTriple(x1681,x1841,x1851)), x1843 -> List(AccumTriple(x1681,x1841,x1851)))
            Computing fullDFS: x1850
            Computing fullDFS: x1846
            Computing fullDFS: x1843
            Computing fullDFS: x1842
            Computing fullDFS: x1841
            cur: x1841, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1681,x1841,x1851))
            Computing fullDFS: x3491
            Computing fullDFS: x1845
            Computing fullDFS: x1844
            cur: x1844, inReduce: false, latency: 2.0
            Computing fullDFS: x3492
            cur: x3492, inReduce: false, latency: 0.0
            Computing fullDFS: x3493
            cur: x3493, inReduce: false, latency: 0.0
            Computing fullDFS: x3494
            cur: x3494, inReduce: false, latency: 0.0
            Computing fullDFS: x3495
            cur: x3495, inReduce: false, latency: 0.0
            Computing fullDFS: Const(())
            Computing fullDFS: x1847
            Computing fullDFS: x1851
            Computing fullDFS: x1849
            Computing fullDFS: x1848
            Cycle #0: write: x1851, cycle: x1841, x1841, x1842, x1843, x1846, x1851
            Cycles: Map(x1851 -> Vector(x1841, x1841, x1842, x1843, x1846, x1851), x1842 -> Vector(x1841, x1842), x1850 -> Vector(x1841, x1842, x1843, x1846, x1850), x1841 -> List(x1841), x1847 -> Vector(x1841, x1842, x1843, x1846, x1847), x1846 -> Vector(x1841, x1842, x1843, x1846), x1849 -> Vector(x1841, x1842, x1843, x1846, x1849), x1843 -> Vector(x1841, x1842, x1843), x1848 -> Vector(x1841, x1842, x1843, x1846, x1848))
            pseudo cycles for x1681:
            Access: x1841 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1841 = SRAMBankedRead(x1681,Vector(List(Const(0))),Vector(b1839),Vector(Set(b1840, b1671, b562)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x1851 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x1851 = SRAMBankedWrite(x1681,Vector(x1846),Vector(List(Const(0))),Vector(x3495),Vector(Set(x3492, x3493, x3494))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x1841),x1681,1.0), AAACycle(Vector(x1851),x1681,1.0), WARCycle(x1841,x1851,x1681,Vector(x1841, x1841, x1842, x1843, x1846, x1851),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x1841, None
               stm: x1842, None
               stm: x1843, None
               stm: x1844, None
               stm: x1845, None
               stm: x3491, None
               stm: x1846, None
               stm: x3492, None
               stm: x3493, None
               stm: x3494, None
               stm: x3495, None
               stm: x1847, None
               stm: x1848, None
               stm: x1849, None
               stm: x1850, None
               stm: x1851, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x1873 = UnrolledForeach(Set(),x622,Block(Const(())),Vector(List(b1669)),Vector(List(b1672)),None)
          Working on pipeLatencies of result Vector(Const(()), x1872, x1871, x1858, x1856, x1854), schedule Vector(x1854, x1855, x1856, x1857, x3496, x3497, x3498, x1858, x1859, x1860, x1862, x1864, x1865, x3499, x3500, x1866, x1868, x1869, x3501, x3502, x1870, x3503, x3504, x3505, x3506, x1871, x1872)
          Memories with both reads and writes in this scope: Set(x577)
          NonConflictSets(x1858, x1871): Set()
          NonConflictSets(x1858, x1871): Set()
          Found Cycle: x1858, x1871
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x577,x1858,x1871)), Map(x1859 -> List(AccumTriple(x577,x1858,x1871)), x1871 -> List(AccumTriple(x577,x1858,x1871)), x3506 -> List(AccumTriple(x577,x1858,x1871)), x1858 -> List(AccumTriple(x577,x1858,x1871)), x1870 -> List(AccumTriple(x577,x1858,x1871)), x1869 -> List(AccumTriple(x577,x1858,x1871)))
          Computing fullDFS: Const(())
          Computing fullDFS: x1872
          Computing fullDFS: x3503
          cur: x3503, inReduce: false, latency: 0.0
          Computing fullDFS: x3504
          cur: x3504, inReduce: false, latency: 0.0
          Computing fullDFS: x3505
          cur: x3505, inReduce: false, latency: 0.0
          Computing fullDFS: x3506
          Computing fullDFS: x1870
          Computing fullDFS: x1869
          Computing fullDFS: x1859
          Computing fullDFS: x1858
          Computing fullDFS: x3496
          cur: x3496, inReduce: false, latency: 0.0
          Computing fullDFS: x3497
          cur: x3497, inReduce: false, latency: 0.0
          Computing fullDFS: x3498
          cur: x3498, inReduce: false, latency: 0.0
          Computing fullDFS: x1866
          Computing fullDFS: x1865
          Computing fullDFS: x1855
          Computing fullDFS: x1854
          cur: x1854, inReduce: false, latency: 2.0
          Computing fullDFS: x1857
          Computing fullDFS: x1856
          cur: x1856, inReduce: false, latency: 2.0
          Computing fullDFS: x3499
          Computing fullDFS: x1864
          Computing fullDFS: x1860
          cur: x1860, inReduce: false, latency: 0.2
          Computing fullDFS: x1862
          cur: x1862, inReduce: false, latency: 0.2
          Computing fullDFS: x3500
          Computing fullDFS: x3501
          Computing fullDFS: x3502
          Computing fullDFS: x1868
          cur: x1868, inReduce: false, latency: 0.2
          Computing fullDFS: x1871
          Cycle #0: write: x1871, cycle: x1858, x1858, x1859, x1869, x1870, x3506, x1871
          Cycles: Map(x1859 -> Vector(x1858, x1859), x1871 -> Vector(x1858, x1858, x1859, x1869, x1870, x3506, x1871), x3506 -> Vector(x1858, x1859, x1869, x1870, x3506), x1858 -> List(x1858), x1870 -> Vector(x1858, x1859, x1869, x1870), x1869 -> Vector(x1858, x1859, x1869), x1872 -> Vector(x1858, x1859, x1869, x1870, x3506, x1872))
          pseudo cycles for x577:
          Access: x1858 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1858 = SRAMBankedRead(x577,Vector(List(Const(0))),Vector(x3496),Vector(Set(x3498, x3497)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x1871 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x1871 = SRAMBankedWrite(x577,Vector(x3506),Vector(List(Const(0))),Vector(x3505),Vector(Set(x3503, x3504))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x1858),x577,1.0), AAACycle(Vector(x1871),x577,1.0), WARCycle(x1858,x1871,x577,Vector(x1858, x1858, x1859, x1869, x1870, x1871, x3506),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x1854, None
             stm: x1855, None
             stm: x1856, None
             stm: x1857, None
             stm: x3496, None
             stm: x3497, None
             stm: x3498, None
             stm: x1858, Some(0)
             stm: x1859, None
             stm: x1860, None
             stm: x1862, None
             stm: x1864, None
             stm: x1865, None
             stm: x3499, None
             stm: x3500, None
             stm: x1866, None
             stm: x1868, None
             stm: x1869, None
             stm: x3501, None
             stm: x3502, None
             stm: x1870, None
             stm: x3503, None
             stm: x3504, None
             stm: x3505, None
             stm: x3506, None
             stm: x1871, None
             stm: x1872, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x2082 = UnrolledReduce(Set(b563),x603,Block((x579) => Const(())),List(List(b1875, b1876)),List(List(b1878, b1879)),None)
          x1937 = ParallelPipe(Set(b563),Block(Const(())))
            x1915 = UnrolledForeach(Set(b1878, b563),x1893,Block(Const(())),List(List(b1895)),List(List(b1896)),None)
            Working on pipeLatencies of result Vector(Const(()), x1914, x1907, x1911, x1910, x1901, x1913, x1912), schedule Vector(x1898, x3049, x3050, x3507, x1900, x3508, x3509, x3510, x1901, x1902, x1904, x3051, x3052, x3511, x1906, x3512, x3513, x3514, x1907, x1908, x3515, x1909, x3516, x3517, x3518, x3519, x1910, x1911, x1912, x1913, x1914)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1914
            Computing fullDFS: x1909
            Computing fullDFS: x1902
            Computing fullDFS: x1901
            Computing fullDFS: x1900
            Computing fullDFS: x3050
            Computing fullDFS: x1898
            cur: x1898, inReduce: false, latency: 20.0
            Computing fullDFS: x3049
            Computing fullDFS: x3507
            cur: x3507, inReduce: false, latency: 0.0
            Computing fullDFS: x3508
            cur: x3508, inReduce: false, latency: 0.0
            Computing fullDFS: x3509
            cur: x3509, inReduce: false, latency: 0.0
            Computing fullDFS: x3510
            cur: x3510, inReduce: false, latency: 0.0
            Computing fullDFS: x3515
            Computing fullDFS: x1908
            Computing fullDFS: x1907
            Computing fullDFS: x1906
            Computing fullDFS: x3052
            Computing fullDFS: x1904
            cur: x1904, inReduce: false, latency: 0.2
            Computing fullDFS: x3051
            Computing fullDFS: x3511
            cur: x3511, inReduce: false, latency: 0.0
            Computing fullDFS: x3512
            cur: x3512, inReduce: false, latency: 0.0
            Computing fullDFS: x3513
            cur: x3513, inReduce: false, latency: 0.0
            Computing fullDFS: x3514
            cur: x3514, inReduce: false, latency: 0.0
            Computing fullDFS: x3516
            cur: x3516, inReduce: false, latency: 0.0
            Computing fullDFS: x3517
            cur: x3517, inReduce: false, latency: 0.0
            Computing fullDFS: x3518
            cur: x3518, inReduce: false, latency: 0.0
            Computing fullDFS: x3519
            cur: x3519, inReduce: false, latency: 0.0
            Computing fullDFS: x1911
            Computing fullDFS: x1910
            Computing fullDFS: x1913
            Computing fullDFS: x1912
            Cycles: Map()
            cycles are Vector()
               stm: x1898, None
               stm: x3049, None
               stm: x3050, None
               stm: x3507, None
               stm: x1900, None
               stm: x3508, None
               stm: x3509, None
               stm: x3510, None
               stm: x1901, None
               stm: x1902, None
               stm: x1904, None
               stm: x3051, None
               stm: x3052, None
               stm: x3511, None
               stm: x1906, None
               stm: x3512, None
               stm: x3513, None
               stm: x3514, None
               stm: x1907, None
               stm: x1908, None
               stm: x3515, None
               stm: x1909, None
               stm: x3516, None
               stm: x3517, None
               stm: x3518, None
               stm: x3519, None
               stm: x1910, None
               stm: x1911, None
               stm: x1912, None
               stm: x1913, None
               stm: x1914, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1936 = UnrolledForeach(Set(b1879, b563),x1894,Block(Const(())),List(List(b1916)),List(List(b1917)),None)
            Working on pipeLatencies of result Vector(Const(()), x1935, x1922, x1931, x1928, x1932, x1933, x1934), schedule Vector(x1919, x3053, x3054, x3520, x1921, x3521, x3522, x3523, x1922, x1923, x1925, x3055, x3056, x3524, x1927, x3525, x3526, x3527, x1928, x1929, x3528, x1930, x3529, x3530, x3531, x3532, x1931, x1932, x1933, x1934, x1935)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1935
            Computing fullDFS: x1930
            Computing fullDFS: x1923
            Computing fullDFS: x1922
            Computing fullDFS: x1921
            Computing fullDFS: x3054
            Computing fullDFS: x1919
            cur: x1919, inReduce: false, latency: 20.0
            Computing fullDFS: x3053
            Computing fullDFS: x3520
            cur: x3520, inReduce: false, latency: 0.0
            Computing fullDFS: x3521
            cur: x3521, inReduce: false, latency: 0.0
            Computing fullDFS: x3522
            cur: x3522, inReduce: false, latency: 0.0
            Computing fullDFS: x3523
            cur: x3523, inReduce: false, latency: 0.0
            Computing fullDFS: x3528
            Computing fullDFS: x1929
            Computing fullDFS: x1928
            Computing fullDFS: x1927
            Computing fullDFS: x3056
            Computing fullDFS: x1925
            cur: x1925, inReduce: false, latency: 0.2
            Computing fullDFS: x3055
            Computing fullDFS: x3524
            cur: x3524, inReduce: false, latency: 0.0
            Computing fullDFS: x3525
            cur: x3525, inReduce: false, latency: 0.0
            Computing fullDFS: x3526
            cur: x3526, inReduce: false, latency: 0.0
            Computing fullDFS: x3527
            cur: x3527, inReduce: false, latency: 0.0
            Computing fullDFS: x3529
            cur: x3529, inReduce: false, latency: 0.0
            Computing fullDFS: x3530
            cur: x3530, inReduce: false, latency: 0.0
            Computing fullDFS: x3531
            cur: x3531, inReduce: false, latency: 0.0
            Computing fullDFS: x3532
            cur: x3532, inReduce: false, latency: 0.0
            Computing fullDFS: x1931
            Computing fullDFS: x1932
            Computing fullDFS: x1933
            Computing fullDFS: x1934
            Cycles: Map()
            cycles are Vector()
               stm: x1919, None
               stm: x3053, None
               stm: x3054, None
               stm: x3520, None
               stm: x1921, None
               stm: x3521, None
               stm: x3522, None
               stm: x3523, None
               stm: x1922, None
               stm: x1923, None
               stm: x1925, None
               stm: x3055, None
               stm: x3056, None
               stm: x3524, None
               stm: x1927, None
               stm: x3525, None
               stm: x3526, None
               stm: x3527, None
               stm: x1928, None
               stm: x1929, None
               stm: x3528, None
               stm: x1930, None
               stm: x3529, None
               stm: x3530, None
               stm: x3531, None
               stm: x3532, None
               stm: x1931, None
               stm: x1932, None
               stm: x1933, None
               stm: x1934, None
               stm: x1935, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1966 = ParallelPipe(Set(b563),Block(Const(())))
            x1952 = UnitPipe(Set(b1878, b563),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1943, x1951, x1947, x1940), schedule Vector(x1940, x1941, x1943, x1944, x1945, x3533, x3057, x1947, x1948, x3534, x3058, x1951)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1943
            cur: x1943, inReduce: false, latency: 2.0
            Computing fullDFS: x1951
            Computing fullDFS: x3058
            Computing fullDFS: x3057
            Computing fullDFS: x1945
            Computing fullDFS: x1944
            Computing fullDFS: x3533
            Computing fullDFS: x1941
            Computing fullDFS: x1940
            cur: x1940, inReduce: false, latency: 2.0
            Computing fullDFS: x3534
            Computing fullDFS: x1948
            Computing fullDFS: x1947
            cur: x1947, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x1940, None
               stm: x1941, None
               stm: x1943, None
               stm: x1944, None
               stm: x1945, None
               stm: x3533, None
               stm: x3057, None
               stm: x1947, None
               stm: x1948, None
               stm: x3534, None
               stm: x3058, None
               stm: x1951, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1965 = UnitPipe(Set(b1879, b563),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1956, x1960, x1953, x1964), schedule Vector(x1953, x1954, x1956, x1957, x1958, x3535, x3059, x1960, x1961, x3536, x3060, x1964)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1956
            cur: x1956, inReduce: false, latency: 2.0
            Computing fullDFS: x1960
            cur: x1960, inReduce: false, latency: 2.0
            Computing fullDFS: x1953
            cur: x1953, inReduce: false, latency: 2.0
            Computing fullDFS: x1964
            Computing fullDFS: x3060
            Computing fullDFS: x3059
            Computing fullDFS: x1958
            Computing fullDFS: x1957
            Computing fullDFS: x3535
            Computing fullDFS: x1954
            Computing fullDFS: x3536
            Computing fullDFS: x1961
            Cycles: Map()
            cycles are Vector()
               stm: x1953, None
               stm: x1954, None
               stm: x1956, None
               stm: x1957, None
               stm: x1958, None
               stm: x3535, None
               stm: x3059, None
               stm: x1960, None
               stm: x1961, None
               stm: x3536, None
               stm: x3060, None
               stm: x1964, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x1991 = ParallelPipe(Set(b563),Block(Const(())))
            x1981 = UnitPipe(Set(b1878, b563),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1973, x1979, x1980), schedule Vector(x1973, x1974, x1975, x1976, x1977, x1978, x1979, x1980)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1973
            cur: x1973, inReduce: false, latency: 2.0
            Computing fullDFS: x1979
            Computing fullDFS: x1977
            Computing fullDFS: x1975
            Computing fullDFS: x1974
            Computing fullDFS: x1976
            Computing fullDFS: x1980
            Computing fullDFS: x1978
            Cycles: Map()
            cycles are Vector()
               stm: x1973, None
               stm: x1974, None
               stm: x1975, None
               stm: x1976, None
               stm: x1977, None
               stm: x1978, None
               stm: x1979, None
               stm: x1980, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1990 = UnitPipe(Set(b1879, b563),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x1982, x1988, x1989), schedule Vector(x1982, x1983, x1984, x1985, x1986, x1987, x1988, x1989)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x1982
            cur: x1982, inReduce: false, latency: 2.0
            Computing fullDFS: x1988
            Computing fullDFS: x1986
            Computing fullDFS: x1984
            Computing fullDFS: x1983
            Computing fullDFS: x1985
            Computing fullDFS: x1989
            Computing fullDFS: x1987
            Cycles: Map()
            cycles are Vector()
               stm: x1982, None
               stm: x1983, None
               stm: x1984, None
               stm: x1985, None
               stm: x1986, None
               stm: x1987, None
               stm: x1988, None
               stm: x1989, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2009 = Switch(List(x2951, x2952),Block(x2008))
          Working on pipeLatencies of result Vector(x2008, x2007, x2006, x1996, x1997, Const(90)), schedule Vector(x2007, x2008, x1996, x1997, x1998, x1999, x3537, x2000, x3538, x2001, x3539, x2002, x3540, x2003, x2004, x2005, x3541, x2006)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x2008
          cur: x2008, inReduce: false, latency: 0.0
          Computing fullDFS: x2007
          Computing fullDFS: x1996
          cur: x1996, inReduce: false, latency: 0.0
          Computing fullDFS: x1997
          Computing fullDFS: x2006
          Computing fullDFS: x2003
          Computing fullDFS: x2002
          Computing fullDFS: x2001
          Computing fullDFS: x2000
          Computing fullDFS: x1999
          Computing fullDFS: x1998
          Computing fullDFS: x3537
          Computing fullDFS: x3538
          Computing fullDFS: x3539
          Computing fullDFS: x3540
          Computing fullDFS: x3541
          Computing fullDFS: x2005
          Computing fullDFS: x2004
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x2007, None
             stm: x2008, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2023 = Switch(List(x2953, x2954),Block(x2022))
          Working on pipeLatencies of result Vector(x2022, x2021, x2020, x2010, x2011, Const(90)), schedule Vector(x2021, x2022, x2010, x2011, x2012, x2013, x3542, x2014, x3543, x2015, x3544, x2016, x3545, x2017, x2018, x2019, x3546, x2020)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x2022
          cur: x2022, inReduce: false, latency: 0.0
          Computing fullDFS: x2021
          Computing fullDFS: x2010
          cur: x2010, inReduce: false, latency: 0.0
          Computing fullDFS: x2011
          Computing fullDFS: x2020
          Computing fullDFS: x2017
          Computing fullDFS: x2016
          Computing fullDFS: x2015
          Computing fullDFS: x2014
          Computing fullDFS: x2013
          Computing fullDFS: x2012
          Computing fullDFS: x3542
          Computing fullDFS: x3543
          Computing fullDFS: x3544
          Computing fullDFS: x3545
          Computing fullDFS: x3546
          Computing fullDFS: x2019
          Computing fullDFS: x2018
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x2021, None
             stm: x2022, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2028 = ParallelPipe(Set(b563),Block(Const(())))
            x2025 = UnitPipe(Set(b1878, b563),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2024), schedule Vector(x2024)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2024
            cur: x2024, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x2024, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2027 = UnitPipe(Set(b1879, b563),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2026), schedule Vector(x2026)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2026
            cur: x2026, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x2026, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2061 = ParallelPipe(Set(b563),Block(Const(())))
            x2046 = UnrolledForeach(Set(b1878, b563),x2031,Block(Const(())),List(List(b2033)),List(List(b2034)),None)
            Working on pipeLatencies of result Vector(Const(()), x2035, x2042, x2038, x2043, x2044, x2045, x2041), schedule Vector(x2035, x2036, x2037, x2038, x2039, x3547, x2040, x3548, x3549, x3550, x3551, x2041, x2042, x2043, x2044, x2045)
            Memories with both reads and writes in this scope: Set(x1884)
            NonConflictSets(x2035, x2043): Set()
            NonConflictSets(x2035, x2043): Set()
            Found Cycle: x2035, x2043
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1884,x2035,x2043)), Map(x2036 -> List(AccumTriple(x1884,x2035,x2043)), x2035 -> List(AccumTriple(x1884,x2035,x2043)), x2040 -> List(AccumTriple(x1884,x2035,x2043)), x2043 -> List(AccumTriple(x1884,x2035,x2043)), x2037 -> List(AccumTriple(x1884,x2035,x2043)))
            Computing fullDFS: Const(())
            Computing fullDFS: x2035
            cur: x2035, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1884,x2035,x2043))
            Computing fullDFS: x2042
            Computing fullDFS: x2040
            Computing fullDFS: x2037
            Computing fullDFS: x2036
            Computing fullDFS: x3547
            Computing fullDFS: x2039
            Computing fullDFS: x2038
            cur: x2038, inReduce: false, latency: 2.0
            Computing fullDFS: x3548
            cur: x3548, inReduce: false, latency: 0.0
            Computing fullDFS: x3549
            cur: x3549, inReduce: false, latency: 0.0
            Computing fullDFS: x3550
            cur: x3550, inReduce: false, latency: 0.0
            Computing fullDFS: x3551
            cur: x3551, inReduce: false, latency: 0.0
            Computing fullDFS: x2043
            Computing fullDFS: x2044
            Computing fullDFS: x2045
            Computing fullDFS: x2041
            Cycle #0: write: x2043, cycle: x2035, x2035, x2036, x2037, x2040, x2043
            Cycles: Map(x2042 -> Vector(x2035, x2036, x2037, x2040, x2042), x2045 -> Vector(x2035, x2036, x2037, x2040, x2045), x2036 -> Vector(x2035, x2036), x2044 -> Vector(x2035, x2036, x2037, x2040, x2044), x2035 -> List(x2035), x2041 -> Vector(x2035, x2036, x2037, x2040, x2041), x2040 -> Vector(x2035, x2036, x2037, x2040), x2043 -> Vector(x2035, x2035, x2036, x2037, x2040, x2043), x2037 -> Vector(x2035, x2036, x2037))
            pseudo cycles for x1884:
            Access: x2035 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2035 = SRAMBankedRead(x1884,Vector(List(Const(0))),Vector(b2033),Vector(Set(b2034, b1878, b563)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x2043 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2043 = SRAMBankedWrite(x1884,Vector(x2040),Vector(List(Const(0))),Vector(x3550),Vector(Set(x3548, x3549, x3551))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x2035),x1884,1.0), AAACycle(Vector(x2043),x1884,1.0), WARCycle(x2035,x2043,x1884,Vector(x2035, x2035, x2036, x2037, x2040, x2043),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x2035, None
               stm: x2036, None
               stm: x2037, None
               stm: x2038, None
               stm: x2039, None
               stm: x3547, None
               stm: x2040, None
               stm: x3548, None
               stm: x3549, None
               stm: x3550, None
               stm: x3551, None
               stm: x2041, None
               stm: x2042, None
               stm: x2043, None
               stm: x2044, None
               stm: x2045, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2060 = UnrolledForeach(Set(b1879, b563),x2032,Block(Const(())),List(List(b2047)),List(List(b2048)),None)
            Working on pipeLatencies of result Vector(Const(()), x2049, x2058, x2052, x2057, x2055, x2056, x2059), schedule Vector(x2049, x2050, x2051, x2052, x2053, x3552, x2054, x3553, x3554, x3555, x3556, x2055, x2056, x2057, x2058, x2059)
            Memories with both reads and writes in this scope: Set(x1889)
            NonConflictSets(x2049, x2059): Set()
            NonConflictSets(x2049, x2059): Set()
            Found Cycle: x2049, x2059
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x1889,x2049,x2059)), Map(x2051 -> List(AccumTriple(x1889,x2049,x2059)), x2059 -> List(AccumTriple(x1889,x2049,x2059)), x2050 -> List(AccumTriple(x1889,x2049,x2059)), x2049 -> List(AccumTriple(x1889,x2049,x2059)), x2054 -> List(AccumTriple(x1889,x2049,x2059)))
            Computing fullDFS: Const(())
            Computing fullDFS: x2049
            cur: x2049, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x1889,x2049,x2059))
            Computing fullDFS: x2058
            Computing fullDFS: x2054
            Computing fullDFS: x2051
            Computing fullDFS: x2050
            Computing fullDFS: x3552
            Computing fullDFS: x2053
            Computing fullDFS: x2052
            cur: x2052, inReduce: false, latency: 2.0
            Computing fullDFS: x3553
            cur: x3553, inReduce: false, latency: 0.0
            Computing fullDFS: x3554
            cur: x3554, inReduce: false, latency: 0.0
            Computing fullDFS: x3555
            cur: x3555, inReduce: false, latency: 0.0
            Computing fullDFS: x3556
            cur: x3556, inReduce: false, latency: 0.0
            Computing fullDFS: x2057
            Computing fullDFS: x2055
            Computing fullDFS: x2056
            Computing fullDFS: x2059
            Cycle #0: write: x2059, cycle: x2049, x2049, x2050, x2051, x2054, x2059
            Cycles: Map(x2057 -> Vector(x2049, x2050, x2051, x2054, x2057), x2051 -> Vector(x2049, x2050, x2051), x2056 -> Vector(x2049, x2050, x2051, x2054, x2056), x2059 -> Vector(x2049, x2049, x2050, x2051, x2054, x2059), x2050 -> Vector(x2049, x2050), x2058 -> Vector(x2049, x2050, x2051, x2054, x2058), x2049 -> List(x2049), x2055 -> Vector(x2049, x2050, x2051, x2054, x2055), x2054 -> Vector(x2049, x2050, x2051, x2054))
            pseudo cycles for x1889:
            Access: x2049 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2049 = SRAMBankedRead(x1889,Vector(List(Const(0))),Vector(b2047),Vector(Set(b2048, b1879, b563)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x2059 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2059 = SRAMBankedWrite(x1889,Vector(x2054),Vector(List(Const(0))),Vector(x3554),Vector(Set(x3555, x3553, x3556))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x2049),x1889,1.0), AAACycle(Vector(x2059),x1889,1.0), WARCycle(x2049,x2059,x1889,Vector(x2049, x2049, x2050, x2051, x2054, x2059),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x2049, None
               stm: x2050, None
               stm: x2051, None
               stm: x2052, None
               stm: x2053, None
               stm: x3552, None
               stm: x2054, None
               stm: x3553, None
               stm: x3554, None
               stm: x3555, None
               stm: x3556, None
               stm: x2055, None
               stm: x2056, None
               stm: x2057, None
               stm: x2058, None
               stm: x2059, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x2081 = UnrolledForeach(Set(),x623,Block(Const(())),Vector(List(b1877)),Vector(List(b1880)),None)
          Working on pipeLatencies of result Vector(Const(()), x2062, x2080, x2079, x2064, x2066), schedule Vector(x2062, x2063, x2064, x2065, x3557, x3558, x3559, x2066, x2067, x2068, x2070, x2072, x2073, x3560, x3561, x2074, x2076, x2077, x3562, x3563, x2078, x3564, x3565, x3566, x3567, x2079, x2080)
          Memories with both reads and writes in this scope: Set(x579)
          NonConflictSets(x2066, x2079): Set()
          NonConflictSets(x2066, x2079): Set()
          Found Cycle: x2066, x2079
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x579,x2066,x2079)), Map(x2066 -> List(AccumTriple(x579,x2066,x2079)), x2078 -> List(AccumTriple(x579,x2066,x2079)), x2077 -> List(AccumTriple(x579,x2066,x2079)), x3566 -> List(AccumTriple(x579,x2066,x2079)), x2067 -> List(AccumTriple(x579,x2066,x2079)), x2079 -> List(AccumTriple(x579,x2066,x2079)))
          Computing fullDFS: Const(())
          Computing fullDFS: x2062
          cur: x2062, inReduce: false, latency: 2.0
          Computing fullDFS: x2080
          Computing fullDFS: x3564
          cur: x3564, inReduce: false, latency: 0.0
          Computing fullDFS: x3565
          cur: x3565, inReduce: false, latency: 0.0
          Computing fullDFS: x3566
          Computing fullDFS: x2078
          Computing fullDFS: x2077
          Computing fullDFS: x2067
          Computing fullDFS: x2066
          Computing fullDFS: x3557
          cur: x3557, inReduce: false, latency: 0.0
          Computing fullDFS: x3558
          cur: x3558, inReduce: false, latency: 0.0
          Computing fullDFS: x3559
          cur: x3559, inReduce: false, latency: 0.0
          Computing fullDFS: x2074
          Computing fullDFS: x2073
          Computing fullDFS: x2063
          Computing fullDFS: x2065
          Computing fullDFS: x2064
          cur: x2064, inReduce: false, latency: 2.0
          Computing fullDFS: x3560
          Computing fullDFS: x3561
          Computing fullDFS: x2072
          Computing fullDFS: x2068
          cur: x2068, inReduce: false, latency: 0.2
          Computing fullDFS: x2070
          cur: x2070, inReduce: false, latency: 0.2
          Computing fullDFS: x3562
          Computing fullDFS: x3563
          Computing fullDFS: x2076
          cur: x2076, inReduce: false, latency: 0.2
          Computing fullDFS: x3567
          cur: x3567, inReduce: false, latency: 0.0
          Computing fullDFS: x2079
          Cycle #0: write: x2079, cycle: x2066, x2066, x2067, x2077, x2078, x3566, x2079
          Cycles: Map(x2066 -> List(x2066), x2078 -> Vector(x2066, x2067, x2077, x2078), x2077 -> Vector(x2066, x2067, x2077), x2080 -> Vector(x2066, x2067, x2077, x2078, x3566, x2080), x3566 -> Vector(x2066, x2067, x2077, x2078, x3566), x2067 -> Vector(x2066, x2067), x2079 -> Vector(x2066, x2066, x2067, x2077, x2078, x3566, x2079))
          pseudo cycles for x579:
          Access: x2066 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x2066 = SRAMBankedRead(x579,Vector(List(Const(0))),Vector(x3559),Vector(Set(x3557, x3558)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x2079 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x2079 = SRAMBankedWrite(x579,Vector(x3566),Vector(List(Const(0))),Vector(x3564),Vector(Set(x3567, x3565))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x2066),x579,1.0), AAACycle(Vector(x2079),x579,1.0), WARCycle(x2066,x2079,x579,Vector(x2066, x2066, x2067, x2077, x2078, x2079, x3566),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x2062, None
             stm: x2063, None
             stm: x2064, None
             stm: x2065, None
             stm: x3557, None
             stm: x3558, None
             stm: x3559, None
             stm: x2066, Some(0)
             stm: x2067, None
             stm: x2068, None
             stm: x2070, None
             stm: x2072, None
             stm: x2073, None
             stm: x3560, None
             stm: x3561, None
             stm: x2074, None
             stm: x2076, None
             stm: x2077, None
             stm: x3562, None
             stm: x3563, None
             stm: x2078, None
             stm: x3564, None
             stm: x3565, None
             stm: x3566, None
             stm: x3567, None
             stm: x2079, None
             stm: x2080, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x2290 = UnrolledReduce(Set(b564),x604,Block((x581) => Const(())),List(List(b2083, b2084)),List(List(b2086, b2087)),None)
          x2145 = ParallelPipe(Set(b564),Block(Const(())))
            x2123 = UnrolledForeach(Set(b2086, b564),x2101,Block(Const(())),List(List(b2103)),List(List(b2104)),None)
            Working on pipeLatencies of result Vector(x2109, Const(()), x2122, x2118, x2115, x2121, x2119, x2120), schedule Vector(x2106, x3061, x3062, x3568, x2108, x3569, x3570, x3571, x2109, x2110, x2112, x3063, x3064, x3572, x2114, x3573, x3574, x3575, x2115, x2116, x3576, x2117, x3577, x3578, x3579, x3580, x2118, x2119, x2120, x2121, x2122)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: x2109
            Computing fullDFS: x2108
            Computing fullDFS: x3062
            Computing fullDFS: x2106
            cur: x2106, inReduce: false, latency: 20.0
            Computing fullDFS: x3061
            Computing fullDFS: x3568
            cur: x3568, inReduce: false, latency: 0.0
            Computing fullDFS: x3569
            cur: x3569, inReduce: false, latency: 0.0
            Computing fullDFS: x3570
            cur: x3570, inReduce: false, latency: 0.0
            Computing fullDFS: x3571
            cur: x3571, inReduce: false, latency: 0.0
            Computing fullDFS: Const(())
            Computing fullDFS: x2122
            Computing fullDFS: x2117
            Computing fullDFS: x2110
            Computing fullDFS: x3576
            Computing fullDFS: x2116
            Computing fullDFS: x2115
            Computing fullDFS: x2114
            Computing fullDFS: x3064
            Computing fullDFS: x2112
            cur: x2112, inReduce: false, latency: 0.2
            Computing fullDFS: x3063
            Computing fullDFS: x3572
            cur: x3572, inReduce: false, latency: 0.0
            Computing fullDFS: x3573
            cur: x3573, inReduce: false, latency: 0.0
            Computing fullDFS: x3574
            cur: x3574, inReduce: false, latency: 0.0
            Computing fullDFS: x3575
            cur: x3575, inReduce: false, latency: 0.0
            Computing fullDFS: x3577
            cur: x3577, inReduce: false, latency: 0.0
            Computing fullDFS: x3578
            cur: x3578, inReduce: false, latency: 0.0
            Computing fullDFS: x3579
            cur: x3579, inReduce: false, latency: 0.0
            Computing fullDFS: x3580
            cur: x3580, inReduce: false, latency: 0.0
            Computing fullDFS: x2118
            Computing fullDFS: x2121
            Computing fullDFS: x2119
            Computing fullDFS: x2120
            Cycles: Map()
            cycles are Vector()
               stm: x2106, None
               stm: x3061, None
               stm: x3062, None
               stm: x3568, None
               stm: x2108, None
               stm: x3569, None
               stm: x3570, None
               stm: x3571, None
               stm: x2109, None
               stm: x2110, None
               stm: x2112, None
               stm: x3063, None
               stm: x3064, None
               stm: x3572, None
               stm: x2114, None
               stm: x3573, None
               stm: x3574, None
               stm: x3575, None
               stm: x2115, None
               stm: x2116, None
               stm: x3576, None
               stm: x2117, None
               stm: x3577, None
               stm: x3578, None
               stm: x3579, None
               stm: x3580, None
               stm: x2118, None
               stm: x2119, None
               stm: x2120, None
               stm: x2121, None
               stm: x2122, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2144 = UnrolledForeach(Set(b2087, b564),x2102,Block(Const(())),List(List(b2124)),List(List(b2125)),None)
            Working on pipeLatencies of result Vector(Const(()), x2141, x2136, x2140, x2139, x2143, x2130, x2142), schedule Vector(x2127, x3065, x3066, x3581, x2129, x3582, x3583, x3584, x2130, x2131, x2133, x3067, x3068, x3585, x2135, x3586, x3587, x3588, x2136, x2137, x3589, x2138, x3590, x3591, x3592, x3593, x2139, x2140, x2141, x2142, x2143)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2141
            Computing fullDFS: x2138
            Computing fullDFS: x2131
            Computing fullDFS: x2130
            Computing fullDFS: x2129
            Computing fullDFS: x3066
            Computing fullDFS: x2127
            cur: x2127, inReduce: false, latency: 20.0
            Computing fullDFS: x3065
            Computing fullDFS: x3581
            cur: x3581, inReduce: false, latency: 0.0
            Computing fullDFS: x3582
            cur: x3582, inReduce: false, latency: 0.0
            Computing fullDFS: x3583
            cur: x3583, inReduce: false, latency: 0.0
            Computing fullDFS: x3584
            cur: x3584, inReduce: false, latency: 0.0
            Computing fullDFS: x3589
            Computing fullDFS: x2137
            Computing fullDFS: x2136
            Computing fullDFS: x2135
            Computing fullDFS: x3068
            Computing fullDFS: x2133
            cur: x2133, inReduce: false, latency: 0.2
            Computing fullDFS: x3067
            Computing fullDFS: x3585
            cur: x3585, inReduce: false, latency: 0.0
            Computing fullDFS: x3586
            cur: x3586, inReduce: false, latency: 0.0
            Computing fullDFS: x3587
            cur: x3587, inReduce: false, latency: 0.0
            Computing fullDFS: x3588
            cur: x3588, inReduce: false, latency: 0.0
            Computing fullDFS: x3590
            cur: x3590, inReduce: false, latency: 0.0
            Computing fullDFS: x3591
            cur: x3591, inReduce: false, latency: 0.0
            Computing fullDFS: x3592
            cur: x3592, inReduce: false, latency: 0.0
            Computing fullDFS: x3593
            cur: x3593, inReduce: false, latency: 0.0
            Computing fullDFS: x2140
            Computing fullDFS: x2139
            Computing fullDFS: x2143
            Computing fullDFS: x2142
            Cycles: Map()
            cycles are Vector()
               stm: x2127, None
               stm: x3065, None
               stm: x3066, None
               stm: x3581, None
               stm: x2129, None
               stm: x3582, None
               stm: x3583, None
               stm: x3584, None
               stm: x2130, None
               stm: x2131, None
               stm: x2133, None
               stm: x3067, None
               stm: x3068, None
               stm: x3585, None
               stm: x2135, None
               stm: x3586, None
               stm: x3587, None
               stm: x3588, None
               stm: x2136, None
               stm: x2137, None
               stm: x3589, None
               stm: x2138, None
               stm: x3590, None
               stm: x3591, None
               stm: x3592, None
               stm: x3593, None
               stm: x2139, None
               stm: x2140, None
               stm: x2141, None
               stm: x2142, None
               stm: x2143, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2174 = ParallelPipe(Set(b564),Block(Const(())))
            x2160 = UnitPipe(Set(b2086, b564),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2148, x2151, x2155, x2159), schedule Vector(x2148, x2149, x2151, x2152, x2153, x3594, x3069, x2155, x2156, x3595, x3070, x2159)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2148
            cur: x2148, inReduce: false, latency: 2.0
            Computing fullDFS: x2151
            cur: x2151, inReduce: false, latency: 2.0
            Computing fullDFS: x2155
            cur: x2155, inReduce: false, latency: 2.0
            Computing fullDFS: x2159
            Computing fullDFS: x3070
            Computing fullDFS: x3069
            Computing fullDFS: x2153
            Computing fullDFS: x2152
            Computing fullDFS: x3594
            Computing fullDFS: x2149
            Computing fullDFS: x3595
            Computing fullDFS: x2156
            Cycles: Map()
            cycles are Vector()
               stm: x2148, None
               stm: x2149, None
               stm: x2151, None
               stm: x2152, None
               stm: x2153, None
               stm: x3594, None
               stm: x3069, None
               stm: x2155, None
               stm: x2156, None
               stm: x3595, None
               stm: x3070, None
               stm: x2159, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2173 = UnitPipe(Set(b2087, b564),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2168, x2164, x2172, x2161), schedule Vector(x2161, x2162, x2164, x2165, x2166, x3596, x3071, x2168, x2169, x3597, x3072, x2172)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2168
            cur: x2168, inReduce: false, latency: 2.0
            Computing fullDFS: x2164
            cur: x2164, inReduce: false, latency: 2.0
            Computing fullDFS: x2172
            Computing fullDFS: x3072
            Computing fullDFS: x3071
            Computing fullDFS: x2166
            Computing fullDFS: x2165
            Computing fullDFS: x3596
            Computing fullDFS: x2162
            Computing fullDFS: x2161
            cur: x2161, inReduce: false, latency: 2.0
            Computing fullDFS: x3597
            Computing fullDFS: x2169
            Cycles: Map()
            cycles are Vector()
               stm: x2161, None
               stm: x2162, None
               stm: x2164, None
               stm: x2165, None
               stm: x2166, None
               stm: x3596, None
               stm: x3071, None
               stm: x2168, None
               stm: x2169, None
               stm: x3597, None
               stm: x3072, None
               stm: x2172, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2199 = ParallelPipe(Set(b564),Block(Const(())))
            x2189 = UnitPipe(Set(b2086, b564),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2181, x2187, x2188), schedule Vector(x2181, x2182, x2183, x2184, x2185, x2186, x2187, x2188)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2181
            cur: x2181, inReduce: false, latency: 2.0
            Computing fullDFS: x2187
            Computing fullDFS: x2185
            Computing fullDFS: x2183
            Computing fullDFS: x2182
            Computing fullDFS: x2184
            Computing fullDFS: x2188
            Computing fullDFS: x2186
            Cycles: Map()
            cycles are Vector()
               stm: x2181, None
               stm: x2182, None
               stm: x2183, None
               stm: x2184, None
               stm: x2185, None
               stm: x2186, None
               stm: x2187, None
               stm: x2188, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2198 = UnitPipe(Set(b2087, b564),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2190, x2196, x2197), schedule Vector(x2190, x2191, x2192, x2193, x2194, x2195, x2196, x2197)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2190
            cur: x2190, inReduce: false, latency: 2.0
            Computing fullDFS: x2196
            Computing fullDFS: x2194
            Computing fullDFS: x2192
            Computing fullDFS: x2191
            Computing fullDFS: x2193
            Computing fullDFS: x2197
            Computing fullDFS: x2195
            Cycles: Map()
            cycles are Vector()
               stm: x2190, None
               stm: x2191, None
               stm: x2192, None
               stm: x2193, None
               stm: x2194, None
               stm: x2195, None
               stm: x2196, None
               stm: x2197, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2217 = Switch(List(x2955, x2956),Block(x2216))
          Working on pipeLatencies of result Vector(x2216, x2215, x2214, x2204, x2205, Const(90)), schedule Vector(x2215, x2216, x2204, x2205, x2206, x2207, x3598, x2208, x3599, x2209, x3600, x2210, x3601, x2211, x2212, x2213, x3602, x2214)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x2216
          cur: x2216, inReduce: false, latency: 0.0
          Computing fullDFS: x2215
          Computing fullDFS: x2204
          cur: x2204, inReduce: false, latency: 0.0
          Computing fullDFS: x2205
          Computing fullDFS: x2214
          Computing fullDFS: x2211
          Computing fullDFS: x2210
          Computing fullDFS: x2209
          Computing fullDFS: x2208
          Computing fullDFS: x2207
          Computing fullDFS: x2206
          Computing fullDFS: x3598
          Computing fullDFS: x3599
          Computing fullDFS: x3600
          Computing fullDFS: x3601
          Computing fullDFS: x3602
          Computing fullDFS: x2213
          Computing fullDFS: x2212
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x2215, None
             stm: x2216, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2231 = Switch(List(x2957, x2958),Block(x2230))
          Working on pipeLatencies of result Vector(x2230, x2229, x2228, x2218, x2219, Const(90)), schedule Vector(x2229, x2230, x2218, x2219, x2220, x2221, x3603, x2222, x3604, x2223, x3605, x2224, x3606, x2225, x2226, x2227, x3607, x2228)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x2230
          cur: x2230, inReduce: false, latency: 0.0
          Computing fullDFS: x2229
          Computing fullDFS: x2218
          cur: x2218, inReduce: false, latency: 0.0
          Computing fullDFS: x2219
          Computing fullDFS: x2228
          Computing fullDFS: x2225
          Computing fullDFS: x2224
          Computing fullDFS: x2223
          Computing fullDFS: x2222
          Computing fullDFS: x2221
          Computing fullDFS: x2220
          Computing fullDFS: x3603
          Computing fullDFS: x3604
          Computing fullDFS: x3605
          Computing fullDFS: x3606
          Computing fullDFS: x3607
          Computing fullDFS: x2227
          Computing fullDFS: x2226
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x2229, None
             stm: x2230, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2236 = ParallelPipe(Set(b564),Block(Const(())))
            x2233 = UnitPipe(Set(b2086, b564),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2232), schedule Vector(x2232)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2232
            cur: x2232, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x2232, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2235 = UnitPipe(Set(b2087, b564),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2234), schedule Vector(x2234)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2234
            cur: x2234, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x2234, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2269 = ParallelPipe(Set(b564),Block(Const(())))
            x2254 = UnrolledForeach(Set(b2086, b564),x2239,Block(Const(())),List(List(b2241)),List(List(b2242)),None)
            Working on pipeLatencies of result Vector(Const(()), x2250, x2249, x2243, x2253, x2246, x2252, x2251), schedule Vector(x2243, x2244, x2245, x2246, x2247, x3608, x2248, x3609, x3610, x3611, x3612, x2249, x2250, x2251, x2252, x2253)
            Memories with both reads and writes in this scope: Set(x2092)
            NonConflictSets(x2243, x2252): Set()
            NonConflictSets(x2243, x2252): Set()
            Found Cycle: x2243, x2252
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x2092,x2243,x2252)), Map(x2245 -> List(AccumTriple(x2092,x2243,x2252)), x2248 -> List(AccumTriple(x2092,x2243,x2252)), x2244 -> List(AccumTriple(x2092,x2243,x2252)), x2252 -> List(AccumTriple(x2092,x2243,x2252)), x2243 -> List(AccumTriple(x2092,x2243,x2252)))
            Computing fullDFS: Const(())
            Computing fullDFS: x2250
            Computing fullDFS: x2248
            Computing fullDFS: x2245
            Computing fullDFS: x2244
            Computing fullDFS: x2243
            cur: x2243, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x2092,x2243,x2252))
            Computing fullDFS: x3608
            Computing fullDFS: x2247
            Computing fullDFS: x2246
            cur: x2246, inReduce: false, latency: 2.0
            Computing fullDFS: x3609
            cur: x3609, inReduce: false, latency: 0.0
            Computing fullDFS: x3610
            cur: x3610, inReduce: false, latency: 0.0
            Computing fullDFS: x3611
            cur: x3611, inReduce: false, latency: 0.0
            Computing fullDFS: x3612
            cur: x3612, inReduce: false, latency: 0.0
            Computing fullDFS: x2249
            Computing fullDFS: x2253
            Computing fullDFS: x2252
            Computing fullDFS: x2251
            Cycle #0: write: x2252, cycle: x2243, x2243, x2244, x2245, x2248, x2252
            Cycles: Map(x2251 -> Vector(x2243, x2244, x2245, x2248, x2251), x2245 -> Vector(x2243, x2244, x2245), x2248 -> Vector(x2243, x2244, x2245, x2248), x2250 -> Vector(x2243, x2244, x2245, x2248, x2250), x2253 -> Vector(x2243, x2244, x2245, x2248, x2253), x2244 -> Vector(x2243, x2244), x2252 -> Vector(x2243, x2243, x2244, x2245, x2248, x2252), x2243 -> List(x2243), x2249 -> Vector(x2243, x2244, x2245, x2248, x2249))
            pseudo cycles for x2092:
            Access: x2243 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2243 = SRAMBankedRead(x2092,Vector(List(Const(0))),Vector(b2241),Vector(Set(b2242, b2086, b564)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x2252 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2252 = SRAMBankedWrite(x2092,Vector(x2248),Vector(List(Const(0))),Vector(x3612),Vector(Set(x3609, x3610, x3611))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x2243),x2092,1.0), AAACycle(Vector(x2252),x2092,1.0), WARCycle(x2243,x2252,x2092,Vector(x2243, x2243, x2244, x2245, x2248, x2252),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x2243, None
               stm: x2244, None
               stm: x2245, None
               stm: x2246, None
               stm: x2247, None
               stm: x3608, None
               stm: x2248, None
               stm: x3609, None
               stm: x3610, None
               stm: x3611, None
               stm: x3612, None
               stm: x2249, None
               stm: x2250, None
               stm: x2251, None
               stm: x2252, None
               stm: x2253, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2268 = UnrolledForeach(Set(b2087, b564),x2240,Block(Const(())),List(List(b2255)),List(List(b2256)),None)
            Working on pipeLatencies of result Vector(x2263, Const(()), x2264, x2260, x2257, x2267, x2266, x2265), schedule Vector(x2257, x2258, x2259, x2260, x2261, x3613, x2262, x3614, x3615, x3616, x3617, x2263, x2264, x2265, x2266, x2267)
            Memories with both reads and writes in this scope: Set(x2097)
            NonConflictSets(x2257, x2264): Set()
            NonConflictSets(x2257, x2264): Set()
            Found Cycle: x2257, x2264
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x2097,x2257,x2264)), Map(x2257 -> List(AccumTriple(x2097,x2257,x2264)), x2259 -> List(AccumTriple(x2097,x2257,x2264)), x2262 -> List(AccumTriple(x2097,x2257,x2264)), x2264 -> List(AccumTriple(x2097,x2257,x2264)), x2258 -> List(AccumTriple(x2097,x2257,x2264)))
            Computing fullDFS: x2263
            Computing fullDFS: x2262
            Computing fullDFS: x2259
            Computing fullDFS: x2258
            Computing fullDFS: x2257
            cur: x2257, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x2097,x2257,x2264))
            Computing fullDFS: x3613
            Computing fullDFS: x2261
            Computing fullDFS: x2260
            cur: x2260, inReduce: false, latency: 2.0
            Computing fullDFS: x3614
            cur: x3614, inReduce: false, latency: 0.0
            Computing fullDFS: x3615
            cur: x3615, inReduce: false, latency: 0.0
            Computing fullDFS: x3616
            cur: x3616, inReduce: false, latency: 0.0
            Computing fullDFS: x3617
            cur: x3617, inReduce: false, latency: 0.0
            Computing fullDFS: Const(())
            Computing fullDFS: x2264
            Computing fullDFS: x2267
            Computing fullDFS: x2266
            Computing fullDFS: x2265
            Cycle #0: write: x2264, cycle: x2257, x2257, x2258, x2259, x2262, x2264
            Cycles: Map(x2266 -> Vector(x2257, x2258, x2259, x2262, x2266), x2257 -> List(x2257), x2263 -> Vector(x2257, x2258, x2259, x2262, x2263), x2265 -> Vector(x2257, x2258, x2259, x2262, x2265), x2259 -> Vector(x2257, x2258, x2259), x2262 -> Vector(x2257, x2258, x2259, x2262), x2264 -> Vector(x2257, x2257, x2258, x2259, x2262, x2264), x2267 -> Vector(x2257, x2258, x2259, x2262, x2267), x2258 -> Vector(x2257, x2258))
            pseudo cycles for x2097:
            Access: x2257 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2257 = SRAMBankedRead(x2097,Vector(List(Const(0))),Vector(b2255),Vector(Set(b2256, b2087, b564)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x2264 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2264 = SRAMBankedWrite(x2097,Vector(x2262),Vector(List(Const(0))),Vector(x3615),Vector(Set(x3614, x3617, x3616))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x2257),x2097,1.0), AAACycle(Vector(x2264),x2097,1.0), WARCycle(x2257,x2264,x2097,Vector(x2257, x2257, x2258, x2259, x2262, x2264),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x2257, None
               stm: x2258, None
               stm: x2259, None
               stm: x2260, None
               stm: x2261, None
               stm: x3613, None
               stm: x2262, None
               stm: x3614, None
               stm: x3615, None
               stm: x3616, None
               stm: x3617, None
               stm: x2263, None
               stm: x2264, None
               stm: x2265, None
               stm: x2266, None
               stm: x2267, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x2289 = UnrolledForeach(Set(),x624,Block(Const(())),Vector(List(b2085)),Vector(List(b2088)),None)
          Working on pipeLatencies of result Vector(Const(()), x2274, x2272, x2288, x2287, x2270), schedule Vector(x2270, x2271, x2272, x2273, x3618, x3619, x3620, x2274, x2275, x2276, x2278, x2280, x2281, x3621, x3622, x2282, x2284, x2285, x3623, x3624, x2286, x3625, x3626, x3627, x3628, x2287, x2288)
          Memories with both reads and writes in this scope: Set(x581)
          NonConflictSets(x2274, x2288): Set()
          NonConflictSets(x2274, x2288): Set()
          Found Cycle: x2274, x2288
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x581,x2274,x2288)), Map(x2275 -> List(AccumTriple(x581,x2274,x2288)), x2274 -> List(AccumTriple(x581,x2274,x2288)), x2286 -> List(AccumTriple(x581,x2274,x2288)), x3625 -> List(AccumTriple(x581,x2274,x2288)), x2288 -> List(AccumTriple(x581,x2274,x2288)), x2285 -> List(AccumTriple(x581,x2274,x2288)))
          Computing fullDFS: Const(())
          Computing fullDFS: x2274
          Computing fullDFS: x3618
          cur: x3618, inReduce: false, latency: 0.0
          Computing fullDFS: x3619
          cur: x3619, inReduce: false, latency: 0.0
          Computing fullDFS: x3620
          cur: x3620, inReduce: false, latency: 0.0
          Computing fullDFS: x2272
          cur: x2272, inReduce: false, latency: 2.0
          Computing fullDFS: x2288
          Computing fullDFS: x3625
          Computing fullDFS: x2286
          Computing fullDFS: x2285
          Computing fullDFS: x2275
          Computing fullDFS: x2282
          Computing fullDFS: x2281
          Computing fullDFS: x2271
          Computing fullDFS: x2270
          cur: x2270, inReduce: false, latency: 2.0
          Computing fullDFS: x2273
          Computing fullDFS: x3621
          Computing fullDFS: x3622
          Computing fullDFS: x2280
          Computing fullDFS: x2276
          cur: x2276, inReduce: false, latency: 0.2
          Computing fullDFS: x2278
          cur: x2278, inReduce: false, latency: 0.2
          Computing fullDFS: x3623
          Computing fullDFS: x2284
          cur: x2284, inReduce: false, latency: 0.2
          Computing fullDFS: x3624
          Computing fullDFS: x3626
          cur: x3626, inReduce: false, latency: 0.0
          Computing fullDFS: x3627
          cur: x3627, inReduce: false, latency: 0.0
          Computing fullDFS: x3628
          cur: x3628, inReduce: false, latency: 0.0
          Computing fullDFS: x2287
          Cycle #0: write: x2288, cycle: x2274, x2274, x2275, x2285, x2286, x3625, x2288
          Cycles: Map(x2275 -> Vector(x2274, x2275), x2287 -> Vector(x2274, x2275, x2285, x2286, x3625, x2287), x2274 -> List(x2274), x2286 -> Vector(x2274, x2275, x2285, x2286), x2288 -> Vector(x2274, x2274, x2275, x2285, x2286, x3625, x2288), x3625 -> Vector(x2274, x2275, x2285, x2286, x3625), x2285 -> Vector(x2274, x2275, x2285))
          pseudo cycles for x581:
          Access: x2274 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x2274 = SRAMBankedRead(x581,Vector(List(Const(0))),Vector(x3620),Vector(Set(x3619, x3618)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x2288 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x2288 = SRAMBankedWrite(x581,Vector(x3625),Vector(List(Const(0))),Vector(x3626),Vector(Set(x3627, x3628))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x2274),x581,1.0), AAACycle(Vector(x2288),x581,1.0), WARCycle(x2274,x2288,x581,Vector(x2274, x2274, x2275, x2285, x2286, x2288, x3625),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x2270, None
             stm: x2271, None
             stm: x2272, None
             stm: x2273, None
             stm: x3618, None
             stm: x3619, None
             stm: x3620, None
             stm: x2274, Some(0)
             stm: x2275, None
             stm: x2276, None
             stm: x2278, None
             stm: x2280, None
             stm: x2281, None
             stm: x3621, None
             stm: x3622, None
             stm: x2282, None
             stm: x2284, None
             stm: x2285, None
             stm: x3623, None
             stm: x3624, None
             stm: x2286, None
             stm: x3625, None
             stm: x3626, None
             stm: x3627, None
             stm: x3628, None
             stm: x2287, None
             stm: x2288, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x2498 = UnrolledReduce(Set(b565),x605,Block((x583) => Const(())),List(List(b2291, b2292)),List(List(b2294, b2295)),None)
          x2353 = ParallelPipe(Set(b565),Block(Const(())))
            x2331 = UnrolledForeach(Set(b2294, b565),x2309,Block(Const(())),List(List(b2311)),List(List(b2312)),None)
            Working on pipeLatencies of result Vector(Const(()), x2328, x2327, x2323, x2317, x2326, x2329, x2330), schedule Vector(x2314, x3073, x3074, x3629, x2316, x3630, x3631, x3632, x2317, x2318, x2320, x3075, x3076, x3633, x2322, x3634, x3635, x3636, x2323, x2324, x3637, x2325, x3638, x3639, x3640, x3641, x2326, x2327, x2328, x2329, x2330)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2328
            Computing fullDFS: x2325
            Computing fullDFS: x2318
            Computing fullDFS: x2317
            Computing fullDFS: x2316
            Computing fullDFS: x3074
            Computing fullDFS: x2314
            cur: x2314, inReduce: false, latency: 20.0
            Computing fullDFS: x3073
            Computing fullDFS: x3629
            cur: x3629, inReduce: false, latency: 0.0
            Computing fullDFS: x3630
            cur: x3630, inReduce: false, latency: 0.0
            Computing fullDFS: x3631
            cur: x3631, inReduce: false, latency: 0.0
            Computing fullDFS: x3632
            cur: x3632, inReduce: false, latency: 0.0
            Computing fullDFS: x3637
            Computing fullDFS: x2324
            Computing fullDFS: x2323
            Computing fullDFS: x2322
            Computing fullDFS: x3076
            Computing fullDFS: x2320
            cur: x2320, inReduce: false, latency: 0.2
            Computing fullDFS: x3075
            Computing fullDFS: x3633
            cur: x3633, inReduce: false, latency: 0.0
            Computing fullDFS: x3634
            cur: x3634, inReduce: false, latency: 0.0
            Computing fullDFS: x3635
            cur: x3635, inReduce: false, latency: 0.0
            Computing fullDFS: x3636
            cur: x3636, inReduce: false, latency: 0.0
            Computing fullDFS: x3638
            cur: x3638, inReduce: false, latency: 0.0
            Computing fullDFS: x3639
            cur: x3639, inReduce: false, latency: 0.0
            Computing fullDFS: x3640
            cur: x3640, inReduce: false, latency: 0.0
            Computing fullDFS: x3641
            cur: x3641, inReduce: false, latency: 0.0
            Computing fullDFS: x2327
            Computing fullDFS: x2326
            Computing fullDFS: x2329
            Computing fullDFS: x2330
            Cycles: Map()
            cycles are Vector()
               stm: x2314, None
               stm: x3073, None
               stm: x3074, None
               stm: x3629, None
               stm: x2316, None
               stm: x3630, None
               stm: x3631, None
               stm: x3632, None
               stm: x2317, None
               stm: x2318, None
               stm: x2320, None
               stm: x3075, None
               stm: x3076, None
               stm: x3633, None
               stm: x2322, None
               stm: x3634, None
               stm: x3635, None
               stm: x3636, None
               stm: x2323, None
               stm: x2324, None
               stm: x3637, None
               stm: x2325, None
               stm: x3638, None
               stm: x3639, None
               stm: x3640, None
               stm: x3641, None
               stm: x2326, None
               stm: x2327, None
               stm: x2328, None
               stm: x2329, None
               stm: x2330, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2352 = UnrolledForeach(Set(b2295, b565),x2310,Block(Const(())),List(List(b2332)),List(List(b2333)),None)
            Working on pipeLatencies of result Vector(Const(()), x2348, x2344, x2349, x2338, x2350, x2347, x2351), schedule Vector(x2335, x3077, x3078, x3642, x2337, x3643, x3644, x3645, x2338, x2339, x2341, x3079, x3080, x3646, x2343, x3647, x3648, x3649, x2344, x2345, x3650, x2346, x3651, x3652, x3653, x3654, x2347, x2348, x2349, x2350, x2351)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2348
            Computing fullDFS: x2346
            Computing fullDFS: x2339
            Computing fullDFS: x2338
            Computing fullDFS: x2337
            Computing fullDFS: x3078
            Computing fullDFS: x2335
            cur: x2335, inReduce: false, latency: 20.0
            Computing fullDFS: x3077
            Computing fullDFS: x3642
            cur: x3642, inReduce: false, latency: 0.0
            Computing fullDFS: x3643
            cur: x3643, inReduce: false, latency: 0.0
            Computing fullDFS: x3644
            cur: x3644, inReduce: false, latency: 0.0
            Computing fullDFS: x3645
            cur: x3645, inReduce: false, latency: 0.0
            Computing fullDFS: x3650
            Computing fullDFS: x2345
            Computing fullDFS: x2344
            Computing fullDFS: x2343
            Computing fullDFS: x3080
            Computing fullDFS: x2341
            cur: x2341, inReduce: false, latency: 0.2
            Computing fullDFS: x3079
            Computing fullDFS: x3646
            cur: x3646, inReduce: false, latency: 0.0
            Computing fullDFS: x3647
            cur: x3647, inReduce: false, latency: 0.0
            Computing fullDFS: x3648
            cur: x3648, inReduce: false, latency: 0.0
            Computing fullDFS: x3649
            cur: x3649, inReduce: false, latency: 0.0
            Computing fullDFS: x3651
            cur: x3651, inReduce: false, latency: 0.0
            Computing fullDFS: x3652
            cur: x3652, inReduce: false, latency: 0.0
            Computing fullDFS: x3653
            cur: x3653, inReduce: false, latency: 0.0
            Computing fullDFS: x3654
            cur: x3654, inReduce: false, latency: 0.0
            Computing fullDFS: x2349
            Computing fullDFS: x2350
            Computing fullDFS: x2347
            Computing fullDFS: x2351
            Cycles: Map()
            cycles are Vector()
               stm: x2335, None
               stm: x3077, None
               stm: x3078, None
               stm: x3642, None
               stm: x2337, None
               stm: x3643, None
               stm: x3644, None
               stm: x3645, None
               stm: x2338, None
               stm: x2339, None
               stm: x2341, None
               stm: x3079, None
               stm: x3080, None
               stm: x3646, None
               stm: x2343, None
               stm: x3647, None
               stm: x3648, None
               stm: x3649, None
               stm: x2344, None
               stm: x2345, None
               stm: x3650, None
               stm: x2346, None
               stm: x3651, None
               stm: x3652, None
               stm: x3653, None
               stm: x3654, None
               stm: x2347, None
               stm: x2348, None
               stm: x2349, None
               stm: x2350, None
               stm: x2351, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2382 = ParallelPipe(Set(b565),Block(Const(())))
            x2368 = UnitPipe(Set(b2294, b565),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2363, x2356, x2367, x2359), schedule Vector(x2356, x2357, x2359, x2360, x2361, x3655, x3081, x2363, x2364, x3656, x3082, x2367)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2363
            cur: x2363, inReduce: false, latency: 2.0
            Computing fullDFS: x2356
            cur: x2356, inReduce: false, latency: 2.0
            Computing fullDFS: x2367
            Computing fullDFS: x3082
            Computing fullDFS: x3081
            Computing fullDFS: x2361
            Computing fullDFS: x2360
            Computing fullDFS: x2359
            cur: x2359, inReduce: false, latency: 2.0
            Computing fullDFS: x3655
            Computing fullDFS: x2357
            Computing fullDFS: x3656
            Computing fullDFS: x2364
            Cycles: Map()
            cycles are Vector()
               stm: x2356, None
               stm: x2357, None
               stm: x2359, None
               stm: x2360, None
               stm: x2361, None
               stm: x3655, None
               stm: x3081, None
               stm: x2363, None
               stm: x2364, None
               stm: x3656, None
               stm: x3082, None
               stm: x2367, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2381 = UnitPipe(Set(b2295, b565),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2380, x2376, x2369, x2372), schedule Vector(x2369, x2370, x2372, x2373, x2374, x3657, x3083, x2376, x2377, x3658, x3084, x2380)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2380
            Computing fullDFS: x3084
            Computing fullDFS: x3083
            Computing fullDFS: x2374
            Computing fullDFS: x2373
            Computing fullDFS: x2372
            cur: x2372, inReduce: false, latency: 2.0
            Computing fullDFS: x3657
            Computing fullDFS: x2370
            Computing fullDFS: x2369
            cur: x2369, inReduce: false, latency: 2.0
            Computing fullDFS: x3658
            Computing fullDFS: x2377
            Computing fullDFS: x2376
            cur: x2376, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x2369, None
               stm: x2370, None
               stm: x2372, None
               stm: x2373, None
               stm: x2374, None
               stm: x3657, None
               stm: x3083, None
               stm: x2376, None
               stm: x2377, None
               stm: x3658, None
               stm: x3084, None
               stm: x2380, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2407 = ParallelPipe(Set(b565),Block(Const(())))
            x2397 = UnitPipe(Set(b2294, b565),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2389, x2395, x2396), schedule Vector(x2389, x2390, x2391, x2392, x2393, x2394, x2395, x2396)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2389
            cur: x2389, inReduce: false, latency: 2.0
            Computing fullDFS: x2395
            Computing fullDFS: x2393
            Computing fullDFS: x2391
            Computing fullDFS: x2390
            Computing fullDFS: x2392
            Computing fullDFS: x2396
            Computing fullDFS: x2394
            Cycles: Map()
            cycles are Vector()
               stm: x2389, None
               stm: x2390, None
               stm: x2391, None
               stm: x2392, None
               stm: x2393, None
               stm: x2394, None
               stm: x2395, None
               stm: x2396, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2406 = UnitPipe(Set(b2295, b565),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2398, x2404, x2405), schedule Vector(x2398, x2399, x2400, x2401, x2402, x2403, x2404, x2405)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2398
            cur: x2398, inReduce: false, latency: 2.0
            Computing fullDFS: x2404
            Computing fullDFS: x2402
            Computing fullDFS: x2400
            Computing fullDFS: x2399
            Computing fullDFS: x2401
            Computing fullDFS: x2405
            Computing fullDFS: x2403
            Cycles: Map()
            cycles are Vector()
               stm: x2398, None
               stm: x2399, None
               stm: x2400, None
               stm: x2401, None
               stm: x2402, None
               stm: x2403, None
               stm: x2404, None
               stm: x2405, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2425 = Switch(List(x2959, x2960),Block(x2424))
          Working on pipeLatencies of result Vector(x2424, x2423, x2422, x2412, x2413, Const(90)), schedule Vector(x2423, x2424, x2412, x2413, x2414, x2415, x3659, x2416, x3660, x2417, x3661, x2418, x3662, x2419, x2420, x2421, x3663, x2422)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x2424
          cur: x2424, inReduce: false, latency: 0.0
          Computing fullDFS: x2423
          Computing fullDFS: x2412
          cur: x2412, inReduce: false, latency: 0.0
          Computing fullDFS: x2413
          Computing fullDFS: x2422
          Computing fullDFS: x2419
          Computing fullDFS: x2418
          Computing fullDFS: x2417
          Computing fullDFS: x2416
          Computing fullDFS: x2415
          Computing fullDFS: x2414
          Computing fullDFS: x3659
          Computing fullDFS: x3660
          Computing fullDFS: x3661
          Computing fullDFS: x3662
          Computing fullDFS: x3663
          Computing fullDFS: x2421
          Computing fullDFS: x2420
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x2423, None
             stm: x2424, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2439 = Switch(List(x2961, x2962),Block(x2438))
          Working on pipeLatencies of result Vector(x2438, x2437, x2436, x2426, x2427, Const(90)), schedule Vector(x2437, x2438, x2426, x2427, x2428, x2429, x3664, x2430, x3665, x2431, x3666, x2432, x3667, x2433, x2434, x2435, x3668, x2436)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x2438
          cur: x2438, inReduce: false, latency: 0.0
          Computing fullDFS: x2437
          Computing fullDFS: x2426
          cur: x2426, inReduce: false, latency: 0.0
          Computing fullDFS: x2427
          Computing fullDFS: x2436
          Computing fullDFS: x2433
          Computing fullDFS: x2432
          Computing fullDFS: x2431
          Computing fullDFS: x2430
          Computing fullDFS: x2429
          Computing fullDFS: x2428
          Computing fullDFS: x3664
          Computing fullDFS: x3665
          Computing fullDFS: x3666
          Computing fullDFS: x3667
          Computing fullDFS: x3668
          Computing fullDFS: x2435
          Computing fullDFS: x2434
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x2437, None
             stm: x2438, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2444 = ParallelPipe(Set(b565),Block(Const(())))
            x2441 = UnitPipe(Set(b2294, b565),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2440), schedule Vector(x2440)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2440
            cur: x2440, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x2440, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2443 = UnitPipe(Set(b2295, b565),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2442), schedule Vector(x2442)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2442
            cur: x2442, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x2442, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2477 = ParallelPipe(Set(b565),Block(Const(())))
            x2462 = UnrolledForeach(Set(b2294, b565),x2447,Block(Const(())),List(List(b2449)),List(List(b2450)),None)
            Working on pipeLatencies of result Vector(Const(()), x2459, x2451, x2460, x2457, x2461, x2454, x2458), schedule Vector(x2451, x2452, x2453, x2454, x2455, x3669, x2456, x3670, x3671, x3672, x3673, x2457, x2458, x2459, x2460, x2461)
            Memories with both reads and writes in this scope: Set(x2300)
            NonConflictSets(x2451, x2458): Set()
            NonConflictSets(x2451, x2458): Set()
            Found Cycle: x2451, x2458
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x2300,x2451,x2458)), Map(x2452 -> List(AccumTriple(x2300,x2451,x2458)), x2451 -> List(AccumTriple(x2300,x2451,x2458)), x2453 -> List(AccumTriple(x2300,x2451,x2458)), x2456 -> List(AccumTriple(x2300,x2451,x2458)), x2458 -> List(AccumTriple(x2300,x2451,x2458)))
            Computing fullDFS: Const(())
            Computing fullDFS: x2459
            Computing fullDFS: x2456
            Computing fullDFS: x2453
            Computing fullDFS: x2452
            Computing fullDFS: x2451
            cur: x2451, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x2300,x2451,x2458))
            Computing fullDFS: x3669
            Computing fullDFS: x2455
            Computing fullDFS: x2454
            cur: x2454, inReduce: false, latency: 2.0
            Computing fullDFS: x3670
            cur: x3670, inReduce: false, latency: 0.0
            Computing fullDFS: x3671
            cur: x3671, inReduce: false, latency: 0.0
            Computing fullDFS: x3672
            cur: x3672, inReduce: false, latency: 0.0
            Computing fullDFS: x3673
            cur: x3673, inReduce: false, latency: 0.0
            Computing fullDFS: x2460
            Computing fullDFS: x2457
            Computing fullDFS: x2461
            Computing fullDFS: x2458
            Cycle #0: write: x2458, cycle: x2451, x2451, x2452, x2453, x2456, x2458
            Cycles: Map(x2461 -> Vector(x2451, x2452, x2453, x2456, x2461), x2452 -> Vector(x2451, x2452), x2460 -> Vector(x2451, x2452, x2453, x2456, x2460), x2451 -> List(x2451), x2457 -> Vector(x2451, x2452, x2453, x2456, x2457), x2459 -> Vector(x2451, x2452, x2453, x2456, x2459), x2453 -> Vector(x2451, x2452, x2453), x2456 -> Vector(x2451, x2452, x2453, x2456), x2458 -> Vector(x2451, x2451, x2452, x2453, x2456, x2458))
            pseudo cycles for x2300:
            Access: x2451 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2451 = SRAMBankedRead(x2300,Vector(List(Const(0))),Vector(b2449),Vector(Set(b2450, b2294, b565)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x2458 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2458 = SRAMBankedWrite(x2300,Vector(x2456),Vector(List(Const(0))),Vector(x3672),Vector(Set(x3671, x3673, x3670))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x2451),x2300,1.0), AAACycle(Vector(x2458),x2300,1.0), WARCycle(x2451,x2458,x2300,Vector(x2451, x2451, x2452, x2453, x2456, x2458),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x2451, None
               stm: x2452, None
               stm: x2453, None
               stm: x2454, None
               stm: x2455, None
               stm: x3669, None
               stm: x2456, None
               stm: x3670, None
               stm: x3671, None
               stm: x3672, None
               stm: x3673, None
               stm: x2457, None
               stm: x2458, None
               stm: x2459, None
               stm: x2460, None
               stm: x2461, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2476 = UnrolledForeach(Set(b2295, b565),x2448,Block(Const(())),List(List(b2463)),List(List(b2464)),None)
            Working on pipeLatencies of result Vector(Const(()), x2473, x2472, x2465, x2474, x2471, x2468, x2475), schedule Vector(x2465, x2466, x2467, x2468, x2469, x3674, x2470, x3675, x3676, x3677, x3678, x2471, x2472, x2473, x2474, x2475)
            Memories with both reads and writes in this scope: Set(x2305)
            NonConflictSets(x2465, x2474): Set()
            NonConflictSets(x2465, x2474): Set()
            Found Cycle: x2465, x2474
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x2305,x2465,x2474)), Map(x2470 -> List(AccumTriple(x2305,x2465,x2474)), x2466 -> List(AccumTriple(x2305,x2465,x2474)), x2474 -> List(AccumTriple(x2305,x2465,x2474)), x2465 -> List(AccumTriple(x2305,x2465,x2474)), x2467 -> List(AccumTriple(x2305,x2465,x2474)))
            Computing fullDFS: Const(())
            Computing fullDFS: x2473
            Computing fullDFS: x2470
            Computing fullDFS: x2467
            Computing fullDFS: x2466
            Computing fullDFS: x2465
            cur: x2465, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x2305,x2465,x2474))
            Computing fullDFS: x3674
            Computing fullDFS: x2469
            Computing fullDFS: x2468
            cur: x2468, inReduce: false, latency: 2.0
            Computing fullDFS: x3675
            cur: x3675, inReduce: false, latency: 0.0
            Computing fullDFS: x3676
            cur: x3676, inReduce: false, latency: 0.0
            Computing fullDFS: x3677
            cur: x3677, inReduce: false, latency: 0.0
            Computing fullDFS: x3678
            cur: x3678, inReduce: false, latency: 0.0
            Computing fullDFS: x2472
            Computing fullDFS: x2474
            Computing fullDFS: x2471
            Computing fullDFS: x2475
            Cycle #0: write: x2474, cycle: x2465, x2465, x2466, x2467, x2470, x2474
            Cycles: Map(x2470 -> Vector(x2465, x2466, x2467, x2470), x2472 -> Vector(x2465, x2466, x2467, x2470, x2472), x2475 -> Vector(x2465, x2466, x2467, x2470, x2475), x2466 -> Vector(x2465, x2466), x2474 -> Vector(x2465, x2465, x2466, x2467, x2470, x2474), x2471 -> Vector(x2465, x2466, x2467, x2470, x2471), x2465 -> List(x2465), x2473 -> Vector(x2465, x2466, x2467, x2470, x2473), x2467 -> Vector(x2465, x2466, x2467))
            pseudo cycles for x2305:
            Access: x2465 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2465 = SRAMBankedRead(x2305,Vector(List(Const(0))),Vector(b2463),Vector(Set(b2464, b2295, b565)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x2474 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2474 = SRAMBankedWrite(x2305,Vector(x2470),Vector(List(Const(0))),Vector(x3676),Vector(Set(x3678, x3675, x3677))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x2465),x2305,1.0), AAACycle(Vector(x2474),x2305,1.0), WARCycle(x2465,x2474,x2305,Vector(x2465, x2465, x2466, x2467, x2470, x2474),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x2465, None
               stm: x2466, None
               stm: x2467, None
               stm: x2468, None
               stm: x2469, None
               stm: x3674, None
               stm: x2470, None
               stm: x3675, None
               stm: x3676, None
               stm: x3677, None
               stm: x3678, None
               stm: x2471, None
               stm: x2472, None
               stm: x2473, None
               stm: x2474, None
               stm: x2475, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x2497 = UnrolledForeach(Set(),x625,Block(Const(())),Vector(List(b2293)),Vector(List(b2296)),None)
          Working on pipeLatencies of result Vector(x2480, Const(()), x2495, x2496, x2482, x2478), schedule Vector(x2478, x2479, x2480, x2481, x3679, x3680, x3681, x2482, x2483, x2484, x2486, x2488, x2489, x3682, x3683, x2490, x2492, x2493, x3684, x3685, x2494, x3686, x3687, x3688, x3689, x2495, x2496)
          Memories with both reads and writes in this scope: Set(x583)
          NonConflictSets(x2482, x2496): Set()
          NonConflictSets(x2482, x2496): Set()
          Found Cycle: x2482, x2496
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x583,x2482,x2496)), Map(x2496 -> List(AccumTriple(x583,x2482,x2496)), x2493 -> List(AccumTriple(x583,x2482,x2496)), x3689 -> List(AccumTriple(x583,x2482,x2496)), x2483 -> List(AccumTriple(x583,x2482,x2496)), x2482 -> List(AccumTriple(x583,x2482,x2496)), x2494 -> List(AccumTriple(x583,x2482,x2496)))
          Computing fullDFS: x2480
          cur: x2480, inReduce: false, latency: 2.0
          Computing fullDFS: Const(())
          Computing fullDFS: x2495
          Computing fullDFS: x3686
          cur: x3686, inReduce: false, latency: 0.0
          Computing fullDFS: x3687
          cur: x3687, inReduce: false, latency: 0.0
          Computing fullDFS: x3688
          cur: x3688, inReduce: false, latency: 0.0
          Computing fullDFS: x3689
          Computing fullDFS: x2494
          Computing fullDFS: x2493
          Computing fullDFS: x2483
          Computing fullDFS: x2482
          Computing fullDFS: x3679
          cur: x3679, inReduce: false, latency: 0.0
          Computing fullDFS: x3680
          cur: x3680, inReduce: false, latency: 0.0
          Computing fullDFS: x3681
          cur: x3681, inReduce: false, latency: 0.0
          Computing fullDFS: x2490
          Computing fullDFS: x2489
          Computing fullDFS: x2479
          Computing fullDFS: x2478
          cur: x2478, inReduce: false, latency: 2.0
          Computing fullDFS: x2481
          Computing fullDFS: x3682
          Computing fullDFS: x3683
          Computing fullDFS: x2488
          Computing fullDFS: x2484
          cur: x2484, inReduce: false, latency: 0.2
          Computing fullDFS: x2486
          cur: x2486, inReduce: false, latency: 0.2
          Computing fullDFS: x3684
          Computing fullDFS: x3685
          Computing fullDFS: x2492
          cur: x2492, inReduce: false, latency: 0.2
          Computing fullDFS: x2496
          Cycle #0: write: x2496, cycle: x2482, x2482, x2483, x2493, x2494, x3689, x2496
          Cycles: Map(x2496 -> Vector(x2482, x2482, x2483, x2493, x2494, x3689, x2496), x2493 -> Vector(x2482, x2483, x2493), x3689 -> Vector(x2482, x2483, x2493, x2494, x3689), x2483 -> Vector(x2482, x2483), x2495 -> Vector(x2482, x2483, x2493, x2494, x3689, x2495), x2482 -> List(x2482), x2494 -> Vector(x2482, x2483, x2493, x2494))
          pseudo cycles for x583:
          Access: x2482 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x2482 = SRAMBankedRead(x583,Vector(List(Const(0))),Vector(x3679),Vector(Set(x3680, x3681)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x2496 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x2496 = SRAMBankedWrite(x583,Vector(x3689),Vector(List(Const(0))),Vector(x3688),Vector(Set(x3687, x3686))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x2482),x583,1.0), AAACycle(Vector(x2496),x583,1.0), WARCycle(x2482,x2496,x583,Vector(x2482, x2482, x2483, x2493, x2494, x2496, x3689),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x2478, None
             stm: x2479, None
             stm: x2480, None
             stm: x2481, None
             stm: x3679, None
             stm: x3680, None
             stm: x3681, None
             stm: x2482, Some(0)
             stm: x2483, None
             stm: x2484, None
             stm: x2486, None
             stm: x2488, None
             stm: x2489, None
             stm: x3682, None
             stm: x3683, None
             stm: x2490, None
             stm: x2492, None
             stm: x2493, None
             stm: x3684, None
             stm: x3685, None
             stm: x2494, None
             stm: x3686, None
             stm: x3687, None
             stm: x3688, None
             stm: x3689, None
             stm: x2495, None
             stm: x2496, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
        x2706 = UnrolledReduce(Set(b566),x606,Block((x585) => Const(())),List(List(b2499, b2500)),List(List(b2502, b2503)),None)
          x2561 = ParallelPipe(Set(b566),Block(Const(())))
            x2539 = UnrolledForeach(Set(b2502, b566),x2517,Block(Const(())),List(List(b2519)),List(List(b2520)),None)
            Working on pipeLatencies of result Vector(Const(()), x2531, x2537, x2536, x2525, x2538, x2535, x2534), schedule Vector(x2522, x3085, x3086, x3690, x2524, x3691, x3692, x3693, x2525, x2526, x2528, x3087, x3088, x3694, x2530, x3695, x3696, x3697, x2531, x2532, x3698, x2533, x3699, x3700, x3701, x3702, x2534, x2535, x2536, x2537, x2538)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2531
            Computing fullDFS: x2530
            Computing fullDFS: x3088
            Computing fullDFS: x2528
            cur: x2528, inReduce: false, latency: 0.2
            Computing fullDFS: x3087
            Computing fullDFS: x3694
            cur: x3694, inReduce: false, latency: 0.0
            Computing fullDFS: x3695
            cur: x3695, inReduce: false, latency: 0.0
            Computing fullDFS: x3696
            cur: x3696, inReduce: false, latency: 0.0
            Computing fullDFS: x3697
            cur: x3697, inReduce: false, latency: 0.0
            Computing fullDFS: x2537
            Computing fullDFS: x2533
            Computing fullDFS: x2526
            Computing fullDFS: x2525
            Computing fullDFS: x2524
            Computing fullDFS: x3086
            Computing fullDFS: x2522
            cur: x2522, inReduce: false, latency: 20.0
            Computing fullDFS: x3085
            Computing fullDFS: x3690
            cur: x3690, inReduce: false, latency: 0.0
            Computing fullDFS: x3691
            cur: x3691, inReduce: false, latency: 0.0
            Computing fullDFS: x3692
            cur: x3692, inReduce: false, latency: 0.0
            Computing fullDFS: x3693
            cur: x3693, inReduce: false, latency: 0.0
            Computing fullDFS: x3698
            Computing fullDFS: x2532
            Computing fullDFS: x3699
            cur: x3699, inReduce: false, latency: 0.0
            Computing fullDFS: x3700
            cur: x3700, inReduce: false, latency: 0.0
            Computing fullDFS: x3701
            cur: x3701, inReduce: false, latency: 0.0
            Computing fullDFS: x3702
            cur: x3702, inReduce: false, latency: 0.0
            Computing fullDFS: x2536
            Computing fullDFS: x2538
            Computing fullDFS: x2535
            Computing fullDFS: x2534
            Cycles: Map()
            cycles are Vector()
               stm: x2522, None
               stm: x3085, None
               stm: x3086, None
               stm: x3690, None
               stm: x2524, None
               stm: x3691, None
               stm: x3692, None
               stm: x3693, None
               stm: x2525, None
               stm: x2526, None
               stm: x2528, None
               stm: x3087, None
               stm: x3088, None
               stm: x3694, None
               stm: x2530, None
               stm: x3695, None
               stm: x3696, None
               stm: x3697, None
               stm: x2531, None
               stm: x2532, None
               stm: x3698, None
               stm: x2533, None
               stm: x3699, None
               stm: x3700, None
               stm: x3701, None
               stm: x3702, None
               stm: x2534, None
               stm: x2535, None
               stm: x2536, None
               stm: x2537, None
               stm: x2538, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2560 = UnrolledForeach(Set(b2503, b566),x2518,Block(Const(())),List(List(b2540)),List(List(b2541)),None)
            Working on pipeLatencies of result Vector(x2559, Const(()), x2552, x2555, x2546, x2556, x2557, x2558), schedule Vector(x2543, x3089, x3090, x3703, x2545, x3704, x3705, x3706, x2546, x2547, x2549, x3091, x3092, x3707, x2551, x3708, x3709, x3710, x2552, x2553, x3711, x2554, x3712, x3713, x3714, x3715, x2555, x2556, x2557, x2558, x2559)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: x2559
            Computing fullDFS: x2554
            Computing fullDFS: x2547
            Computing fullDFS: x2546
            Computing fullDFS: x2545
            Computing fullDFS: x3090
            Computing fullDFS: x2543
            cur: x2543, inReduce: false, latency: 20.0
            Computing fullDFS: x3089
            Computing fullDFS: x3703
            cur: x3703, inReduce: false, latency: 0.0
            Computing fullDFS: x3704
            cur: x3704, inReduce: false, latency: 0.0
            Computing fullDFS: x3705
            cur: x3705, inReduce: false, latency: 0.0
            Computing fullDFS: x3706
            cur: x3706, inReduce: false, latency: 0.0
            Computing fullDFS: x3711
            Computing fullDFS: x2553
            Computing fullDFS: x2552
            Computing fullDFS: x2551
            Computing fullDFS: x3092
            Computing fullDFS: x2549
            cur: x2549, inReduce: false, latency: 0.2
            Computing fullDFS: x3091
            Computing fullDFS: x3707
            cur: x3707, inReduce: false, latency: 0.0
            Computing fullDFS: x3708
            cur: x3708, inReduce: false, latency: 0.0
            Computing fullDFS: x3709
            cur: x3709, inReduce: false, latency: 0.0
            Computing fullDFS: x3710
            cur: x3710, inReduce: false, latency: 0.0
            Computing fullDFS: x3712
            cur: x3712, inReduce: false, latency: 0.0
            Computing fullDFS: x3713
            cur: x3713, inReduce: false, latency: 0.0
            Computing fullDFS: x3714
            cur: x3714, inReduce: false, latency: 0.0
            Computing fullDFS: x3715
            cur: x3715, inReduce: false, latency: 0.0
            Computing fullDFS: Const(())
            Computing fullDFS: x2555
            Computing fullDFS: x2556
            Computing fullDFS: x2557
            Computing fullDFS: x2558
            Cycles: Map()
            cycles are Vector()
               stm: x2543, None
               stm: x3089, None
               stm: x3090, None
               stm: x3703, None
               stm: x2545, None
               stm: x3704, None
               stm: x3705, None
               stm: x3706, None
               stm: x2546, None
               stm: x2547, None
               stm: x2549, None
               stm: x3091, None
               stm: x3092, None
               stm: x3707, None
               stm: x2551, None
               stm: x3708, None
               stm: x3709, None
               stm: x3710, None
               stm: x2552, None
               stm: x2553, None
               stm: x3711, None
               stm: x2554, None
               stm: x3712, None
               stm: x3713, None
               stm: x3714, None
               stm: x3715, None
               stm: x2555, None
               stm: x2556, None
               stm: x2557, None
               stm: x2558, None
               stm: x2559, None
             - Latency:  26.2
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2590 = ParallelPipe(Set(b566),Block(Const(())))
            x2576 = UnitPipe(Set(b2502, b566),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2575, x2571, x2564, x2567), schedule Vector(x2564, x2565, x2567, x2568, x2569, x3716, x3093, x2571, x2572, x3717, x3094, x2575)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2575
            Computing fullDFS: x3094
            Computing fullDFS: x3093
            Computing fullDFS: x2569
            Computing fullDFS: x2568
            Computing fullDFS: x2567
            cur: x2567, inReduce: false, latency: 2.0
            Computing fullDFS: x3716
            Computing fullDFS: x2565
            Computing fullDFS: x2564
            cur: x2564, inReduce: false, latency: 2.0
            Computing fullDFS: x3717
            Computing fullDFS: x2572
            Computing fullDFS: x2571
            cur: x2571, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x2564, None
               stm: x2565, None
               stm: x2567, None
               stm: x2568, None
               stm: x2569, None
               stm: x3716, None
               stm: x3093, None
               stm: x2571, None
               stm: x2572, None
               stm: x3717, None
               stm: x3094, None
               stm: x2575, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2589 = UnitPipe(Set(b2503, b566),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2580, x2577, x2588, x2584), schedule Vector(x2577, x2578, x2580, x2581, x2582, x3718, x3095, x2584, x2585, x3719, x3096, x2588)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2580
            cur: x2580, inReduce: false, latency: 2.0
            Computing fullDFS: x2577
            cur: x2577, inReduce: false, latency: 2.0
            Computing fullDFS: x2588
            Computing fullDFS: x3096
            Computing fullDFS: x3095
            Computing fullDFS: x2582
            Computing fullDFS: x2581
            Computing fullDFS: x3718
            Computing fullDFS: x2578
            Computing fullDFS: x3719
            Computing fullDFS: x2585
            Computing fullDFS: x2584
            cur: x2584, inReduce: false, latency: 2.0
            Cycles: Map()
            cycles are Vector()
               stm: x2577, None
               stm: x2578, None
               stm: x2580, None
               stm: x2581, None
               stm: x2582, None
               stm: x3718, None
               stm: x3095, None
               stm: x2584, None
               stm: x2585, None
               stm: x3719, None
               stm: x3096, None
               stm: x2588, None
             - Latency:  21.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2615 = ParallelPipe(Set(b566),Block(Const(())))
            x2605 = UnitPipe(Set(b2502, b566),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2597, x2603, x2604), schedule Vector(x2597, x2598, x2599, x2600, x2601, x2602, x2603, x2604)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2597
            cur: x2597, inReduce: false, latency: 2.0
            Computing fullDFS: x2603
            Computing fullDFS: x2601
            Computing fullDFS: x2599
            Computing fullDFS: x2598
            Computing fullDFS: x2600
            Computing fullDFS: x2604
            Computing fullDFS: x2602
            Cycles: Map()
            cycles are Vector()
               stm: x2597, None
               stm: x2598, None
               stm: x2599, None
               stm: x2600, None
               stm: x2601, None
               stm: x2602, None
               stm: x2603, None
               stm: x2604, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2614 = UnitPipe(Set(b2503, b566),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2606, x2612, x2613), schedule Vector(x2606, x2607, x2608, x2609, x2610, x2611, x2612, x2613)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2606
            cur: x2606, inReduce: false, latency: 2.0
            Computing fullDFS: x2612
            Computing fullDFS: x2610
            Computing fullDFS: x2608
            Computing fullDFS: x2607
            Computing fullDFS: x2609
            Computing fullDFS: x2613
            Computing fullDFS: x2611
            Cycles: Map()
            cycles are Vector()
               stm: x2606, None
               stm: x2607, None
               stm: x2608, None
               stm: x2609, None
               stm: x2610, None
               stm: x2611, None
               stm: x2612, None
               stm: x2613, None
             - Latency:  3.8
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2633 = Switch(List(x2963, x2964),Block(x2632))
          Working on pipeLatencies of result Vector(x2632, x2631, x2630, x2620, x2621, Const(90)), schedule Vector(x2631, x2632, x2620, x2621, x2622, x2623, x3720, x2624, x3721, x2625, x3722, x2626, x3723, x2627, x2628, x2629, x3724, x2630)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x2632
          cur: x2632, inReduce: false, latency: 0.0
          Computing fullDFS: x2631
          Computing fullDFS: x2620
          cur: x2620, inReduce: false, latency: 0.0
          Computing fullDFS: x2621
          Computing fullDFS: x2630
          Computing fullDFS: x2627
          Computing fullDFS: x2626
          Computing fullDFS: x2625
          Computing fullDFS: x2624
          Computing fullDFS: x2623
          Computing fullDFS: x2622
          Computing fullDFS: x3720
          Computing fullDFS: x3721
          Computing fullDFS: x3722
          Computing fullDFS: x3723
          Computing fullDFS: x3724
          Computing fullDFS: x2629
          Computing fullDFS: x2628
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x2631, None
             stm: x2632, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2647 = Switch(List(x2965, x2966),Block(x2646))
          Working on pipeLatencies of result Vector(x2646, x2645, x2644, x2634, x2635, Const(90)), schedule Vector(x2645, x2646, x2634, x2635, x2636, x2637, x3725, x2638, x3726, x2639, x3727, x2640, x3728, x2641, x2642, x2643, x3729, x2644)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: x2646
          cur: x2646, inReduce: false, latency: 0.0
          Computing fullDFS: x2645
          Computing fullDFS: x2634
          cur: x2634, inReduce: false, latency: 0.0
          Computing fullDFS: x2635
          Computing fullDFS: x2644
          Computing fullDFS: x2641
          Computing fullDFS: x2640
          Computing fullDFS: x2639
          Computing fullDFS: x2638
          Computing fullDFS: x2637
          Computing fullDFS: x2636
          Computing fullDFS: x3725
          Computing fullDFS: x3726
          Computing fullDFS: x3727
          Computing fullDFS: x3728
          Computing fullDFS: x3729
          Computing fullDFS: x2643
          Computing fullDFS: x2642
          Computing fullDFS: Const(90)
          Cycles: Map()
          cycles are Vector()
             stm: x2645, None
             stm: x2646, None
           - Latency:  103.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2652 = ParallelPipe(Set(b566),Block(Const(())))
            x2649 = UnitPipe(Set(b2502, b566),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2648), schedule Vector(x2648)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2648
            cur: x2648, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x2648, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2651 = UnitPipe(Set(b2503, b566),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x2650), schedule Vector(x2650)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x2650
            cur: x2650, inReduce: false, latency: 1.0
            Cycles: Map()
            cycles are Vector()
               stm: x2650, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
          x2685 = ParallelPipe(Set(b566),Block(Const(())))
            x2670 = UnrolledForeach(Set(b2502, b566),x2655,Block(Const(())),List(List(b2657)),List(List(b2658)),None)
            Working on pipeLatencies of result Vector(Const(()), x2659, x2667, x2666, x2662, x2669, x2665, x2668), schedule Vector(x2659, x2660, x2661, x2662, x2663, x3730, x2664, x3731, x3732, x3733, x3734, x2665, x2666, x2667, x2668, x2669)
            Memories with both reads and writes in this scope: Set(x2508)
            NonConflictSets(x2659, x2665): Set()
            NonConflictSets(x2659, x2665): Set()
            Found Cycle: x2659, x2665
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x2508,x2659,x2665)), Map(x2661 -> List(AccumTriple(x2508,x2659,x2665)), x2664 -> List(AccumTriple(x2508,x2659,x2665)), x2660 -> List(AccumTriple(x2508,x2659,x2665)), x2665 -> List(AccumTriple(x2508,x2659,x2665)), x2659 -> List(AccumTriple(x2508,x2659,x2665)))
            Computing fullDFS: Const(())
            Computing fullDFS: x2659
            cur: x2659, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x2508,x2659,x2665))
            Computing fullDFS: x2667
            Computing fullDFS: x2664
            Computing fullDFS: x2661
            Computing fullDFS: x2660
            Computing fullDFS: x3730
            Computing fullDFS: x2663
            Computing fullDFS: x2662
            cur: x2662, inReduce: false, latency: 2.0
            Computing fullDFS: x3731
            cur: x3731, inReduce: false, latency: 0.0
            Computing fullDFS: x3732
            cur: x3732, inReduce: false, latency: 0.0
            Computing fullDFS: x3733
            cur: x3733, inReduce: false, latency: 0.0
            Computing fullDFS: x3734
            cur: x3734, inReduce: false, latency: 0.0
            Computing fullDFS: x2666
            Computing fullDFS: x2669
            Computing fullDFS: x2665
            Computing fullDFS: x2668
            Cycle #0: write: x2665, cycle: x2659, x2659, x2660, x2661, x2664, x2665
            Cycles: Map(x2667 -> Vector(x2659, x2660, x2661, x2664, x2667), x2661 -> Vector(x2659, x2660, x2661), x2664 -> Vector(x2659, x2660, x2661, x2664), x2666 -> Vector(x2659, x2660, x2661, x2664, x2666), x2669 -> Vector(x2659, x2660, x2661, x2664, x2669), x2660 -> Vector(x2659, x2660), x2668 -> Vector(x2659, x2660, x2661, x2664, x2668), x2665 -> Vector(x2659, x2659, x2660, x2661, x2664, x2665), x2659 -> List(x2659))
            pseudo cycles for x2508:
            Access: x2659 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2659 = SRAMBankedRead(x2508,Vector(List(Const(0))),Vector(b2657),Vector(Set(b2658, b2502, b566)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x2665 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2665 = SRAMBankedWrite(x2508,Vector(x2664),Vector(List(Const(0))),Vector(x3732),Vector(Set(x3733, x3734, x3731))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x2659),x2508,1.0), AAACycle(Vector(x2665),x2508,1.0), WARCycle(x2659,x2665,x2508,Vector(x2659, x2659, x2660, x2661, x2664, x2665),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x2659, None
               stm: x2660, None
               stm: x2661, None
               stm: x2662, None
               stm: x2663, None
               stm: x3730, None
               stm: x2664, None
               stm: x3731, None
               stm: x3732, None
               stm: x3733, None
               stm: x3734, None
               stm: x2665, None
               stm: x2666, None
               stm: x2667, None
               stm: x2668, None
               stm: x2669, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x2684 = UnrolledForeach(Set(b2503, b566),x2656,Block(Const(())),List(List(b2671)),List(List(b2672)),None)
            Working on pipeLatencies of result Vector(Const(()), x2676, x2682, x2673, x2681, x2679, x2680, x2683), schedule Vector(x2673, x2674, x2675, x2676, x2677, x3735, x2678, x3736, x3737, x3738, x3739, x2679, x2680, x2681, x2682, x2683)
            Memories with both reads and writes in this scope: Set(x2513)
            NonConflictSets(x2673, x2682): Set()
            NonConflictSets(x2673, x2682): Set()
            Found Cycle: x2673, x2682
            Exclusions: Set() Set() 
            Done finding cycles: Vector(AccumTriple(x2513,x2673,x2682)), Map(x2682 -> List(AccumTriple(x2513,x2673,x2682)), x2673 -> List(AccumTriple(x2513,x2673,x2682)), x2675 -> List(AccumTriple(x2513,x2673,x2682)), x2678 -> List(AccumTriple(x2513,x2673,x2682)), x2674 -> List(AccumTriple(x2513,x2673,x2682)))
            Computing fullDFS: Const(())
            Computing fullDFS: x2676
            cur: x2676, inReduce: false, latency: 2.0
            Computing fullDFS: x2682
            Computing fullDFS: x2673
            cur: x2673, inReduce: true, latency: 2.0
            Known Cycles: List(AccumTriple(x2513,x2673,x2682))
            Computing fullDFS: x2678
            Computing fullDFS: x2675
            Computing fullDFS: x2674
            Computing fullDFS: x3735
            Computing fullDFS: x2677
            Computing fullDFS: x3736
            cur: x3736, inReduce: false, latency: 0.0
            Computing fullDFS: x3737
            cur: x3737, inReduce: false, latency: 0.0
            Computing fullDFS: x3738
            cur: x3738, inReduce: false, latency: 0.0
            Computing fullDFS: x3739
            cur: x3739, inReduce: false, latency: 0.0
            Computing fullDFS: x2681
            Computing fullDFS: x2679
            Computing fullDFS: x2680
            Computing fullDFS: x2683
            Cycle #0: write: x2682, cycle: x2673, x2673, x2674, x2675, x2678, x2682
            Cycles: Map(x2679 -> Vector(x2673, x2674, x2675, x2678, x2679), x2682 -> Vector(x2673, x2673, x2674, x2675, x2678, x2682), x2673 -> List(x2673), x2681 -> Vector(x2673, x2674, x2675, x2678, x2681), x2675 -> Vector(x2673, x2674, x2675), x2678 -> Vector(x2673, x2674, x2675, x2678), x2680 -> Vector(x2673, x2674, x2675, x2678, x2680), x2683 -> Vector(x2673, x2674, x2675, x2678, x2683), x2674 -> Vector(x2673, x2674))
            pseudo cycles for x2513:
            Access: x2673 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2673 = SRAMBankedRead(x2513,Vector(List(Const(0))),Vector(b2671),Vector(Set(b2672, b2503, b566)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 2.0 due to muxing.
            Access: x2682 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))))
            First Port: Map(List() -> Port(Some(6),0,0,Vector(0),Vector(0)))
            Pushing x2682 = SRAMBankedWrite(x2513,Vector(x2678),Vector(List(Const(0))),Vector(x3736),Vector(Set(x3739, x3738, x3737))) by 0.0 to 15.0 due to muxing.
            cycles are Vector(AAACycle(Vector(x2673),x2513,1.0), AAACycle(Vector(x2682),x2513,1.0), WARCycle(x2673,x2682,x2513,Vector(x2673, x2673, x2674, x2675, x2678, x2682),15.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
               stm: x2673, None
               stm: x2674, None
               stm: x2675, None
               stm: x2676, None
               stm: x2677, None
               stm: x3735, None
               stm: x2678, None
               stm: x3736, None
               stm: x3737, None
               stm: x3738, None
               stm: x3739, None
               stm: x2679, None
               stm: x2680, None
               stm: x2681, None
               stm: x2682, None
               stm: x2683, None
             - Latency:  15.0
             - Interval: 15.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 15.0
          x2705 = UnrolledForeach(Set(),x626,Block(Const(())),Vector(List(b2501)),Vector(List(b2504)),None)
          Working on pipeLatencies of result Vector(Const(()), x2686, x2703, x2688, x2704, x2690), schedule Vector(x2686, x2687, x2688, x2689, x3740, x3741, x3742, x2690, x2691, x2692, x2694, x2696, x2697, x3743, x3744, x2698, x2700, x2701, x3745, x3746, x2702, x3747, x3748, x3749, x3750, x2703, x2704)
          Memories with both reads and writes in this scope: Set(x585)
          NonConflictSets(x2690, x2703): Set()
          NonConflictSets(x2690, x2703): Set()
          Found Cycle: x2690, x2703
          Exclusions: Set() Set() 
          Done finding cycles: Vector(AccumTriple(x585,x2690,x2703)), Map(x2703 -> List(AccumTriple(x585,x2690,x2703)), x2690 -> List(AccumTriple(x585,x2690,x2703)), x2702 -> List(AccumTriple(x585,x2690,x2703)), x2701 -> List(AccumTriple(x585,x2690,x2703)), x3750 -> List(AccumTriple(x585,x2690,x2703)), x2691 -> List(AccumTriple(x585,x2690,x2703)))
          Computing fullDFS: Const(())
          Computing fullDFS: x2686
          cur: x2686, inReduce: false, latency: 2.0
          Computing fullDFS: x2703
          Computing fullDFS: x2690
          Computing fullDFS: x3740
          cur: x3740, inReduce: false, latency: 0.0
          Computing fullDFS: x3741
          cur: x3741, inReduce: false, latency: 0.0
          Computing fullDFS: x3742
          cur: x3742, inReduce: false, latency: 0.0
          Computing fullDFS: x3747
          cur: x3747, inReduce: false, latency: 0.0
          Computing fullDFS: x3748
          cur: x3748, inReduce: false, latency: 0.0
          Computing fullDFS: x3749
          cur: x3749, inReduce: false, latency: 0.0
          Computing fullDFS: x3750
          Computing fullDFS: x2702
          Computing fullDFS: x2701
          Computing fullDFS: x2691
          Computing fullDFS: x2698
          Computing fullDFS: x2697
          Computing fullDFS: x2687
          Computing fullDFS: x2689
          Computing fullDFS: x2688
          cur: x2688, inReduce: false, latency: 2.0
          Computing fullDFS: x3743
          Computing fullDFS: x3744
          Computing fullDFS: x2696
          Computing fullDFS: x2692
          cur: x2692, inReduce: false, latency: 0.2
          Computing fullDFS: x2694
          cur: x2694, inReduce: false, latency: 0.2
          Computing fullDFS: x3745
          Computing fullDFS: x2700
          cur: x2700, inReduce: false, latency: 0.2
          Computing fullDFS: x3746
          Computing fullDFS: x2704
          Cycle #0: write: x2703, cycle: x2690, x2690, x2691, x2701, x2702, x3750, x2703
          Cycles: Map(x2703 -> Vector(x2690, x2690, x2691, x2701, x2702, x3750, x2703), x2690 -> List(x2690), x2702 -> Vector(x2690, x2691, x2701, x2702), x2704 -> Vector(x2690, x2691, x2701, x2702, x3750, x2704), x2701 -> Vector(x2690, x2691, x2701), x3750 -> Vector(x2690, x2691, x2701, x2702, x3750), x2691 -> Vector(x2690, x2691))
          pseudo cycles for x585:
          Access: x2690 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x2690 = SRAMBankedRead(x585,Vector(List(Const(0))),Vector(x3742),Vector(Set(x3740, x3741)),Vec[Fix[TRUE,_10,_22]]) by 0.0 to 3.5 due to muxing.
          Access: x2703 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))))
          First Port: Map(List() -> Port(Some(0),0,0,Vector(0),Vector(0)))
          Pushing x2703 = SRAMBankedWrite(x585,Vector(x3750),Vector(List(Const(0))),Vector(x3747),Vector(Set(x3749, x3748))) by 0.0 to 6.0 due to muxing.
          cycles are Vector(AAACycle(Vector(x2690),x585,1.0), AAACycle(Vector(x2703),x585,1.0), WARCycle(x2690,x2703,x585,Vector(x2690, x2690, x2691, x2701, x2702, x2703, x3750),5.0,spatial.node.AccumMarker$Unknown$@277b4e64,-1))
             stm: x2686, None
             stm: x2687, None
             stm: x2688, None
             stm: x2689, None
             stm: x3740, None
             stm: x3741, None
             stm: x3742, None
             stm: x2690, Some(0)
             stm: x2691, None
             stm: x2692, None
             stm: x2694, None
             stm: x2696, None
             stm: x2697, None
             stm: x3743, None
             stm: x3744, None
             stm: x2698, None
             stm: x2700, None
             stm: x2701, None
             stm: x3745, None
             stm: x3746, None
             stm: x2702, None
             stm: x3747, None
             stm: x3748, None
             stm: x3749, None
             stm: x3750, None
             stm: x2703, None
             stm: x2704, None
           - Latency:  6.0
           - Interval: 5.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer(0))
         - Interval: 15.0
       - Interval: 15.0
      x2858 = ParallelPipe(Set(),Block(Const(())))
        x2740 = UnrolledForeach(Set(b557),x2718,Block(Const(())),List(List(b2728)),List(List(b2729)),None)
        Working on pipeLatencies of result Vector(Const(()), x2730, x2736, x2739), schedule Vector(x2730, x2731, x2733, x3097, x3098, x3751, x2735, x3752, x3753, x2736, x2737, x3754, x2738, x3755, x3756, x3757, x2739)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2730
        cur: x2730, inReduce: false, latency: 2.0
        Computing fullDFS: x2736
        Computing fullDFS: x2735
        Computing fullDFS: x3098
        Computing fullDFS: x2733
        cur: x2733, inReduce: false, latency: 20.0
        Computing fullDFS: x3097
        Computing fullDFS: x3751
        cur: x3751, inReduce: false, latency: 0.0
        Computing fullDFS: x3752
        cur: x3752, inReduce: false, latency: 0.0
        Computing fullDFS: x3753
        cur: x3753, inReduce: false, latency: 0.0
        Computing fullDFS: x2739
        Computing fullDFS: x2738
        Computing fullDFS: x2737
        Computing fullDFS: x3754
        Computing fullDFS: x2731
        Computing fullDFS: x3755
        cur: x3755, inReduce: false, latency: 0.0
        Computing fullDFS: x3756
        cur: x3756, inReduce: false, latency: 0.0
        Computing fullDFS: x3757
        Cycles: Map()
        cycles are Vector()
           stm: x2730, None
           stm: x2731, None
           stm: x2733, None
           stm: x3097, None
           stm: x3098, None
           stm: x3751, None
           stm: x2735, None
           stm: x3752, None
           stm: x3753, None
           stm: x2736, None
           stm: x2737, None
           stm: x3754, None
           stm: x2738, None
           stm: x3755, None
           stm: x3756, None
           stm: x3757, None
           stm: x2739, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2753 = UnrolledForeach(Set(b558),x2719,Block(Const(())),List(List(b2741)),List(List(b2742)),None)
        Working on pipeLatencies of result Vector(Const(()), x2743, x2749, x2752), schedule Vector(x2743, x2744, x2746, x3099, x3100, x3758, x2748, x3759, x3760, x2749, x2750, x3761, x2751, x3762, x3763, x3764, x2752)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2743
        cur: x2743, inReduce: false, latency: 2.0
        Computing fullDFS: x2749
        Computing fullDFS: x2748
        Computing fullDFS: x3100
        Computing fullDFS: x2746
        cur: x2746, inReduce: false, latency: 20.0
        Computing fullDFS: x3099
        Computing fullDFS: x3758
        cur: x3758, inReduce: false, latency: 0.0
        Computing fullDFS: x3759
        cur: x3759, inReduce: false, latency: 0.0
        Computing fullDFS: x3760
        cur: x3760, inReduce: false, latency: 0.0
        Computing fullDFS: x2752
        Computing fullDFS: x2751
        Computing fullDFS: x2750
        Computing fullDFS: x3761
        Computing fullDFS: x2744
        Computing fullDFS: x3762
        Computing fullDFS: x3763
        cur: x3763, inReduce: false, latency: 0.0
        Computing fullDFS: x3764
        cur: x3764, inReduce: false, latency: 0.0
        Cycles: Map()
        cycles are Vector()
           stm: x2743, None
           stm: x2744, None
           stm: x2746, None
           stm: x3099, None
           stm: x3100, None
           stm: x3758, None
           stm: x2748, None
           stm: x3759, None
           stm: x3760, None
           stm: x2749, None
           stm: x2750, None
           stm: x3761, None
           stm: x2751, None
           stm: x3762, None
           stm: x3763, None
           stm: x3764, None
           stm: x2752, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2766 = UnrolledForeach(Set(b559),x2720,Block(Const(())),List(List(b2754)),List(List(b2755)),None)
        Working on pipeLatencies of result Vector(Const(()), x2756, x2762, x2765), schedule Vector(x2756, x2757, x2759, x3101, x3102, x3765, x2761, x3766, x3767, x2762, x2763, x3768, x2764, x3769, x3770, x3771, x2765)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2756
        cur: x2756, inReduce: false, latency: 2.0
        Computing fullDFS: x2762
        Computing fullDFS: x2761
        Computing fullDFS: x3102
        Computing fullDFS: x2759
        cur: x2759, inReduce: false, latency: 20.0
        Computing fullDFS: x3101
        Computing fullDFS: x3765
        cur: x3765, inReduce: false, latency: 0.0
        Computing fullDFS: x3766
        cur: x3766, inReduce: false, latency: 0.0
        Computing fullDFS: x3767
        cur: x3767, inReduce: false, latency: 0.0
        Computing fullDFS: x2765
        Computing fullDFS: x2764
        Computing fullDFS: x2763
        Computing fullDFS: x3768
        Computing fullDFS: x2757
        Computing fullDFS: x3769
        cur: x3769, inReduce: false, latency: 0.0
        Computing fullDFS: x3770
        cur: x3770, inReduce: false, latency: 0.0
        Computing fullDFS: x3771
        Cycles: Map()
        cycles are Vector()
           stm: x2756, None
           stm: x2757, None
           stm: x2759, None
           stm: x3101, None
           stm: x3102, None
           stm: x3765, None
           stm: x2761, None
           stm: x3766, None
           stm: x3767, None
           stm: x2762, None
           stm: x2763, None
           stm: x3768, None
           stm: x2764, None
           stm: x3769, None
           stm: x3770, None
           stm: x3771, None
           stm: x2765, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2779 = UnrolledForeach(Set(b560),x2721,Block(Const(())),List(List(b2767)),List(List(b2768)),None)
        Working on pipeLatencies of result Vector(Const(()), x2769, x2775, x2778), schedule Vector(x2769, x2770, x2772, x3103, x3104, x3772, x2774, x3773, x3774, x2775, x2776, x3775, x2777, x3776, x3777, x3778, x2778)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2769
        cur: x2769, inReduce: false, latency: 2.0
        Computing fullDFS: x2775
        Computing fullDFS: x2774
        Computing fullDFS: x3104
        Computing fullDFS: x2772
        cur: x2772, inReduce: false, latency: 20.0
        Computing fullDFS: x3103
        Computing fullDFS: x3772
        cur: x3772, inReduce: false, latency: 0.0
        Computing fullDFS: x3773
        cur: x3773, inReduce: false, latency: 0.0
        Computing fullDFS: x3774
        cur: x3774, inReduce: false, latency: 0.0
        Computing fullDFS: x2778
        Computing fullDFS: x2777
        Computing fullDFS: x2776
        Computing fullDFS: x3775
        Computing fullDFS: x2770
        Computing fullDFS: x3776
        Computing fullDFS: x3777
        cur: x3777, inReduce: false, latency: 0.0
        Computing fullDFS: x3778
        cur: x3778, inReduce: false, latency: 0.0
        Cycles: Map()
        cycles are Vector()
           stm: x2769, None
           stm: x2770, None
           stm: x2772, None
           stm: x3103, None
           stm: x3104, None
           stm: x3772, None
           stm: x2774, None
           stm: x3773, None
           stm: x3774, None
           stm: x2775, None
           stm: x2776, None
           stm: x3775, None
           stm: x2777, None
           stm: x3776, None
           stm: x3777, None
           stm: x3778, None
           stm: x2778, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2792 = UnrolledForeach(Set(b561),x2722,Block(Const(())),List(List(b2780)),List(List(b2781)),None)
        Working on pipeLatencies of result Vector(Const(()), x2782, x2788, x2791), schedule Vector(x2782, x2783, x2785, x3105, x3106, x3779, x2787, x3780, x3781, x2788, x2789, x3782, x2790, x3783, x3784, x3785, x2791)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2782
        cur: x2782, inReduce: false, latency: 2.0
        Computing fullDFS: x2788
        Computing fullDFS: x2787
        Computing fullDFS: x3106
        Computing fullDFS: x2785
        cur: x2785, inReduce: false, latency: 20.0
        Computing fullDFS: x3105
        Computing fullDFS: x3779
        cur: x3779, inReduce: false, latency: 0.0
        Computing fullDFS: x3780
        cur: x3780, inReduce: false, latency: 0.0
        Computing fullDFS: x3781
        cur: x3781, inReduce: false, latency: 0.0
        Computing fullDFS: x2791
        Computing fullDFS: x2790
        Computing fullDFS: x2789
        Computing fullDFS: x3782
        Computing fullDFS: x2783
        Computing fullDFS: x3783
        Computing fullDFS: x3784
        cur: x3784, inReduce: false, latency: 0.0
        Computing fullDFS: x3785
        cur: x3785, inReduce: false, latency: 0.0
        Cycles: Map()
        cycles are Vector()
           stm: x2782, None
           stm: x2783, None
           stm: x2785, None
           stm: x3105, None
           stm: x3106, None
           stm: x3779, None
           stm: x2787, None
           stm: x3780, None
           stm: x3781, None
           stm: x2788, None
           stm: x2789, None
           stm: x3782, None
           stm: x2790, None
           stm: x3783, None
           stm: x3784, None
           stm: x3785, None
           stm: x2791, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2805 = UnrolledForeach(Set(b562),x2723,Block(Const(())),List(List(b2793)),List(List(b2794)),None)
        Working on pipeLatencies of result Vector(Const(()), x2795, x2801, x2804), schedule Vector(x2795, x2796, x2798, x3107, x3108, x3786, x2800, x3787, x3788, x2801, x2802, x3789, x2803, x3790, x3791, x3792, x2804)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2795
        cur: x2795, inReduce: false, latency: 2.0
        Computing fullDFS: x2801
        Computing fullDFS: x2800
        Computing fullDFS: x3108
        Computing fullDFS: x2798
        cur: x2798, inReduce: false, latency: 20.0
        Computing fullDFS: x3107
        Computing fullDFS: x3786
        cur: x3786, inReduce: false, latency: 0.0
        Computing fullDFS: x3787
        cur: x3787, inReduce: false, latency: 0.0
        Computing fullDFS: x3788
        cur: x3788, inReduce: false, latency: 0.0
        Computing fullDFS: x2804
        Computing fullDFS: x2803
        Computing fullDFS: x2802
        Computing fullDFS: x3789
        Computing fullDFS: x2796
        Computing fullDFS: x3790
        cur: x3790, inReduce: false, latency: 0.0
        Computing fullDFS: x3791
        cur: x3791, inReduce: false, latency: 0.0
        Computing fullDFS: x3792
        Cycles: Map()
        cycles are Vector()
           stm: x2795, None
           stm: x2796, None
           stm: x2798, None
           stm: x3107, None
           stm: x3108, None
           stm: x3786, None
           stm: x2800, None
           stm: x3787, None
           stm: x3788, None
           stm: x2801, None
           stm: x2802, None
           stm: x3789, None
           stm: x2803, None
           stm: x3790, None
           stm: x3791, None
           stm: x3792, None
           stm: x2804, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2818 = UnrolledForeach(Set(b563),x2724,Block(Const(())),List(List(b2806)),List(List(b2807)),None)
        Working on pipeLatencies of result Vector(Const(()), x2808, x2814, x2817), schedule Vector(x2808, x2809, x2811, x3109, x3110, x3793, x2813, x3794, x3795, x2814, x2815, x3796, x2816, x3797, x3798, x3799, x2817)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2808
        cur: x2808, inReduce: false, latency: 2.0
        Computing fullDFS: x2814
        Computing fullDFS: x2813
        Computing fullDFS: x3110
        Computing fullDFS: x2811
        cur: x2811, inReduce: false, latency: 20.0
        Computing fullDFS: x3109
        Computing fullDFS: x3793
        cur: x3793, inReduce: false, latency: 0.0
        Computing fullDFS: x3794
        cur: x3794, inReduce: false, latency: 0.0
        Computing fullDFS: x3795
        cur: x3795, inReduce: false, latency: 0.0
        Computing fullDFS: x2817
        Computing fullDFS: x2816
        Computing fullDFS: x2815
        Computing fullDFS: x3796
        Computing fullDFS: x2809
        Computing fullDFS: x3797
        Computing fullDFS: x3798
        cur: x3798, inReduce: false, latency: 0.0
        Computing fullDFS: x3799
        cur: x3799, inReduce: false, latency: 0.0
        Cycles: Map()
        cycles are Vector()
           stm: x2808, None
           stm: x2809, None
           stm: x2811, None
           stm: x3109, None
           stm: x3110, None
           stm: x3793, None
           stm: x2813, None
           stm: x3794, None
           stm: x3795, None
           stm: x2814, None
           stm: x2815, None
           stm: x3796, None
           stm: x2816, None
           stm: x3797, None
           stm: x3798, None
           stm: x3799, None
           stm: x2817, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2831 = UnrolledForeach(Set(b564),x2725,Block(Const(())),List(List(b2819)),List(List(b2820)),None)
        Working on pipeLatencies of result Vector(Const(()), x2821, x2827, x2830), schedule Vector(x2821, x2822, x2824, x3111, x3112, x3800, x2826, x3801, x3802, x2827, x2828, x3803, x2829, x3804, x3805, x3806, x2830)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2821
        cur: x2821, inReduce: false, latency: 2.0
        Computing fullDFS: x2827
        Computing fullDFS: x2826
        Computing fullDFS: x3112
        Computing fullDFS: x2824
        cur: x2824, inReduce: false, latency: 20.0
        Computing fullDFS: x3111
        Computing fullDFS: x3800
        cur: x3800, inReduce: false, latency: 0.0
        Computing fullDFS: x3801
        cur: x3801, inReduce: false, latency: 0.0
        Computing fullDFS: x3802
        cur: x3802, inReduce: false, latency: 0.0
        Computing fullDFS: x2830
        Computing fullDFS: x2829
        Computing fullDFS: x2828
        Computing fullDFS: x3803
        Computing fullDFS: x2822
        Computing fullDFS: x3804
        Computing fullDFS: x3805
        cur: x3805, inReduce: false, latency: 0.0
        Computing fullDFS: x3806
        cur: x3806, inReduce: false, latency: 0.0
        Cycles: Map()
        cycles are Vector()
           stm: x2821, None
           stm: x2822, None
           stm: x2824, None
           stm: x3111, None
           stm: x3112, None
           stm: x3800, None
           stm: x2826, None
           stm: x3801, None
           stm: x3802, None
           stm: x2827, None
           stm: x2828, None
           stm: x3803, None
           stm: x2829, None
           stm: x3804, None
           stm: x3805, None
           stm: x3806, None
           stm: x2830, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2844 = UnrolledForeach(Set(b565),x2726,Block(Const(())),List(List(b2832)),List(List(b2833)),None)
        Working on pipeLatencies of result Vector(Const(()), x2834, x2840, x2843), schedule Vector(x2834, x2835, x2837, x3113, x3114, x3807, x2839, x3808, x3809, x2840, x2841, x3810, x2842, x3811, x3812, x3813, x2843)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2834
        cur: x2834, inReduce: false, latency: 2.0
        Computing fullDFS: x2840
        Computing fullDFS: x2839
        Computing fullDFS: x3114
        Computing fullDFS: x2837
        cur: x2837, inReduce: false, latency: 20.0
        Computing fullDFS: x3113
        Computing fullDFS: x3807
        cur: x3807, inReduce: false, latency: 0.0
        Computing fullDFS: x3808
        cur: x3808, inReduce: false, latency: 0.0
        Computing fullDFS: x3809
        cur: x3809, inReduce: false, latency: 0.0
        Computing fullDFS: x2843
        Computing fullDFS: x2842
        Computing fullDFS: x2841
        Computing fullDFS: x3810
        Computing fullDFS: x2835
        Computing fullDFS: x3811
        cur: x3811, inReduce: false, latency: 0.0
        Computing fullDFS: x3812
        cur: x3812, inReduce: false, latency: 0.0
        Computing fullDFS: x3813
        Cycles: Map()
        cycles are Vector()
           stm: x2834, None
           stm: x2835, None
           stm: x2837, None
           stm: x3113, None
           stm: x3114, None
           stm: x3807, None
           stm: x2839, None
           stm: x3808, None
           stm: x3809, None
           stm: x2840, None
           stm: x2841, None
           stm: x3810, None
           stm: x2842, None
           stm: x3811, None
           stm: x3812, None
           stm: x3813, None
           stm: x2843, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x2857 = UnrolledForeach(Set(b566),x2727,Block(Const(())),List(List(b2845)),List(List(b2846)),None)
        Working on pipeLatencies of result Vector(Const(()), x2847, x2853, x2856), schedule Vector(x2847, x2848, x2850, x3115, x3116, x3814, x2852, x3815, x3816, x2853, x2854, x3817, x2855, x3818, x3819, x3820, x2856)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2847
        cur: x2847, inReduce: false, latency: 2.0
        Computing fullDFS: x2853
        Computing fullDFS: x2852
        Computing fullDFS: x3116
        Computing fullDFS: x2850
        cur: x2850, inReduce: false, latency: 20.0
        Computing fullDFS: x3115
        Computing fullDFS: x3814
        cur: x3814, inReduce: false, latency: 0.0
        Computing fullDFS: x3815
        cur: x3815, inReduce: false, latency: 0.0
        Computing fullDFS: x3816
        cur: x3816, inReduce: false, latency: 0.0
        Computing fullDFS: x2856
        Computing fullDFS: x2855
        Computing fullDFS: x2854
        Computing fullDFS: x3817
        Computing fullDFS: x2848
        Computing fullDFS: x3818
        Computing fullDFS: x3819
        cur: x3819, inReduce: false, latency: 0.0
        Computing fullDFS: x3820
        cur: x3820, inReduce: false, latency: 0.0
        Cycles: Map()
        cycles are Vector()
           stm: x2847, None
           stm: x2848, None
           stm: x2850, None
           stm: x3115, None
           stm: x3116, None
           stm: x3814, None
           stm: x2852, None
           stm: x3815, None
           stm: x3816, None
           stm: x2853, None
           stm: x2854, None
           stm: x3817, None
           stm: x2855, None
           stm: x3818, None
           stm: x3819, None
           stm: x3820, None
           stm: x2856, None
         - Latency:  26.2
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
       - Interval: 1.0
     - Interval: 15.0
    x2916 = UnitPipe(Set(),Block(Const(())),None)
      x2915 = UnrolledForeach(Set(),x2864,Block(Const(())),List(List(b2865)),List(List(b2866)),None)
        x2910 = UnitPipe(Set(b2866),Block(Const(())),None)
          x2889 = UnitPipe(Set(),Block(Const(())),None)
          Working on pipeLatencies of result Vector(Const(()), x2886, x2884, x2888, x2885, x2881, x2887), schedule Vector(x3117, x3118, x2871, x2872, x3119, x2874, x2875, x2876, x2877, x2878, x3120, x2880, x2881, x3821, x2882, x3822, x2883, x2884, x3823, x2885, x2886, x2887, x2888)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x2886
          Computing fullDFS: x2874
          Computing fullDFS: x3118
          Computing fullDFS: x3117
          cur: x3117, inReduce: false, latency: 0.2
          Computing fullDFS: x2872
          Computing fullDFS: x2871
          Computing fullDFS: x2884
          cur: x2884, inReduce: false, latency: 0.0
          Computing fullDFS: x2888
          Computing fullDFS: x2878
          Computing fullDFS: x2877
          Computing fullDFS: x2876
          Computing fullDFS: x2885
          Computing fullDFS: x2883
          Computing fullDFS: x3120
          Computing fullDFS: x3822
          Computing fullDFS: x2882
          Computing fullDFS: x2880
          Computing fullDFS: x3119
          Computing fullDFS: x3821
          Computing fullDFS: x2881
          cur: x2881, inReduce: false, latency: 0.0
          Computing fullDFS: x3823
          Computing fullDFS: x2887
          Computing fullDFS: x2875
          Cycles: Map()
          cycles are Vector()
             stm: x3117, None
             stm: x3118, None
             stm: x2871, None
             stm: x2872, None
             stm: x3119, None
             stm: x2874, None
             stm: x2875, None
             stm: x2876, None
             stm: x2877, None
             stm: x2878, None
             stm: x3120, None
             stm: x2880, None
             stm: x2881, None
             stm: x3821, None
             stm: x2882, None
             stm: x3822, None
             stm: x2883, None
             stm: x2884, None
             stm: x3823, None
             stm: x2885, None
             stm: x2886, None
             stm: x2887, None
             stm: x2888, None
           - Latency:  5.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x2909 = UnrolledForeach(Set(),x2892,Block(Const(())),List(List(b2893)),List(List(b2894)),None)
          Working on pipeLatencies of result Vector(Const(()), x2908, x2897, x2905, x2895), schedule Vector(x2895, x2896, x2897, x2898, x2899, x2900, x2901, x2902, x3121, x3122, x3824, x2904, x3825, x3826, x3827, x2905, x2906, x3828, x2907, x3829, x2908)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x2908
          Computing fullDFS: x2907
          Computing fullDFS: x2906
          Computing fullDFS: x2905
          Computing fullDFS: x2904
          Computing fullDFS: x3122
          Computing fullDFS: x2902
          cur: x2902, inReduce: false, latency: 20.0
          Computing fullDFS: x3121
          Computing fullDFS: x3824
          Computing fullDFS: x2900
          Computing fullDFS: x2895
          cur: x2895, inReduce: false, latency: 0.0
          Computing fullDFS: x3825
          Computing fullDFS: x2899
          Computing fullDFS: x2896
          Computing fullDFS: x2898
          Computing fullDFS: x2897
          cur: x2897, inReduce: false, latency: 0.0
          Computing fullDFS: x3826
          cur: x3826, inReduce: false, latency: 0.0
          Computing fullDFS: x3827
          Computing fullDFS: x2901
          cur: x2901, inReduce: false, latency: 16.0
          Computing fullDFS: x3828
          Computing fullDFS: x3829
          cur: x3829, inReduce: false, latency: 0.0
          Cycles: Map()
          cycles are Vector()
             stm: x2895, None
             stm: x2896, None
             stm: x2897, None
             stm: x2898, None
             stm: x2899, None
             stm: x2900, None
             stm: x2901, None
             stm: x2902, None
             stm: x3121, None
             stm: x3122, None
             stm: x3824, None
             stm: x2904, None
             stm: x3825, None
             stm: x3826, None
             stm: x3827, None
             stm: x2905, None
             stm: x2906, None
             stm: x3828, None
             stm: x2907, None
             stm: x3829, None
             stm: x2908, None
           - Latency:  24.2
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
         - Interval: 1.0
        x2914 = UnitPipe(Set(b2866),Block(Const(())),None)
        Working on pipeLatencies of result Vector(Const(()), x2912), schedule Vector(x2912)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x2912
        cur: x2912, inReduce: false, latency: 1.0
        Cycles: Map()
        cycles are Vector()
           stm: x2912, None
         - Latency:  1.0
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
       - Interval: 1.0
     - Interval: 1.0
   - Interval: 15.0
