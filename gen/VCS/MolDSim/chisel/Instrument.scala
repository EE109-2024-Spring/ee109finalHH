package accel
import fringe._
import fringe.templates.memory._
import fringe.templates._
import fringe.Ledger._
import fringe.utils._
import fringe.utils.implicits._
import fringe.templates.math._
import fringe.templates.counters._
import fringe.templates.vector._
import fringe.templates.axi4._
import fringe.SpatialBlocks._
import fringe.templates.memory._
import fringe.templates.memory.implicits._
import fringe.templates.retiming._
import emul.ResidualGenerator._
import fringe.templates.euresys._
import api._
import chisel3._
import chisel3.util._
import Args._
import scala.collection.immutable._

object Instrument {
  def connect(accelUnit: AccelUnit, instrctrs: List[InstrCtr]): Unit = {
    object Block1Chunker0 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X444_cycles_arg).port.bits := instrctrs(X444_instrctr).cycs
        accelUnit.io.argOuts(api.X444_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X444_iters_arg).port.bits := instrctrs(X444_instrctr).iters
        accelUnit.io.argOuts(api.X444_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X543_cycles_arg).port.bits := instrctrs(X543_instrctr).cycs
        accelUnit.io.argOuts(api.X543_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X543_iters_arg).port.bits := instrctrs(X543_instrctr).iters
        accelUnit.io.argOuts(api.X543_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X499_cycles_arg).port.bits := instrctrs(X499_instrctr).cycs
        accelUnit.io.argOuts(api.X499_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X499_iters_arg).port.bits := instrctrs(X499_instrctr).iters
        accelUnit.io.argOuts(api.X499_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X499_stalled_arg).port.bits := instrctrs(X499_instrctr).stalls
        accelUnit.io.argOuts(api.X499_stalled_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X499_idle_arg).port.bits := instrctrs(X499_instrctr).idles
        accelUnit.io.argOuts(api.X499_idle_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X542_cycles_arg).port.bits := instrctrs(X542_instrctr).cycs
        accelUnit.io.argOuts(api.X542_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X542_iters_arg).port.bits := instrctrs(X542_instrctr).iters
        accelUnit.io.argOuts(api.X542_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X516_cycles_arg).port.bits := instrctrs(X516_instrctr).cycs
        accelUnit.io.argOuts(api.X516_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X516_iters_arg).port.bits := instrctrs(X516_instrctr).iters
        accelUnit.io.argOuts(api.X516_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X516_stalled_arg).port.bits := instrctrs(X516_instrctr).stalls
        accelUnit.io.argOuts(api.X516_stalled_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X516_idle_arg).port.bits := instrctrs(X516_instrctr).idles
        accelUnit.io.argOuts(api.X516_idle_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X541_cycles_arg).port.bits := instrctrs(X541_instrctr).cycs
        accelUnit.io.argOuts(api.X541_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X541_iters_arg).port.bits := instrctrs(X541_instrctr).iters
        accelUnit.io.argOuts(api.X541_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X541_stalled_arg).port.bits := instrctrs(X541_instrctr).stalls
        accelUnit.io.argOuts(api.X541_stalled_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X541_idle_arg).port.bits := instrctrs(X541_instrctr).idles
        accelUnit.io.argOuts(api.X541_idle_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2859_cycles_arg).port.bits := instrctrs(X2859_instrctr).cycs
        accelUnit.io.argOuts(api.X2859_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2859_iters_arg).port.bits := instrctrs(X2859_instrctr).iters
        accelUnit.io.argOuts(api.X2859_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2707_cycles_arg).port.bits := instrctrs(X2707_instrctr).cycs
        accelUnit.io.argOuts(api.X2707_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2707_iters_arg).port.bits := instrctrs(X2707_instrctr).iters
        accelUnit.io.argOuts(api.X2707_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X834_cycles_arg).port.bits := instrctrs(X834_instrctr).cycs
        accelUnit.io.argOuts(api.X834_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X834_iters_arg).port.bits := instrctrs(X834_instrctr).iters
        accelUnit.io.argOuts(api.X834_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X689_cycles_arg).port.bits := instrctrs(X689_instrctr).cycs
        Map[String,Any]()
      }
    }
    val block1chunk0: Map[String, Any] = Block1Chunker0.gen()
    object Block1Chunker1 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X689_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X689_iters_arg).port.bits := instrctrs(X689_instrctr).iters
        accelUnit.io.argOuts(api.X689_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X667_cycles_arg).port.bits := instrctrs(X667_instrctr).cycs
        accelUnit.io.argOuts(api.X667_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X667_iters_arg).port.bits := instrctrs(X667_instrctr).iters
        accelUnit.io.argOuts(api.X667_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X688_cycles_arg).port.bits := instrctrs(X688_instrctr).cycs
        accelUnit.io.argOuts(api.X688_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X688_iters_arg).port.bits := instrctrs(X688_instrctr).iters
        accelUnit.io.argOuts(api.X688_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X718_cycles_arg).port.bits := instrctrs(X718_instrctr).cycs
        accelUnit.io.argOuts(api.X718_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X718_iters_arg).port.bits := instrctrs(X718_instrctr).iters
        accelUnit.io.argOuts(api.X718_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X704_cycles_arg).port.bits := instrctrs(X704_instrctr).cycs
        accelUnit.io.argOuts(api.X704_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X704_iters_arg).port.bits := instrctrs(X704_instrctr).iters
        accelUnit.io.argOuts(api.X704_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X717_cycles_arg).port.bits := instrctrs(X717_instrctr).cycs
        accelUnit.io.argOuts(api.X717_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X717_iters_arg).port.bits := instrctrs(X717_instrctr).iters
        accelUnit.io.argOuts(api.X717_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X743_cycles_arg).port.bits := instrctrs(X743_instrctr).cycs
        accelUnit.io.argOuts(api.X743_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X743_iters_arg).port.bits := instrctrs(X743_instrctr).iters
        accelUnit.io.argOuts(api.X743_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X733_cycles_arg).port.bits := instrctrs(X733_instrctr).cycs
        accelUnit.io.argOuts(api.X733_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X733_iters_arg).port.bits := instrctrs(X733_instrctr).iters
        accelUnit.io.argOuts(api.X733_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X742_cycles_arg).port.bits := instrctrs(X742_instrctr).cycs
        accelUnit.io.argOuts(api.X742_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X742_iters_arg).port.bits := instrctrs(X742_instrctr).iters
        accelUnit.io.argOuts(api.X742_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X761_cycles_arg).port.bits := instrctrs(X761_instrctr).cycs
        accelUnit.io.argOuts(api.X761_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X761_iters_arg).port.bits := instrctrs(X761_instrctr).iters
        accelUnit.io.argOuts(api.X761_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X759_cycles_arg).port.bits := instrctrs(X759_instrctr).cycs
        accelUnit.io.argOuts(api.X759_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X759_iters_arg).port.bits := instrctrs(X759_instrctr).iters
        accelUnit.io.argOuts(api.X759_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X760_cycles_arg).port.bits := instrctrs(X760_instrctr).cycs
        accelUnit.io.argOuts(api.X760_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X760_iters_arg).port.bits := instrctrs(X760_instrctr).iters
        accelUnit.io.argOuts(api.X760_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X775_cycles_arg).port.bits := instrctrs(X775_instrctr).cycs
        accelUnit.io.argOuts(api.X775_cycles_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk1: Map[String, Any] = Block1Chunker1.gen()
    object Block1Chunker2 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X775_iters_arg).port.bits := instrctrs(X775_instrctr).iters
        accelUnit.io.argOuts(api.X775_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X773_cycles_arg).port.bits := instrctrs(X773_instrctr).cycs
        accelUnit.io.argOuts(api.X773_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X773_iters_arg).port.bits := instrctrs(X773_instrctr).iters
        accelUnit.io.argOuts(api.X773_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X774_cycles_arg).port.bits := instrctrs(X774_instrctr).cycs
        accelUnit.io.argOuts(api.X774_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X774_iters_arg).port.bits := instrctrs(X774_instrctr).iters
        accelUnit.io.argOuts(api.X774_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X780_cycles_arg).port.bits := instrctrs(X780_instrctr).cycs
        accelUnit.io.argOuts(api.X780_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X780_iters_arg).port.bits := instrctrs(X780_instrctr).iters
        accelUnit.io.argOuts(api.X780_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X777_cycles_arg).port.bits := instrctrs(X777_instrctr).cycs
        accelUnit.io.argOuts(api.X777_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X777_iters_arg).port.bits := instrctrs(X777_instrctr).iters
        accelUnit.io.argOuts(api.X777_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X779_cycles_arg).port.bits := instrctrs(X779_instrctr).cycs
        accelUnit.io.argOuts(api.X779_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X779_iters_arg).port.bits := instrctrs(X779_instrctr).iters
        accelUnit.io.argOuts(api.X779_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X813_cycles_arg).port.bits := instrctrs(X813_instrctr).cycs
        accelUnit.io.argOuts(api.X813_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X813_iters_arg).port.bits := instrctrs(X813_instrctr).iters
        accelUnit.io.argOuts(api.X813_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X798_cycles_arg).port.bits := instrctrs(X798_instrctr).cycs
        accelUnit.io.argOuts(api.X798_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X798_iters_arg).port.bits := instrctrs(X798_instrctr).iters
        accelUnit.io.argOuts(api.X798_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X812_cycles_arg).port.bits := instrctrs(X812_instrctr).cycs
        accelUnit.io.argOuts(api.X812_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X812_iters_arg).port.bits := instrctrs(X812_instrctr).iters
        accelUnit.io.argOuts(api.X812_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X833_cycles_arg).port.bits := instrctrs(X833_instrctr).cycs
        accelUnit.io.argOuts(api.X833_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X833_iters_arg).port.bits := instrctrs(X833_instrctr).iters
        accelUnit.io.argOuts(api.X833_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1042_cycles_arg).port.bits := instrctrs(X1042_instrctr).cycs
        accelUnit.io.argOuts(api.X1042_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1042_iters_arg).port.bits := instrctrs(X1042_instrctr).iters
        accelUnit.io.argOuts(api.X1042_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X897_cycles_arg).port.bits := instrctrs(X897_instrctr).cycs
        accelUnit.io.argOuts(api.X897_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X897_iters_arg).port.bits := instrctrs(X897_instrctr).iters
        accelUnit.io.argOuts(api.X897_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X875_cycles_arg).port.bits := instrctrs(X875_instrctr).cycs
        accelUnit.io.argOuts(api.X875_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X875_iters_arg).port.bits := instrctrs(X875_instrctr).iters
        Map[String,Any]()
      }
    }
    val block1chunk2: Map[String, Any] = Block1Chunker2.gen()
    object Block1Chunker3 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X875_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X896_cycles_arg).port.bits := instrctrs(X896_instrctr).cycs
        accelUnit.io.argOuts(api.X896_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X896_iters_arg).port.bits := instrctrs(X896_instrctr).iters
        accelUnit.io.argOuts(api.X896_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X926_cycles_arg).port.bits := instrctrs(X926_instrctr).cycs
        accelUnit.io.argOuts(api.X926_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X926_iters_arg).port.bits := instrctrs(X926_instrctr).iters
        accelUnit.io.argOuts(api.X926_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X912_cycles_arg).port.bits := instrctrs(X912_instrctr).cycs
        accelUnit.io.argOuts(api.X912_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X912_iters_arg).port.bits := instrctrs(X912_instrctr).iters
        accelUnit.io.argOuts(api.X912_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X925_cycles_arg).port.bits := instrctrs(X925_instrctr).cycs
        accelUnit.io.argOuts(api.X925_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X925_iters_arg).port.bits := instrctrs(X925_instrctr).iters
        accelUnit.io.argOuts(api.X925_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X951_cycles_arg).port.bits := instrctrs(X951_instrctr).cycs
        accelUnit.io.argOuts(api.X951_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X951_iters_arg).port.bits := instrctrs(X951_instrctr).iters
        accelUnit.io.argOuts(api.X951_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X941_cycles_arg).port.bits := instrctrs(X941_instrctr).cycs
        accelUnit.io.argOuts(api.X941_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X941_iters_arg).port.bits := instrctrs(X941_instrctr).iters
        accelUnit.io.argOuts(api.X941_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X950_cycles_arg).port.bits := instrctrs(X950_instrctr).cycs
        accelUnit.io.argOuts(api.X950_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X950_iters_arg).port.bits := instrctrs(X950_instrctr).iters
        accelUnit.io.argOuts(api.X950_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X969_cycles_arg).port.bits := instrctrs(X969_instrctr).cycs
        accelUnit.io.argOuts(api.X969_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X969_iters_arg).port.bits := instrctrs(X969_instrctr).iters
        accelUnit.io.argOuts(api.X969_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X967_cycles_arg).port.bits := instrctrs(X967_instrctr).cycs
        accelUnit.io.argOuts(api.X967_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X967_iters_arg).port.bits := instrctrs(X967_instrctr).iters
        accelUnit.io.argOuts(api.X967_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X968_cycles_arg).port.bits := instrctrs(X968_instrctr).cycs
        accelUnit.io.argOuts(api.X968_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X968_iters_arg).port.bits := instrctrs(X968_instrctr).iters
        accelUnit.io.argOuts(api.X968_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X983_cycles_arg).port.bits := instrctrs(X983_instrctr).cycs
        accelUnit.io.argOuts(api.X983_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X983_iters_arg).port.bits := instrctrs(X983_instrctr).iters
        accelUnit.io.argOuts(api.X983_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X981_cycles_arg).port.bits := instrctrs(X981_instrctr).cycs
        accelUnit.io.argOuts(api.X981_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X981_iters_arg).port.bits := instrctrs(X981_instrctr).iters
        accelUnit.io.argOuts(api.X981_iters_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk3: Map[String, Any] = Block1Chunker3.gen()
    object Block1Chunker4 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X982_cycles_arg).port.bits := instrctrs(X982_instrctr).cycs
        accelUnit.io.argOuts(api.X982_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X982_iters_arg).port.bits := instrctrs(X982_instrctr).iters
        accelUnit.io.argOuts(api.X982_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X988_cycles_arg).port.bits := instrctrs(X988_instrctr).cycs
        accelUnit.io.argOuts(api.X988_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X988_iters_arg).port.bits := instrctrs(X988_instrctr).iters
        accelUnit.io.argOuts(api.X988_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X985_cycles_arg).port.bits := instrctrs(X985_instrctr).cycs
        accelUnit.io.argOuts(api.X985_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X985_iters_arg).port.bits := instrctrs(X985_instrctr).iters
        accelUnit.io.argOuts(api.X985_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X987_cycles_arg).port.bits := instrctrs(X987_instrctr).cycs
        accelUnit.io.argOuts(api.X987_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X987_iters_arg).port.bits := instrctrs(X987_instrctr).iters
        accelUnit.io.argOuts(api.X987_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1021_cycles_arg).port.bits := instrctrs(X1021_instrctr).cycs
        accelUnit.io.argOuts(api.X1021_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1021_iters_arg).port.bits := instrctrs(X1021_instrctr).iters
        accelUnit.io.argOuts(api.X1021_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1006_cycles_arg).port.bits := instrctrs(X1006_instrctr).cycs
        accelUnit.io.argOuts(api.X1006_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1006_iters_arg).port.bits := instrctrs(X1006_instrctr).iters
        accelUnit.io.argOuts(api.X1006_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1020_cycles_arg).port.bits := instrctrs(X1020_instrctr).cycs
        accelUnit.io.argOuts(api.X1020_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1020_iters_arg).port.bits := instrctrs(X1020_instrctr).iters
        accelUnit.io.argOuts(api.X1020_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1041_cycles_arg).port.bits := instrctrs(X1041_instrctr).cycs
        accelUnit.io.argOuts(api.X1041_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1041_iters_arg).port.bits := instrctrs(X1041_instrctr).iters
        accelUnit.io.argOuts(api.X1041_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1250_cycles_arg).port.bits := instrctrs(X1250_instrctr).cycs
        accelUnit.io.argOuts(api.X1250_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1250_iters_arg).port.bits := instrctrs(X1250_instrctr).iters
        accelUnit.io.argOuts(api.X1250_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1105_cycles_arg).port.bits := instrctrs(X1105_instrctr).cycs
        accelUnit.io.argOuts(api.X1105_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1105_iters_arg).port.bits := instrctrs(X1105_instrctr).iters
        accelUnit.io.argOuts(api.X1105_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1083_cycles_arg).port.bits := instrctrs(X1083_instrctr).cycs
        accelUnit.io.argOuts(api.X1083_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1083_iters_arg).port.bits := instrctrs(X1083_instrctr).iters
        accelUnit.io.argOuts(api.X1083_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1104_cycles_arg).port.bits := instrctrs(X1104_instrctr).cycs
        accelUnit.io.argOuts(api.X1104_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1104_iters_arg).port.bits := instrctrs(X1104_instrctr).iters
        accelUnit.io.argOuts(api.X1104_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1134_cycles_arg).port.bits := instrctrs(X1134_instrctr).cycs
        Map[String,Any]()
      }
    }
    val block1chunk4: Map[String, Any] = Block1Chunker4.gen()
    object Block1Chunker5 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X1134_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1134_iters_arg).port.bits := instrctrs(X1134_instrctr).iters
        accelUnit.io.argOuts(api.X1134_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1120_cycles_arg).port.bits := instrctrs(X1120_instrctr).cycs
        accelUnit.io.argOuts(api.X1120_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1120_iters_arg).port.bits := instrctrs(X1120_instrctr).iters
        accelUnit.io.argOuts(api.X1120_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1133_cycles_arg).port.bits := instrctrs(X1133_instrctr).cycs
        accelUnit.io.argOuts(api.X1133_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1133_iters_arg).port.bits := instrctrs(X1133_instrctr).iters
        accelUnit.io.argOuts(api.X1133_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1159_cycles_arg).port.bits := instrctrs(X1159_instrctr).cycs
        accelUnit.io.argOuts(api.X1159_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1159_iters_arg).port.bits := instrctrs(X1159_instrctr).iters
        accelUnit.io.argOuts(api.X1159_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1149_cycles_arg).port.bits := instrctrs(X1149_instrctr).cycs
        accelUnit.io.argOuts(api.X1149_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1149_iters_arg).port.bits := instrctrs(X1149_instrctr).iters
        accelUnit.io.argOuts(api.X1149_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1158_cycles_arg).port.bits := instrctrs(X1158_instrctr).cycs
        accelUnit.io.argOuts(api.X1158_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1158_iters_arg).port.bits := instrctrs(X1158_instrctr).iters
        accelUnit.io.argOuts(api.X1158_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1177_cycles_arg).port.bits := instrctrs(X1177_instrctr).cycs
        accelUnit.io.argOuts(api.X1177_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1177_iters_arg).port.bits := instrctrs(X1177_instrctr).iters
        accelUnit.io.argOuts(api.X1177_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1175_cycles_arg).port.bits := instrctrs(X1175_instrctr).cycs
        accelUnit.io.argOuts(api.X1175_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1175_iters_arg).port.bits := instrctrs(X1175_instrctr).iters
        accelUnit.io.argOuts(api.X1175_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1176_cycles_arg).port.bits := instrctrs(X1176_instrctr).cycs
        accelUnit.io.argOuts(api.X1176_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1176_iters_arg).port.bits := instrctrs(X1176_instrctr).iters
        accelUnit.io.argOuts(api.X1176_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1191_cycles_arg).port.bits := instrctrs(X1191_instrctr).cycs
        accelUnit.io.argOuts(api.X1191_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1191_iters_arg).port.bits := instrctrs(X1191_instrctr).iters
        accelUnit.io.argOuts(api.X1191_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1189_cycles_arg).port.bits := instrctrs(X1189_instrctr).cycs
        accelUnit.io.argOuts(api.X1189_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1189_iters_arg).port.bits := instrctrs(X1189_instrctr).iters
        accelUnit.io.argOuts(api.X1189_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1190_cycles_arg).port.bits := instrctrs(X1190_instrctr).cycs
        accelUnit.io.argOuts(api.X1190_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1190_iters_arg).port.bits := instrctrs(X1190_instrctr).iters
        accelUnit.io.argOuts(api.X1190_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1196_cycles_arg).port.bits := instrctrs(X1196_instrctr).cycs
        accelUnit.io.argOuts(api.X1196_cycles_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk5: Map[String, Any] = Block1Chunker5.gen()
    object Block1Chunker6 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X1196_iters_arg).port.bits := instrctrs(X1196_instrctr).iters
        accelUnit.io.argOuts(api.X1196_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1193_cycles_arg).port.bits := instrctrs(X1193_instrctr).cycs
        accelUnit.io.argOuts(api.X1193_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1193_iters_arg).port.bits := instrctrs(X1193_instrctr).iters
        accelUnit.io.argOuts(api.X1193_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1195_cycles_arg).port.bits := instrctrs(X1195_instrctr).cycs
        accelUnit.io.argOuts(api.X1195_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1195_iters_arg).port.bits := instrctrs(X1195_instrctr).iters
        accelUnit.io.argOuts(api.X1195_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1229_cycles_arg).port.bits := instrctrs(X1229_instrctr).cycs
        accelUnit.io.argOuts(api.X1229_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1229_iters_arg).port.bits := instrctrs(X1229_instrctr).iters
        accelUnit.io.argOuts(api.X1229_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1214_cycles_arg).port.bits := instrctrs(X1214_instrctr).cycs
        accelUnit.io.argOuts(api.X1214_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1214_iters_arg).port.bits := instrctrs(X1214_instrctr).iters
        accelUnit.io.argOuts(api.X1214_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1228_cycles_arg).port.bits := instrctrs(X1228_instrctr).cycs
        accelUnit.io.argOuts(api.X1228_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1228_iters_arg).port.bits := instrctrs(X1228_instrctr).iters
        accelUnit.io.argOuts(api.X1228_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1249_cycles_arg).port.bits := instrctrs(X1249_instrctr).cycs
        accelUnit.io.argOuts(api.X1249_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1249_iters_arg).port.bits := instrctrs(X1249_instrctr).iters
        accelUnit.io.argOuts(api.X1249_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1458_cycles_arg).port.bits := instrctrs(X1458_instrctr).cycs
        accelUnit.io.argOuts(api.X1458_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1458_iters_arg).port.bits := instrctrs(X1458_instrctr).iters
        accelUnit.io.argOuts(api.X1458_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1313_cycles_arg).port.bits := instrctrs(X1313_instrctr).cycs
        accelUnit.io.argOuts(api.X1313_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1313_iters_arg).port.bits := instrctrs(X1313_instrctr).iters
        accelUnit.io.argOuts(api.X1313_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1291_cycles_arg).port.bits := instrctrs(X1291_instrctr).cycs
        accelUnit.io.argOuts(api.X1291_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1291_iters_arg).port.bits := instrctrs(X1291_instrctr).iters
        accelUnit.io.argOuts(api.X1291_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1312_cycles_arg).port.bits := instrctrs(X1312_instrctr).cycs
        accelUnit.io.argOuts(api.X1312_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1312_iters_arg).port.bits := instrctrs(X1312_instrctr).iters
        accelUnit.io.argOuts(api.X1312_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1342_cycles_arg).port.bits := instrctrs(X1342_instrctr).cycs
        accelUnit.io.argOuts(api.X1342_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1342_iters_arg).port.bits := instrctrs(X1342_instrctr).iters
        accelUnit.io.argOuts(api.X1342_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1328_cycles_arg).port.bits := instrctrs(X1328_instrctr).cycs
        accelUnit.io.argOuts(api.X1328_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1328_iters_arg).port.bits := instrctrs(X1328_instrctr).iters
        Map[String,Any]()
      }
    }
    val block1chunk6: Map[String, Any] = Block1Chunker6.gen()
    object Block1Chunker7 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X1328_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1341_cycles_arg).port.bits := instrctrs(X1341_instrctr).cycs
        accelUnit.io.argOuts(api.X1341_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1341_iters_arg).port.bits := instrctrs(X1341_instrctr).iters
        accelUnit.io.argOuts(api.X1341_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1367_cycles_arg).port.bits := instrctrs(X1367_instrctr).cycs
        accelUnit.io.argOuts(api.X1367_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1367_iters_arg).port.bits := instrctrs(X1367_instrctr).iters
        accelUnit.io.argOuts(api.X1367_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1357_cycles_arg).port.bits := instrctrs(X1357_instrctr).cycs
        accelUnit.io.argOuts(api.X1357_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1357_iters_arg).port.bits := instrctrs(X1357_instrctr).iters
        accelUnit.io.argOuts(api.X1357_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1366_cycles_arg).port.bits := instrctrs(X1366_instrctr).cycs
        accelUnit.io.argOuts(api.X1366_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1366_iters_arg).port.bits := instrctrs(X1366_instrctr).iters
        accelUnit.io.argOuts(api.X1366_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1385_cycles_arg).port.bits := instrctrs(X1385_instrctr).cycs
        accelUnit.io.argOuts(api.X1385_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1385_iters_arg).port.bits := instrctrs(X1385_instrctr).iters
        accelUnit.io.argOuts(api.X1385_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1383_cycles_arg).port.bits := instrctrs(X1383_instrctr).cycs
        accelUnit.io.argOuts(api.X1383_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1383_iters_arg).port.bits := instrctrs(X1383_instrctr).iters
        accelUnit.io.argOuts(api.X1383_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1384_cycles_arg).port.bits := instrctrs(X1384_instrctr).cycs
        accelUnit.io.argOuts(api.X1384_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1384_iters_arg).port.bits := instrctrs(X1384_instrctr).iters
        accelUnit.io.argOuts(api.X1384_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1399_cycles_arg).port.bits := instrctrs(X1399_instrctr).cycs
        accelUnit.io.argOuts(api.X1399_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1399_iters_arg).port.bits := instrctrs(X1399_instrctr).iters
        accelUnit.io.argOuts(api.X1399_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1397_cycles_arg).port.bits := instrctrs(X1397_instrctr).cycs
        accelUnit.io.argOuts(api.X1397_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1397_iters_arg).port.bits := instrctrs(X1397_instrctr).iters
        accelUnit.io.argOuts(api.X1397_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1398_cycles_arg).port.bits := instrctrs(X1398_instrctr).cycs
        accelUnit.io.argOuts(api.X1398_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1398_iters_arg).port.bits := instrctrs(X1398_instrctr).iters
        accelUnit.io.argOuts(api.X1398_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1404_cycles_arg).port.bits := instrctrs(X1404_instrctr).cycs
        accelUnit.io.argOuts(api.X1404_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1404_iters_arg).port.bits := instrctrs(X1404_instrctr).iters
        accelUnit.io.argOuts(api.X1404_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1401_cycles_arg).port.bits := instrctrs(X1401_instrctr).cycs
        accelUnit.io.argOuts(api.X1401_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1401_iters_arg).port.bits := instrctrs(X1401_instrctr).iters
        accelUnit.io.argOuts(api.X1401_iters_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk7: Map[String, Any] = Block1Chunker7.gen()
    object Block1Chunker8 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X1403_cycles_arg).port.bits := instrctrs(X1403_instrctr).cycs
        accelUnit.io.argOuts(api.X1403_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1403_iters_arg).port.bits := instrctrs(X1403_instrctr).iters
        accelUnit.io.argOuts(api.X1403_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1437_cycles_arg).port.bits := instrctrs(X1437_instrctr).cycs
        accelUnit.io.argOuts(api.X1437_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1437_iters_arg).port.bits := instrctrs(X1437_instrctr).iters
        accelUnit.io.argOuts(api.X1437_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1422_cycles_arg).port.bits := instrctrs(X1422_instrctr).cycs
        accelUnit.io.argOuts(api.X1422_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1422_iters_arg).port.bits := instrctrs(X1422_instrctr).iters
        accelUnit.io.argOuts(api.X1422_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1436_cycles_arg).port.bits := instrctrs(X1436_instrctr).cycs
        accelUnit.io.argOuts(api.X1436_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1436_iters_arg).port.bits := instrctrs(X1436_instrctr).iters
        accelUnit.io.argOuts(api.X1436_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1457_cycles_arg).port.bits := instrctrs(X1457_instrctr).cycs
        accelUnit.io.argOuts(api.X1457_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1457_iters_arg).port.bits := instrctrs(X1457_instrctr).iters
        accelUnit.io.argOuts(api.X1457_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1666_cycles_arg).port.bits := instrctrs(X1666_instrctr).cycs
        accelUnit.io.argOuts(api.X1666_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1666_iters_arg).port.bits := instrctrs(X1666_instrctr).iters
        accelUnit.io.argOuts(api.X1666_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1521_cycles_arg).port.bits := instrctrs(X1521_instrctr).cycs
        accelUnit.io.argOuts(api.X1521_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1521_iters_arg).port.bits := instrctrs(X1521_instrctr).iters
        accelUnit.io.argOuts(api.X1521_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1499_cycles_arg).port.bits := instrctrs(X1499_instrctr).cycs
        accelUnit.io.argOuts(api.X1499_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1499_iters_arg).port.bits := instrctrs(X1499_instrctr).iters
        accelUnit.io.argOuts(api.X1499_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1520_cycles_arg).port.bits := instrctrs(X1520_instrctr).cycs
        accelUnit.io.argOuts(api.X1520_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1520_iters_arg).port.bits := instrctrs(X1520_instrctr).iters
        accelUnit.io.argOuts(api.X1520_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1550_cycles_arg).port.bits := instrctrs(X1550_instrctr).cycs
        accelUnit.io.argOuts(api.X1550_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1550_iters_arg).port.bits := instrctrs(X1550_instrctr).iters
        accelUnit.io.argOuts(api.X1550_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1536_cycles_arg).port.bits := instrctrs(X1536_instrctr).cycs
        accelUnit.io.argOuts(api.X1536_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1536_iters_arg).port.bits := instrctrs(X1536_instrctr).iters
        accelUnit.io.argOuts(api.X1536_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1549_cycles_arg).port.bits := instrctrs(X1549_instrctr).cycs
        accelUnit.io.argOuts(api.X1549_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1549_iters_arg).port.bits := instrctrs(X1549_instrctr).iters
        accelUnit.io.argOuts(api.X1549_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1575_cycles_arg).port.bits := instrctrs(X1575_instrctr).cycs
        Map[String,Any]()
      }
    }
    val block1chunk8: Map[String, Any] = Block1Chunker8.gen()
    object Block1Chunker9 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X1575_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1575_iters_arg).port.bits := instrctrs(X1575_instrctr).iters
        accelUnit.io.argOuts(api.X1575_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1565_cycles_arg).port.bits := instrctrs(X1565_instrctr).cycs
        accelUnit.io.argOuts(api.X1565_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1565_iters_arg).port.bits := instrctrs(X1565_instrctr).iters
        accelUnit.io.argOuts(api.X1565_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1574_cycles_arg).port.bits := instrctrs(X1574_instrctr).cycs
        accelUnit.io.argOuts(api.X1574_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1574_iters_arg).port.bits := instrctrs(X1574_instrctr).iters
        accelUnit.io.argOuts(api.X1574_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1593_cycles_arg).port.bits := instrctrs(X1593_instrctr).cycs
        accelUnit.io.argOuts(api.X1593_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1593_iters_arg).port.bits := instrctrs(X1593_instrctr).iters
        accelUnit.io.argOuts(api.X1593_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1591_cycles_arg).port.bits := instrctrs(X1591_instrctr).cycs
        accelUnit.io.argOuts(api.X1591_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1591_iters_arg).port.bits := instrctrs(X1591_instrctr).iters
        accelUnit.io.argOuts(api.X1591_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1592_cycles_arg).port.bits := instrctrs(X1592_instrctr).cycs
        accelUnit.io.argOuts(api.X1592_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1592_iters_arg).port.bits := instrctrs(X1592_instrctr).iters
        accelUnit.io.argOuts(api.X1592_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1607_cycles_arg).port.bits := instrctrs(X1607_instrctr).cycs
        accelUnit.io.argOuts(api.X1607_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1607_iters_arg).port.bits := instrctrs(X1607_instrctr).iters
        accelUnit.io.argOuts(api.X1607_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1605_cycles_arg).port.bits := instrctrs(X1605_instrctr).cycs
        accelUnit.io.argOuts(api.X1605_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1605_iters_arg).port.bits := instrctrs(X1605_instrctr).iters
        accelUnit.io.argOuts(api.X1605_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1606_cycles_arg).port.bits := instrctrs(X1606_instrctr).cycs
        accelUnit.io.argOuts(api.X1606_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1606_iters_arg).port.bits := instrctrs(X1606_instrctr).iters
        accelUnit.io.argOuts(api.X1606_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1612_cycles_arg).port.bits := instrctrs(X1612_instrctr).cycs
        accelUnit.io.argOuts(api.X1612_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1612_iters_arg).port.bits := instrctrs(X1612_instrctr).iters
        accelUnit.io.argOuts(api.X1612_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1609_cycles_arg).port.bits := instrctrs(X1609_instrctr).cycs
        accelUnit.io.argOuts(api.X1609_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1609_iters_arg).port.bits := instrctrs(X1609_instrctr).iters
        accelUnit.io.argOuts(api.X1609_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1611_cycles_arg).port.bits := instrctrs(X1611_instrctr).cycs
        accelUnit.io.argOuts(api.X1611_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1611_iters_arg).port.bits := instrctrs(X1611_instrctr).iters
        accelUnit.io.argOuts(api.X1611_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1645_cycles_arg).port.bits := instrctrs(X1645_instrctr).cycs
        accelUnit.io.argOuts(api.X1645_cycles_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk9: Map[String, Any] = Block1Chunker9.gen()
    object Block1Chunker10 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X1645_iters_arg).port.bits := instrctrs(X1645_instrctr).iters
        accelUnit.io.argOuts(api.X1645_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1630_cycles_arg).port.bits := instrctrs(X1630_instrctr).cycs
        accelUnit.io.argOuts(api.X1630_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1630_iters_arg).port.bits := instrctrs(X1630_instrctr).iters
        accelUnit.io.argOuts(api.X1630_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1644_cycles_arg).port.bits := instrctrs(X1644_instrctr).cycs
        accelUnit.io.argOuts(api.X1644_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1644_iters_arg).port.bits := instrctrs(X1644_instrctr).iters
        accelUnit.io.argOuts(api.X1644_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1665_cycles_arg).port.bits := instrctrs(X1665_instrctr).cycs
        accelUnit.io.argOuts(api.X1665_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1665_iters_arg).port.bits := instrctrs(X1665_instrctr).iters
        accelUnit.io.argOuts(api.X1665_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1874_cycles_arg).port.bits := instrctrs(X1874_instrctr).cycs
        accelUnit.io.argOuts(api.X1874_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1874_iters_arg).port.bits := instrctrs(X1874_instrctr).iters
        accelUnit.io.argOuts(api.X1874_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1729_cycles_arg).port.bits := instrctrs(X1729_instrctr).cycs
        accelUnit.io.argOuts(api.X1729_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1729_iters_arg).port.bits := instrctrs(X1729_instrctr).iters
        accelUnit.io.argOuts(api.X1729_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1707_cycles_arg).port.bits := instrctrs(X1707_instrctr).cycs
        accelUnit.io.argOuts(api.X1707_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1707_iters_arg).port.bits := instrctrs(X1707_instrctr).iters
        accelUnit.io.argOuts(api.X1707_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1728_cycles_arg).port.bits := instrctrs(X1728_instrctr).cycs
        accelUnit.io.argOuts(api.X1728_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1728_iters_arg).port.bits := instrctrs(X1728_instrctr).iters
        accelUnit.io.argOuts(api.X1728_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1758_cycles_arg).port.bits := instrctrs(X1758_instrctr).cycs
        accelUnit.io.argOuts(api.X1758_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1758_iters_arg).port.bits := instrctrs(X1758_instrctr).iters
        accelUnit.io.argOuts(api.X1758_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1744_cycles_arg).port.bits := instrctrs(X1744_instrctr).cycs
        accelUnit.io.argOuts(api.X1744_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1744_iters_arg).port.bits := instrctrs(X1744_instrctr).iters
        accelUnit.io.argOuts(api.X1744_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1757_cycles_arg).port.bits := instrctrs(X1757_instrctr).cycs
        accelUnit.io.argOuts(api.X1757_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1757_iters_arg).port.bits := instrctrs(X1757_instrctr).iters
        accelUnit.io.argOuts(api.X1757_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1783_cycles_arg).port.bits := instrctrs(X1783_instrctr).cycs
        accelUnit.io.argOuts(api.X1783_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1783_iters_arg).port.bits := instrctrs(X1783_instrctr).iters
        accelUnit.io.argOuts(api.X1783_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1773_cycles_arg).port.bits := instrctrs(X1773_instrctr).cycs
        accelUnit.io.argOuts(api.X1773_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1773_iters_arg).port.bits := instrctrs(X1773_instrctr).iters
        Map[String,Any]()
      }
    }
    val block1chunk10: Map[String, Any] = Block1Chunker10.gen()
    object Block1Chunker11 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X1773_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1782_cycles_arg).port.bits := instrctrs(X1782_instrctr).cycs
        accelUnit.io.argOuts(api.X1782_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1782_iters_arg).port.bits := instrctrs(X1782_instrctr).iters
        accelUnit.io.argOuts(api.X1782_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1801_cycles_arg).port.bits := instrctrs(X1801_instrctr).cycs
        accelUnit.io.argOuts(api.X1801_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1801_iters_arg).port.bits := instrctrs(X1801_instrctr).iters
        accelUnit.io.argOuts(api.X1801_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1799_cycles_arg).port.bits := instrctrs(X1799_instrctr).cycs
        accelUnit.io.argOuts(api.X1799_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1799_iters_arg).port.bits := instrctrs(X1799_instrctr).iters
        accelUnit.io.argOuts(api.X1799_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1800_cycles_arg).port.bits := instrctrs(X1800_instrctr).cycs
        accelUnit.io.argOuts(api.X1800_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1800_iters_arg).port.bits := instrctrs(X1800_instrctr).iters
        accelUnit.io.argOuts(api.X1800_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1815_cycles_arg).port.bits := instrctrs(X1815_instrctr).cycs
        accelUnit.io.argOuts(api.X1815_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1815_iters_arg).port.bits := instrctrs(X1815_instrctr).iters
        accelUnit.io.argOuts(api.X1815_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1813_cycles_arg).port.bits := instrctrs(X1813_instrctr).cycs
        accelUnit.io.argOuts(api.X1813_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1813_iters_arg).port.bits := instrctrs(X1813_instrctr).iters
        accelUnit.io.argOuts(api.X1813_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1814_cycles_arg).port.bits := instrctrs(X1814_instrctr).cycs
        accelUnit.io.argOuts(api.X1814_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1814_iters_arg).port.bits := instrctrs(X1814_instrctr).iters
        accelUnit.io.argOuts(api.X1814_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1820_cycles_arg).port.bits := instrctrs(X1820_instrctr).cycs
        accelUnit.io.argOuts(api.X1820_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1820_iters_arg).port.bits := instrctrs(X1820_instrctr).iters
        accelUnit.io.argOuts(api.X1820_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1817_cycles_arg).port.bits := instrctrs(X1817_instrctr).cycs
        accelUnit.io.argOuts(api.X1817_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1817_iters_arg).port.bits := instrctrs(X1817_instrctr).iters
        accelUnit.io.argOuts(api.X1817_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1819_cycles_arg).port.bits := instrctrs(X1819_instrctr).cycs
        accelUnit.io.argOuts(api.X1819_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1819_iters_arg).port.bits := instrctrs(X1819_instrctr).iters
        accelUnit.io.argOuts(api.X1819_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1853_cycles_arg).port.bits := instrctrs(X1853_instrctr).cycs
        accelUnit.io.argOuts(api.X1853_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1853_iters_arg).port.bits := instrctrs(X1853_instrctr).iters
        accelUnit.io.argOuts(api.X1853_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1838_cycles_arg).port.bits := instrctrs(X1838_instrctr).cycs
        accelUnit.io.argOuts(api.X1838_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1838_iters_arg).port.bits := instrctrs(X1838_instrctr).iters
        accelUnit.io.argOuts(api.X1838_iters_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk11: Map[String, Any] = Block1Chunker11.gen()
    object Block1Chunker12 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X1852_cycles_arg).port.bits := instrctrs(X1852_instrctr).cycs
        accelUnit.io.argOuts(api.X1852_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1852_iters_arg).port.bits := instrctrs(X1852_instrctr).iters
        accelUnit.io.argOuts(api.X1852_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1873_cycles_arg).port.bits := instrctrs(X1873_instrctr).cycs
        accelUnit.io.argOuts(api.X1873_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1873_iters_arg).port.bits := instrctrs(X1873_instrctr).iters
        accelUnit.io.argOuts(api.X1873_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2082_cycles_arg).port.bits := instrctrs(X2082_instrctr).cycs
        accelUnit.io.argOuts(api.X2082_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2082_iters_arg).port.bits := instrctrs(X2082_instrctr).iters
        accelUnit.io.argOuts(api.X2082_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1937_cycles_arg).port.bits := instrctrs(X1937_instrctr).cycs
        accelUnit.io.argOuts(api.X1937_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1937_iters_arg).port.bits := instrctrs(X1937_instrctr).iters
        accelUnit.io.argOuts(api.X1937_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1915_cycles_arg).port.bits := instrctrs(X1915_instrctr).cycs
        accelUnit.io.argOuts(api.X1915_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1915_iters_arg).port.bits := instrctrs(X1915_instrctr).iters
        accelUnit.io.argOuts(api.X1915_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1936_cycles_arg).port.bits := instrctrs(X1936_instrctr).cycs
        accelUnit.io.argOuts(api.X1936_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1936_iters_arg).port.bits := instrctrs(X1936_instrctr).iters
        accelUnit.io.argOuts(api.X1936_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1966_cycles_arg).port.bits := instrctrs(X1966_instrctr).cycs
        accelUnit.io.argOuts(api.X1966_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1966_iters_arg).port.bits := instrctrs(X1966_instrctr).iters
        accelUnit.io.argOuts(api.X1966_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1952_cycles_arg).port.bits := instrctrs(X1952_instrctr).cycs
        accelUnit.io.argOuts(api.X1952_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1952_iters_arg).port.bits := instrctrs(X1952_instrctr).iters
        accelUnit.io.argOuts(api.X1952_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1965_cycles_arg).port.bits := instrctrs(X1965_instrctr).cycs
        accelUnit.io.argOuts(api.X1965_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1965_iters_arg).port.bits := instrctrs(X1965_instrctr).iters
        accelUnit.io.argOuts(api.X1965_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1991_cycles_arg).port.bits := instrctrs(X1991_instrctr).cycs
        accelUnit.io.argOuts(api.X1991_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1991_iters_arg).port.bits := instrctrs(X1991_instrctr).iters
        accelUnit.io.argOuts(api.X1991_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1981_cycles_arg).port.bits := instrctrs(X1981_instrctr).cycs
        accelUnit.io.argOuts(api.X1981_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1981_iters_arg).port.bits := instrctrs(X1981_instrctr).iters
        accelUnit.io.argOuts(api.X1981_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1990_cycles_arg).port.bits := instrctrs(X1990_instrctr).cycs
        accelUnit.io.argOuts(api.X1990_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X1990_iters_arg).port.bits := instrctrs(X1990_instrctr).iters
        accelUnit.io.argOuts(api.X1990_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2009_cycles_arg).port.bits := instrctrs(X2009_instrctr).cycs
        Map[String,Any]()
      }
    }
    val block1chunk12: Map[String, Any] = Block1Chunker12.gen()
    object Block1Chunker13 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2009_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2009_iters_arg).port.bits := instrctrs(X2009_instrctr).iters
        accelUnit.io.argOuts(api.X2009_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2007_cycles_arg).port.bits := instrctrs(X2007_instrctr).cycs
        accelUnit.io.argOuts(api.X2007_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2007_iters_arg).port.bits := instrctrs(X2007_instrctr).iters
        accelUnit.io.argOuts(api.X2007_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2008_cycles_arg).port.bits := instrctrs(X2008_instrctr).cycs
        accelUnit.io.argOuts(api.X2008_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2008_iters_arg).port.bits := instrctrs(X2008_instrctr).iters
        accelUnit.io.argOuts(api.X2008_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2023_cycles_arg).port.bits := instrctrs(X2023_instrctr).cycs
        accelUnit.io.argOuts(api.X2023_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2023_iters_arg).port.bits := instrctrs(X2023_instrctr).iters
        accelUnit.io.argOuts(api.X2023_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2021_cycles_arg).port.bits := instrctrs(X2021_instrctr).cycs
        accelUnit.io.argOuts(api.X2021_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2021_iters_arg).port.bits := instrctrs(X2021_instrctr).iters
        accelUnit.io.argOuts(api.X2021_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2022_cycles_arg).port.bits := instrctrs(X2022_instrctr).cycs
        accelUnit.io.argOuts(api.X2022_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2022_iters_arg).port.bits := instrctrs(X2022_instrctr).iters
        accelUnit.io.argOuts(api.X2022_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2028_cycles_arg).port.bits := instrctrs(X2028_instrctr).cycs
        accelUnit.io.argOuts(api.X2028_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2028_iters_arg).port.bits := instrctrs(X2028_instrctr).iters
        accelUnit.io.argOuts(api.X2028_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2025_cycles_arg).port.bits := instrctrs(X2025_instrctr).cycs
        accelUnit.io.argOuts(api.X2025_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2025_iters_arg).port.bits := instrctrs(X2025_instrctr).iters
        accelUnit.io.argOuts(api.X2025_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2027_cycles_arg).port.bits := instrctrs(X2027_instrctr).cycs
        accelUnit.io.argOuts(api.X2027_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2027_iters_arg).port.bits := instrctrs(X2027_instrctr).iters
        accelUnit.io.argOuts(api.X2027_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2061_cycles_arg).port.bits := instrctrs(X2061_instrctr).cycs
        accelUnit.io.argOuts(api.X2061_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2061_iters_arg).port.bits := instrctrs(X2061_instrctr).iters
        accelUnit.io.argOuts(api.X2061_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2046_cycles_arg).port.bits := instrctrs(X2046_instrctr).cycs
        accelUnit.io.argOuts(api.X2046_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2046_iters_arg).port.bits := instrctrs(X2046_instrctr).iters
        accelUnit.io.argOuts(api.X2046_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2060_cycles_arg).port.bits := instrctrs(X2060_instrctr).cycs
        accelUnit.io.argOuts(api.X2060_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2060_iters_arg).port.bits := instrctrs(X2060_instrctr).iters
        accelUnit.io.argOuts(api.X2060_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2081_cycles_arg).port.bits := instrctrs(X2081_instrctr).cycs
        accelUnit.io.argOuts(api.X2081_cycles_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk13: Map[String, Any] = Block1Chunker13.gen()
    object Block1Chunker14 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2081_iters_arg).port.bits := instrctrs(X2081_instrctr).iters
        accelUnit.io.argOuts(api.X2081_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2290_cycles_arg).port.bits := instrctrs(X2290_instrctr).cycs
        accelUnit.io.argOuts(api.X2290_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2290_iters_arg).port.bits := instrctrs(X2290_instrctr).iters
        accelUnit.io.argOuts(api.X2290_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2145_cycles_arg).port.bits := instrctrs(X2145_instrctr).cycs
        accelUnit.io.argOuts(api.X2145_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2145_iters_arg).port.bits := instrctrs(X2145_instrctr).iters
        accelUnit.io.argOuts(api.X2145_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2123_cycles_arg).port.bits := instrctrs(X2123_instrctr).cycs
        accelUnit.io.argOuts(api.X2123_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2123_iters_arg).port.bits := instrctrs(X2123_instrctr).iters
        accelUnit.io.argOuts(api.X2123_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2144_cycles_arg).port.bits := instrctrs(X2144_instrctr).cycs
        accelUnit.io.argOuts(api.X2144_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2144_iters_arg).port.bits := instrctrs(X2144_instrctr).iters
        accelUnit.io.argOuts(api.X2144_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2174_cycles_arg).port.bits := instrctrs(X2174_instrctr).cycs
        accelUnit.io.argOuts(api.X2174_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2174_iters_arg).port.bits := instrctrs(X2174_instrctr).iters
        accelUnit.io.argOuts(api.X2174_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2160_cycles_arg).port.bits := instrctrs(X2160_instrctr).cycs
        accelUnit.io.argOuts(api.X2160_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2160_iters_arg).port.bits := instrctrs(X2160_instrctr).iters
        accelUnit.io.argOuts(api.X2160_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2173_cycles_arg).port.bits := instrctrs(X2173_instrctr).cycs
        accelUnit.io.argOuts(api.X2173_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2173_iters_arg).port.bits := instrctrs(X2173_instrctr).iters
        accelUnit.io.argOuts(api.X2173_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2199_cycles_arg).port.bits := instrctrs(X2199_instrctr).cycs
        accelUnit.io.argOuts(api.X2199_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2199_iters_arg).port.bits := instrctrs(X2199_instrctr).iters
        accelUnit.io.argOuts(api.X2199_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2189_cycles_arg).port.bits := instrctrs(X2189_instrctr).cycs
        accelUnit.io.argOuts(api.X2189_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2189_iters_arg).port.bits := instrctrs(X2189_instrctr).iters
        accelUnit.io.argOuts(api.X2189_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2198_cycles_arg).port.bits := instrctrs(X2198_instrctr).cycs
        accelUnit.io.argOuts(api.X2198_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2198_iters_arg).port.bits := instrctrs(X2198_instrctr).iters
        accelUnit.io.argOuts(api.X2198_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2217_cycles_arg).port.bits := instrctrs(X2217_instrctr).cycs
        accelUnit.io.argOuts(api.X2217_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2217_iters_arg).port.bits := instrctrs(X2217_instrctr).iters
        accelUnit.io.argOuts(api.X2217_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2215_cycles_arg).port.bits := instrctrs(X2215_instrctr).cycs
        accelUnit.io.argOuts(api.X2215_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2215_iters_arg).port.bits := instrctrs(X2215_instrctr).iters
        Map[String,Any]()
      }
    }
    val block1chunk14: Map[String, Any] = Block1Chunker14.gen()
    object Block1Chunker15 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2215_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2216_cycles_arg).port.bits := instrctrs(X2216_instrctr).cycs
        accelUnit.io.argOuts(api.X2216_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2216_iters_arg).port.bits := instrctrs(X2216_instrctr).iters
        accelUnit.io.argOuts(api.X2216_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2231_cycles_arg).port.bits := instrctrs(X2231_instrctr).cycs
        accelUnit.io.argOuts(api.X2231_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2231_iters_arg).port.bits := instrctrs(X2231_instrctr).iters
        accelUnit.io.argOuts(api.X2231_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2229_cycles_arg).port.bits := instrctrs(X2229_instrctr).cycs
        accelUnit.io.argOuts(api.X2229_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2229_iters_arg).port.bits := instrctrs(X2229_instrctr).iters
        accelUnit.io.argOuts(api.X2229_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2230_cycles_arg).port.bits := instrctrs(X2230_instrctr).cycs
        accelUnit.io.argOuts(api.X2230_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2230_iters_arg).port.bits := instrctrs(X2230_instrctr).iters
        accelUnit.io.argOuts(api.X2230_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2236_cycles_arg).port.bits := instrctrs(X2236_instrctr).cycs
        accelUnit.io.argOuts(api.X2236_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2236_iters_arg).port.bits := instrctrs(X2236_instrctr).iters
        accelUnit.io.argOuts(api.X2236_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2233_cycles_arg).port.bits := instrctrs(X2233_instrctr).cycs
        accelUnit.io.argOuts(api.X2233_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2233_iters_arg).port.bits := instrctrs(X2233_instrctr).iters
        accelUnit.io.argOuts(api.X2233_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2235_cycles_arg).port.bits := instrctrs(X2235_instrctr).cycs
        accelUnit.io.argOuts(api.X2235_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2235_iters_arg).port.bits := instrctrs(X2235_instrctr).iters
        accelUnit.io.argOuts(api.X2235_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2269_cycles_arg).port.bits := instrctrs(X2269_instrctr).cycs
        accelUnit.io.argOuts(api.X2269_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2269_iters_arg).port.bits := instrctrs(X2269_instrctr).iters
        accelUnit.io.argOuts(api.X2269_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2254_cycles_arg).port.bits := instrctrs(X2254_instrctr).cycs
        accelUnit.io.argOuts(api.X2254_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2254_iters_arg).port.bits := instrctrs(X2254_instrctr).iters
        accelUnit.io.argOuts(api.X2254_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2268_cycles_arg).port.bits := instrctrs(X2268_instrctr).cycs
        accelUnit.io.argOuts(api.X2268_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2268_iters_arg).port.bits := instrctrs(X2268_instrctr).iters
        accelUnit.io.argOuts(api.X2268_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2289_cycles_arg).port.bits := instrctrs(X2289_instrctr).cycs
        accelUnit.io.argOuts(api.X2289_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2289_iters_arg).port.bits := instrctrs(X2289_instrctr).iters
        accelUnit.io.argOuts(api.X2289_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2498_cycles_arg).port.bits := instrctrs(X2498_instrctr).cycs
        accelUnit.io.argOuts(api.X2498_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2498_iters_arg).port.bits := instrctrs(X2498_instrctr).iters
        accelUnit.io.argOuts(api.X2498_iters_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk15: Map[String, Any] = Block1Chunker15.gen()
    object Block1Chunker16 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2353_cycles_arg).port.bits := instrctrs(X2353_instrctr).cycs
        accelUnit.io.argOuts(api.X2353_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2353_iters_arg).port.bits := instrctrs(X2353_instrctr).iters
        accelUnit.io.argOuts(api.X2353_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2331_cycles_arg).port.bits := instrctrs(X2331_instrctr).cycs
        accelUnit.io.argOuts(api.X2331_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2331_iters_arg).port.bits := instrctrs(X2331_instrctr).iters
        accelUnit.io.argOuts(api.X2331_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2352_cycles_arg).port.bits := instrctrs(X2352_instrctr).cycs
        accelUnit.io.argOuts(api.X2352_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2352_iters_arg).port.bits := instrctrs(X2352_instrctr).iters
        accelUnit.io.argOuts(api.X2352_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2382_cycles_arg).port.bits := instrctrs(X2382_instrctr).cycs
        accelUnit.io.argOuts(api.X2382_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2382_iters_arg).port.bits := instrctrs(X2382_instrctr).iters
        accelUnit.io.argOuts(api.X2382_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2368_cycles_arg).port.bits := instrctrs(X2368_instrctr).cycs
        accelUnit.io.argOuts(api.X2368_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2368_iters_arg).port.bits := instrctrs(X2368_instrctr).iters
        accelUnit.io.argOuts(api.X2368_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2381_cycles_arg).port.bits := instrctrs(X2381_instrctr).cycs
        accelUnit.io.argOuts(api.X2381_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2381_iters_arg).port.bits := instrctrs(X2381_instrctr).iters
        accelUnit.io.argOuts(api.X2381_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2407_cycles_arg).port.bits := instrctrs(X2407_instrctr).cycs
        accelUnit.io.argOuts(api.X2407_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2407_iters_arg).port.bits := instrctrs(X2407_instrctr).iters
        accelUnit.io.argOuts(api.X2407_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2397_cycles_arg).port.bits := instrctrs(X2397_instrctr).cycs
        accelUnit.io.argOuts(api.X2397_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2397_iters_arg).port.bits := instrctrs(X2397_instrctr).iters
        accelUnit.io.argOuts(api.X2397_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2406_cycles_arg).port.bits := instrctrs(X2406_instrctr).cycs
        accelUnit.io.argOuts(api.X2406_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2406_iters_arg).port.bits := instrctrs(X2406_instrctr).iters
        accelUnit.io.argOuts(api.X2406_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2425_cycles_arg).port.bits := instrctrs(X2425_instrctr).cycs
        accelUnit.io.argOuts(api.X2425_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2425_iters_arg).port.bits := instrctrs(X2425_instrctr).iters
        accelUnit.io.argOuts(api.X2425_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2423_cycles_arg).port.bits := instrctrs(X2423_instrctr).cycs
        accelUnit.io.argOuts(api.X2423_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2423_iters_arg).port.bits := instrctrs(X2423_instrctr).iters
        accelUnit.io.argOuts(api.X2423_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2424_cycles_arg).port.bits := instrctrs(X2424_instrctr).cycs
        accelUnit.io.argOuts(api.X2424_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2424_iters_arg).port.bits := instrctrs(X2424_instrctr).iters
        accelUnit.io.argOuts(api.X2424_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2439_cycles_arg).port.bits := instrctrs(X2439_instrctr).cycs
        Map[String,Any]()
      }
    }
    val block1chunk16: Map[String, Any] = Block1Chunker16.gen()
    object Block1Chunker17 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2439_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2439_iters_arg).port.bits := instrctrs(X2439_instrctr).iters
        accelUnit.io.argOuts(api.X2439_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2437_cycles_arg).port.bits := instrctrs(X2437_instrctr).cycs
        accelUnit.io.argOuts(api.X2437_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2437_iters_arg).port.bits := instrctrs(X2437_instrctr).iters
        accelUnit.io.argOuts(api.X2437_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2438_cycles_arg).port.bits := instrctrs(X2438_instrctr).cycs
        accelUnit.io.argOuts(api.X2438_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2438_iters_arg).port.bits := instrctrs(X2438_instrctr).iters
        accelUnit.io.argOuts(api.X2438_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2444_cycles_arg).port.bits := instrctrs(X2444_instrctr).cycs
        accelUnit.io.argOuts(api.X2444_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2444_iters_arg).port.bits := instrctrs(X2444_instrctr).iters
        accelUnit.io.argOuts(api.X2444_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2441_cycles_arg).port.bits := instrctrs(X2441_instrctr).cycs
        accelUnit.io.argOuts(api.X2441_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2441_iters_arg).port.bits := instrctrs(X2441_instrctr).iters
        accelUnit.io.argOuts(api.X2441_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2443_cycles_arg).port.bits := instrctrs(X2443_instrctr).cycs
        accelUnit.io.argOuts(api.X2443_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2443_iters_arg).port.bits := instrctrs(X2443_instrctr).iters
        accelUnit.io.argOuts(api.X2443_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2477_cycles_arg).port.bits := instrctrs(X2477_instrctr).cycs
        accelUnit.io.argOuts(api.X2477_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2477_iters_arg).port.bits := instrctrs(X2477_instrctr).iters
        accelUnit.io.argOuts(api.X2477_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2462_cycles_arg).port.bits := instrctrs(X2462_instrctr).cycs
        accelUnit.io.argOuts(api.X2462_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2462_iters_arg).port.bits := instrctrs(X2462_instrctr).iters
        accelUnit.io.argOuts(api.X2462_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2476_cycles_arg).port.bits := instrctrs(X2476_instrctr).cycs
        accelUnit.io.argOuts(api.X2476_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2476_iters_arg).port.bits := instrctrs(X2476_instrctr).iters
        accelUnit.io.argOuts(api.X2476_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2497_cycles_arg).port.bits := instrctrs(X2497_instrctr).cycs
        accelUnit.io.argOuts(api.X2497_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2497_iters_arg).port.bits := instrctrs(X2497_instrctr).iters
        accelUnit.io.argOuts(api.X2497_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2706_cycles_arg).port.bits := instrctrs(X2706_instrctr).cycs
        accelUnit.io.argOuts(api.X2706_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2706_iters_arg).port.bits := instrctrs(X2706_instrctr).iters
        accelUnit.io.argOuts(api.X2706_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2561_cycles_arg).port.bits := instrctrs(X2561_instrctr).cycs
        accelUnit.io.argOuts(api.X2561_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2561_iters_arg).port.bits := instrctrs(X2561_instrctr).iters
        accelUnit.io.argOuts(api.X2561_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2539_cycles_arg).port.bits := instrctrs(X2539_instrctr).cycs
        accelUnit.io.argOuts(api.X2539_cycles_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk17: Map[String, Any] = Block1Chunker17.gen()
    object Block1Chunker18 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2539_iters_arg).port.bits := instrctrs(X2539_instrctr).iters
        accelUnit.io.argOuts(api.X2539_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2560_cycles_arg).port.bits := instrctrs(X2560_instrctr).cycs
        accelUnit.io.argOuts(api.X2560_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2560_iters_arg).port.bits := instrctrs(X2560_instrctr).iters
        accelUnit.io.argOuts(api.X2560_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2590_cycles_arg).port.bits := instrctrs(X2590_instrctr).cycs
        accelUnit.io.argOuts(api.X2590_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2590_iters_arg).port.bits := instrctrs(X2590_instrctr).iters
        accelUnit.io.argOuts(api.X2590_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2576_cycles_arg).port.bits := instrctrs(X2576_instrctr).cycs
        accelUnit.io.argOuts(api.X2576_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2576_iters_arg).port.bits := instrctrs(X2576_instrctr).iters
        accelUnit.io.argOuts(api.X2576_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2589_cycles_arg).port.bits := instrctrs(X2589_instrctr).cycs
        accelUnit.io.argOuts(api.X2589_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2589_iters_arg).port.bits := instrctrs(X2589_instrctr).iters
        accelUnit.io.argOuts(api.X2589_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2615_cycles_arg).port.bits := instrctrs(X2615_instrctr).cycs
        accelUnit.io.argOuts(api.X2615_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2615_iters_arg).port.bits := instrctrs(X2615_instrctr).iters
        accelUnit.io.argOuts(api.X2615_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2605_cycles_arg).port.bits := instrctrs(X2605_instrctr).cycs
        accelUnit.io.argOuts(api.X2605_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2605_iters_arg).port.bits := instrctrs(X2605_instrctr).iters
        accelUnit.io.argOuts(api.X2605_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2614_cycles_arg).port.bits := instrctrs(X2614_instrctr).cycs
        accelUnit.io.argOuts(api.X2614_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2614_iters_arg).port.bits := instrctrs(X2614_instrctr).iters
        accelUnit.io.argOuts(api.X2614_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2633_cycles_arg).port.bits := instrctrs(X2633_instrctr).cycs
        accelUnit.io.argOuts(api.X2633_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2633_iters_arg).port.bits := instrctrs(X2633_instrctr).iters
        accelUnit.io.argOuts(api.X2633_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2631_cycles_arg).port.bits := instrctrs(X2631_instrctr).cycs
        accelUnit.io.argOuts(api.X2631_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2631_iters_arg).port.bits := instrctrs(X2631_instrctr).iters
        accelUnit.io.argOuts(api.X2631_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2632_cycles_arg).port.bits := instrctrs(X2632_instrctr).cycs
        accelUnit.io.argOuts(api.X2632_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2632_iters_arg).port.bits := instrctrs(X2632_instrctr).iters
        accelUnit.io.argOuts(api.X2632_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2647_cycles_arg).port.bits := instrctrs(X2647_instrctr).cycs
        accelUnit.io.argOuts(api.X2647_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2647_iters_arg).port.bits := instrctrs(X2647_instrctr).iters
        accelUnit.io.argOuts(api.X2647_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2645_cycles_arg).port.bits := instrctrs(X2645_instrctr).cycs
        accelUnit.io.argOuts(api.X2645_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2645_iters_arg).port.bits := instrctrs(X2645_instrctr).iters
        Map[String,Any]()
      }
    }
    val block1chunk18: Map[String, Any] = Block1Chunker18.gen()
    object Block1Chunker19 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2645_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2646_cycles_arg).port.bits := instrctrs(X2646_instrctr).cycs
        accelUnit.io.argOuts(api.X2646_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2646_iters_arg).port.bits := instrctrs(X2646_instrctr).iters
        accelUnit.io.argOuts(api.X2646_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2652_cycles_arg).port.bits := instrctrs(X2652_instrctr).cycs
        accelUnit.io.argOuts(api.X2652_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2652_iters_arg).port.bits := instrctrs(X2652_instrctr).iters
        accelUnit.io.argOuts(api.X2652_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2649_cycles_arg).port.bits := instrctrs(X2649_instrctr).cycs
        accelUnit.io.argOuts(api.X2649_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2649_iters_arg).port.bits := instrctrs(X2649_instrctr).iters
        accelUnit.io.argOuts(api.X2649_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2651_cycles_arg).port.bits := instrctrs(X2651_instrctr).cycs
        accelUnit.io.argOuts(api.X2651_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2651_iters_arg).port.bits := instrctrs(X2651_instrctr).iters
        accelUnit.io.argOuts(api.X2651_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2685_cycles_arg).port.bits := instrctrs(X2685_instrctr).cycs
        accelUnit.io.argOuts(api.X2685_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2685_iters_arg).port.bits := instrctrs(X2685_instrctr).iters
        accelUnit.io.argOuts(api.X2685_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2670_cycles_arg).port.bits := instrctrs(X2670_instrctr).cycs
        accelUnit.io.argOuts(api.X2670_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2670_iters_arg).port.bits := instrctrs(X2670_instrctr).iters
        accelUnit.io.argOuts(api.X2670_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2684_cycles_arg).port.bits := instrctrs(X2684_instrctr).cycs
        accelUnit.io.argOuts(api.X2684_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2684_iters_arg).port.bits := instrctrs(X2684_instrctr).iters
        accelUnit.io.argOuts(api.X2684_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2705_cycles_arg).port.bits := instrctrs(X2705_instrctr).cycs
        accelUnit.io.argOuts(api.X2705_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2705_iters_arg).port.bits := instrctrs(X2705_instrctr).iters
        accelUnit.io.argOuts(api.X2705_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2858_cycles_arg).port.bits := instrctrs(X2858_instrctr).cycs
        accelUnit.io.argOuts(api.X2858_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2858_iters_arg).port.bits := instrctrs(X2858_instrctr).iters
        accelUnit.io.argOuts(api.X2858_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2740_cycles_arg).port.bits := instrctrs(X2740_instrctr).cycs
        accelUnit.io.argOuts(api.X2740_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2740_iters_arg).port.bits := instrctrs(X2740_instrctr).iters
        accelUnit.io.argOuts(api.X2740_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2753_cycles_arg).port.bits := instrctrs(X2753_instrctr).cycs
        accelUnit.io.argOuts(api.X2753_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2753_iters_arg).port.bits := instrctrs(X2753_instrctr).iters
        accelUnit.io.argOuts(api.X2753_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2766_cycles_arg).port.bits := instrctrs(X2766_instrctr).cycs
        accelUnit.io.argOuts(api.X2766_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2766_iters_arg).port.bits := instrctrs(X2766_instrctr).iters
        accelUnit.io.argOuts(api.X2766_iters_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk19: Map[String, Any] = Block1Chunker19.gen()
    object Block1Chunker20 { // 49 nodes, 49 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2779_cycles_arg).port.bits := instrctrs(X2779_instrctr).cycs
        accelUnit.io.argOuts(api.X2779_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2779_iters_arg).port.bits := instrctrs(X2779_instrctr).iters
        accelUnit.io.argOuts(api.X2779_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2792_cycles_arg).port.bits := instrctrs(X2792_instrctr).cycs
        accelUnit.io.argOuts(api.X2792_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2792_iters_arg).port.bits := instrctrs(X2792_instrctr).iters
        accelUnit.io.argOuts(api.X2792_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2805_cycles_arg).port.bits := instrctrs(X2805_instrctr).cycs
        accelUnit.io.argOuts(api.X2805_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2805_iters_arg).port.bits := instrctrs(X2805_instrctr).iters
        accelUnit.io.argOuts(api.X2805_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2818_cycles_arg).port.bits := instrctrs(X2818_instrctr).cycs
        accelUnit.io.argOuts(api.X2818_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2818_iters_arg).port.bits := instrctrs(X2818_instrctr).iters
        accelUnit.io.argOuts(api.X2818_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2831_cycles_arg).port.bits := instrctrs(X2831_instrctr).cycs
        accelUnit.io.argOuts(api.X2831_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2831_iters_arg).port.bits := instrctrs(X2831_instrctr).iters
        accelUnit.io.argOuts(api.X2831_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2844_cycles_arg).port.bits := instrctrs(X2844_instrctr).cycs
        accelUnit.io.argOuts(api.X2844_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2844_iters_arg).port.bits := instrctrs(X2844_instrctr).iters
        accelUnit.io.argOuts(api.X2844_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2857_cycles_arg).port.bits := instrctrs(X2857_instrctr).cycs
        accelUnit.io.argOuts(api.X2857_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2857_iters_arg).port.bits := instrctrs(X2857_instrctr).iters
        accelUnit.io.argOuts(api.X2857_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2916_cycles_arg).port.bits := instrctrs(X2916_instrctr).cycs
        accelUnit.io.argOuts(api.X2916_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2916_iters_arg).port.bits := instrctrs(X2916_instrctr).iters
        accelUnit.io.argOuts(api.X2916_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2915_cycles_arg).port.bits := instrctrs(X2915_instrctr).cycs
        accelUnit.io.argOuts(api.X2915_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2915_iters_arg).port.bits := instrctrs(X2915_instrctr).iters
        accelUnit.io.argOuts(api.X2915_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2910_cycles_arg).port.bits := instrctrs(X2910_instrctr).cycs
        accelUnit.io.argOuts(api.X2910_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2910_iters_arg).port.bits := instrctrs(X2910_instrctr).iters
        accelUnit.io.argOuts(api.X2910_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2889_cycles_arg).port.bits := instrctrs(X2889_instrctr).cycs
        accelUnit.io.argOuts(api.X2889_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2889_iters_arg).port.bits := instrctrs(X2889_instrctr).iters
        accelUnit.io.argOuts(api.X2889_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2889_stalled_arg).port.bits := instrctrs(X2889_instrctr).stalls
        accelUnit.io.argOuts(api.X2889_stalled_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2889_idle_arg).port.bits := instrctrs(X2889_instrctr).idles
        accelUnit.io.argOuts(api.X2889_idle_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2909_cycles_arg).port.bits := instrctrs(X2909_instrctr).cycs
        Map[String,Any]()
      }
    }
    val block1chunk20: Map[String, Any] = Block1Chunker20.gen()
    object Block1Chunker21 { // 15 nodes, 15 weight
      def gen(): Map[String, Any] = {
        accelUnit.io.argOuts(api.X2909_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2909_iters_arg).port.bits := instrctrs(X2909_instrctr).iters
        accelUnit.io.argOuts(api.X2909_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2909_stalled_arg).port.bits := instrctrs(X2909_instrctr).stalls
        accelUnit.io.argOuts(api.X2909_stalled_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2909_idle_arg).port.bits := instrctrs(X2909_instrctr).idles
        accelUnit.io.argOuts(api.X2909_idle_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2914_cycles_arg).port.bits := instrctrs(X2914_instrctr).cycs
        accelUnit.io.argOuts(api.X2914_cycles_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2914_iters_arg).port.bits := instrctrs(X2914_instrctr).iters
        accelUnit.io.argOuts(api.X2914_iters_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2914_stalled_arg).port.bits := instrctrs(X2914_instrctr).stalls
        accelUnit.io.argOuts(api.X2914_stalled_arg).port.valid := accelUnit.io.enable
        accelUnit.io.argOuts(api.X2914_idle_arg).port.bits := instrctrs(X2914_instrctr).idles
        accelUnit.io.argOuts(api.X2914_idle_arg).port.valid := accelUnit.io.enable
        Map[String,Any]()
      }
    }
    val block1chunk21: Map[String, Any] = Block1Chunker21.gen()
    val numArgOuts_breakpts = 0
  }
}
